{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Sistemas operativos monopuesto - Curso 25/26","text":"<p>Cr\u00e9ditos y licencia</p> <p>Estos apuntes se han elaborado en parte a partir de los materiales de Rafael Lozano, disponibles bajo licencia CC BY-NC-SA 4.0. Los presentes apuntes se comparten bajo la misma licencia CC BY-NC-SA 4.0.</p>"},{"location":"#introduccion","title":"Introducci\u00f3n","text":"<p>Bienvenido a los apuntes del m\u00f3dulo profesional de Sistemas operativos monopuesto que se imparte en el primer curso del Ciclo formativo de Grado Medio de Sistemas Microinform\u00e1ticos y Redes.</p> <p>Tiene una duraci\u00f3n de 160 horas, distribuidas en 5 horas semanales.</p> <p>Este m\u00f3dulo profesional contiene la formaci\u00f3n necesaria para desempe\u00f1ar la funci\u00f3n de instalaci\u00f3n y explotaci\u00f3n de sistemas operativos monopuesto. La definici\u00f3n de estas funciones incluye aspectos como:</p> <ul> <li>La instalaci\u00f3n y actualizaci\u00f3n de sistemas operativos para su utilizaci\u00f3n en sistemas microinform\u00e1ticos.</li> <li>La utilizaci\u00f3n de las funcionalidades del sistema microinform\u00e1tico mediante las herramientas del sistema operativo.</li> <li>El control y seguimiento de la actividad y rendimiento del sistema operativo.</li> <li>La determinaci\u00f3n y utilizaci\u00f3n de los recursos compartidos del sistema operativo.</li> <li>La gesti\u00f3n de los usuarios y grupos del sistema, as\u00ed como sus perfiles y permisos.</li> <li>La utilizaci\u00f3n de mecanismos de virtualizaci\u00f3n para la realizaci\u00f3n de pruebas.</li> </ul> <p>Las actividades profesionales asociadas a esta funci\u00f3n se aplican en:</p> <ul> <li>La instalaci\u00f3n y actualizaci\u00f3n de sistemas operativos en equipos independientes.</li> <li>La utilizaci\u00f3n avanzada del sistema operativo.</li> <li>La asistencia al usuario final sobre el uso del sistema operativo.</li> </ul>"},{"location":"#objetivos","title":"Objetivos","text":"<p>El m\u00f3dulo busca que el alumnado alance los siguientes objetivos expresados como resultados de aprendizaje:</p> <ul> <li>Reconoce las caracter\u00edsticas de los sistemas operativos analizando sus elementos y funciones.</li> <li>Instala sistemas operativos, relacionando sus caracter\u00edsticas con el hardware del equipo y el software de aplicaci\u00f3n.</li> <li>Realiza tareas b\u00e1sicas de configuraci\u00f3n de sistemas operativos, interpretando requerimientos y describiendo los procedimientos seguidos.</li> <li>Realiza operaciones b\u00e1sicas de administraci\u00f3n de sistemas operativos, interpretando requerimientos y optimizando el sistema para su uso.</li> <li>Crea m\u00e1quinas virtuales identificando su campo de aplicaci\u00f3n e instalando software espec\u00edfico.</li> </ul>"},{"location":"#sesiones","title":"Sesiones","text":"<ul> <li>Mi\u00e9rcoles de 13:00 a 15:00 horas.</li> <li>Jueves de 12:00 a 15:00 horas.</li> </ul>"},{"location":"#contenidos","title":"Contenidos","text":"<p>Los contenidos exigidos al m\u00f3dulo se van a trabajar a trav\u00e9s de 6 unidades did\u00e1cticas a lo largo del curso:</p> Trimestre Unidad Did\u00e1ctica Primer Trimestre 1. Introducci\u00f3n a los sistemas operativos2. Instalaci\u00f3n y m\u00e1quinas virtuales con Windows y Linux3. Configuraci\u00f3n y administraci\u00f3n de sistemas operativos basados en Linux Segundo Trimestre 4. Configuraci\u00f3n y administraci\u00f3n de sistemas operativos Windows Tercer Trimestre 5. Programaci\u00f3n en Bash6. Resoluci\u00f3n de problemas en un PC"},{"location":"#metodologia","title":"Metodolog\u00eda","text":"<p>La metodolog\u00eda de las clases se basar\u00e1 en una estructura te\u00f3rico-pr\u00e1ctica. El profesor comenzar\u00e1 explicando los fundamentos te\u00f3ricos del tema, apoy\u00e1ndose en ejemplos y ejercicios tipo para ilustrar los conceptos clave. Posteriormente, se propondr\u00e1n ejercicios y pr\u00e1cticas que los alumnos deber\u00e1n resolver, con tiempo dedicado durante la clase para que trabajen de manera aut\u00f3noma o en grupo. Durante este per\u00edodo, el profesor estar\u00e1 disponible para resolver dudas, fomentar el an\u00e1lisis y orientar a los estudiantes en la correcta aplicaci\u00f3n de los conceptos aprendidos.</p>"},{"location":"#evaluacion","title":"Evaluaci\u00f3n","text":"<p>Se realizar\u00e1 mediante la superaci\u00f3n de los resultados de aprendizaje. La calificaci\u00f3n final del m\u00f3dulo se realizar\u00e1 seg\u00fan la ponderaci\u00f3n de los RA que aparecen en la programaci\u00f3n did\u00e1ctica.</p> <p>Los instrumentos que se usar\u00e1n para evaluar ser\u00e1n los siguientes:</p> <ul> <li>Ejercicios te\u00f3ricos o pr\u00e1cticos individuales o en grupo.</li> <li>Pruebas te\u00f3ricas objetivas.</li> <li>Pruebas pr\u00e1cticas objetivas.</li> </ul>"},{"location":"#contacto","title":"Contacto","text":"<p>A trav\u00e9s del correo electr\u00f3nico corporativo o de la plataforma Moodle centros.</p>"},{"location":"#evaluacion-inicial","title":"Evaluaci\u00f3n inicial","text":"<p>Puedes encontrar la evaluaci\u00f3n inicial del m\u00f3dulo en el siguiente enlace.</p>"},{"location":"pr1.1/","title":"Pr\u00e1ctica 1.1 - El sistema operativo y c\u00f3mo representa la informaci\u00f3n","text":""},{"location":"pr1.1/#parte-1-cuestionario","title":"Parte 1 - Cuestionario","text":"<ol> <li>Define con tus palabras qu\u00e9 es un sistema operativo (1\u20132 l\u00edneas).</li> <li>Pon un ejemplo de hardware, uno de software y uno de perif\u00e9rico.</li> <li>(V/F) Sin sistema operativo, las aplicaciones podr\u00edan usar el hardware con la misma facilidad.</li> <li>Dibuja un esquema por capas con: Usuarios \u2192 Aplicaciones \u2192 SO \u2192 Drivers \u2192 Hardware (etiqueta cada capa con 1 ejemplo real).</li> <li>En una frase, diferencia archivo y carpeta.</li> <li>Se\u00f1ala la ruta absoluta y la relativa (marca con A o B):           a) C:\\Usuarios\\Ana\\Fotos\\gato.jpg       b) Documentos\\apuntes.txt </li> <li>\u00bfPara qu\u00e9 sirve la extensi\u00f3n de un archivo? Pon 2 ejemplos.</li> <li>(V/F) En GNU/Linux, los archivos que empiezan por punto (.oculto) no se muestran por defecto.</li> <li>foto.PNG y foto.png \u00bfson el mismo archivo en todos los sistemas? Explica en 1 l\u00ednea.</li> <li>Relaciona (traza flechas): Archivo \u2192 Contenido, Directorio \u2192 Contiene entradas de archivos, Metadatos \u2192 Tama\u00f1o/fechas/propietario.</li> <li>\u00bfQu\u00e9 es metadato? Escribe un ejemplo.</li> <li>Dibuja un mini-\u00e1rbol con una carpeta Curso y dentro Apuntes, Practicas y el archivo indice.txt.</li> <li>Completa: 1 byte = __ bits.</li> <li>Convierte 1101\u2082 a decimal (muestra el c\u00e1lculo con potencias de 2).</li> <li>Pasa A (hex) a binario.</li> <li>\u00bfPor qu\u00e9 UTF-8 es mejor opci\u00f3n que ASCII para textos con tildes y \u201c\u00f1\u201d?</li> <li>Tu conexi\u00f3n dice 100 Mb/s. \u00bfA cu\u00e1ntos MB/s equivale aproximadamente? (pista: 8 bits = 1 byte)</li> <li>Se\u00f1ala la unidad correcta para capacidad y para velocidad (elige):     a) Capacidad: [ Mb | MB | GB ]        b) Velocidad de red: [ Mb/s | MB | GiB ]</li> <li>Nombra tres funciones del sistema operativo (por ejemplo \u201cgestiona ___\u201d).</li> <li>\u00bfQu\u00e9 es un proceso? (1 l\u00ednea)</li> <li>El planificador reparte ___ entre procesos (elige: RAM / CPU / pantalla).</li> <li>(V/F) Si un proceso se \u201ccuelga\u201d, el sistema se apaga forzosamente.</li> <li>Marca si la tarea es CPU-bound o I/O-bound:     a) Comprimir un v\u00eddeo grande \u2192 __ ;      b) Copiar mil fotos a un pendrive \u2192 __ </li> <li>\u00bfPor qu\u00e9 existe la memoria virtual? (elige la mejor)     a) Para que los v\u00eddeos se vean en 4K.     b) Para simular m\u00e1s memoria usando disco cuando la RAM no alcanza.     c) Para que los iconos se vean m\u00e1s bonitos.</li> <li>Completa: los permisos indican qui\u00e9n puede hacer qu\u00e9 con un archivo o carpeta.</li> <li>En Linux, \u00bfqu\u00e9 significa r en un archivo? \u00bfy x en un directorio? (1 palabra cada uno).</li> <li>(V/F) En Windows, \u201csolo lectura\u201d es un atributo; los permisos detallados se configuran en Seguridad (ACL).</li> <li>\u00bfPara qu\u00e9 sirve tener usuarios y grupos distintos en un equipo? (indica dos):<ul> <li>Organizaci\u00f3n</li> <li>Seguridad </li> <li>Decoraci\u00f3n de iconos </li> <li>Control de acceso</li> </ul> </li> <li>\u00bfPor qu\u00e9 no es buena idea poner \u201cpermiso total para todos\u201d en una carpeta compartida?</li> <li>Define en 1 l\u00ednea qu\u00e9 es una transacci\u00f3n.</li> <li>Explica en 1\u20132 l\u00edneas qu\u00e9 hace el journaling de un sistema de archivos.</li> <li>(V/F) Con journaling, tras un corte de luz el sistema tarda menos en recuperar el estado.</li> <li>\u00bfQu\u00e9 recomendaci\u00f3n debes seguir siempre con un USB antes de retirarlo?</li> <li>Elige el sistema de archivos m\u00e1s adecuado para cada caso (marca 1):     a) USB que usar\u00e1s en Windows, macOS y Linux: [ FAT32 | exFAT | NTFS ]     b) Disco del sistema en Windows: [ FAT32 | exFAT | NTFS ]     c) Datos en GNU/Linux: [ ext4 | exFAT | FAT32 ]</li> </ol>"},{"location":"pr1.1/#parte-2-mi-sistema-operativo-en-una-pagina","title":"Parte 2 - Mi sistema operativo en una p\u00e1gina","text":"<p>Elabora una ficha clara y visual sobre un sistema operativo actual (a elegir: Windows 11 o Ubuntu), usando lenguaje sencillo y apoyos visuales. No hace falta entrar en comandos ni configuraciones avanzadas.</p> <ol> <li>\u00bfQu\u00e9 es y para qu\u00e9 sirve? (2\u20133 frases)</li> <li>Funciones principales (3 vi\u00f1etas): procesos, memoria, archivos, red\u2026</li> <li>C\u00f3mo organiza los datos: qu\u00e9 es un archivo, una carpeta, y ejemplos de extensiones t\u00edpicas.</li> <li>Sistema de archivos por defecto (n\u00f3mbralo; p. ej., NTFS, ext4, APFS) y una ventaja pr\u00e1ctica (p. ej., journaling).</li> <li>Buenas pr\u00e1cticas de uso (3 vi\u00f1etas): expulsar USB, actualizar, cuenta no admin\u2026</li> <li>Mini-glosario (4 t\u00e9rminos): proceso, permiso, extensi\u00f3n, journaling.</li> <li>Un esquema simple (dibujado o incrustado): \u201cUsuario \u2192 Aplicaciones \u2192 SO \u2192 Hardware\u201d.</li> </ol>"},{"location":"pr1.1/#criterios-de-evaluacion","title":"Criterios de evaluaci\u00f3n","text":"<p>Esta tarea eval\u00faa todos los criterios de evaluaci\u00f3n del RA1.</p>"},{"location":"pr1.1/#metodo-de-entrada","title":"M\u00e9todo de entrada","text":"<p>Crea un \u00fanico archivo PDF y s\u00fabelo a la tarea correspondiente en la plataforma Moodle Centros con la siguiente nomenclatura:</p> <p>Apellido1Apellido2_Nombre_SOM_PR1-1.pdf</p>"},{"location":"pr2.1/","title":"Pr\u00e1ctica 2.1 - Instalaci\u00f3n de una m\u00e1quina virtual con Windows 11","text":""},{"location":"pr2.1/#descripcion-de-la-tarea","title":"Descripci\u00f3n de la tarea","text":"<p>Documenta todo el proceso de instalaci\u00f3n de una m\u00e1quina virtual con Windows 11 en VirtualBox, siguiendo los pasos de los apuntes.</p>"},{"location":"pr2.1/#entrega","title":"Entrega","text":"<p>Crea un documento PDF, a partir de un Word o Google Docs, con las siguientes consideraciones:</p> <ul> <li>El nombre del archivo a entregar en la plataforma Moodle Centros debe tener el siguiente formato: <code>Apellido1Apellido2_Nombre_SOM_UD2_P1.pdf</code>.</li> <li>Portada con imagen, nombre del alumno, t\u00edtulo y curso.</li> <li>Encabezado con nombre de la pr\u00e1ctica y materia.</li> <li>Pie de p\u00e1gina con nombre, n\u00famero de p\u00e1gina insertado, curso, a\u00f1o escolar, instituto.</li> <li>\u00cdndice o tabla de contenidos generada autom\u00e1ticamente.</li> <li>Tipo de letra: Times New Roman 12 o similar, interlineado sencillo, espaciado anterior 6p.</li> <li>Uso correcto de la ortograf\u00eda.</li> <li>Texto justificado con uso de salto de p\u00e1ginas correcto.</li> <li>Enlaces web de referencia cuando se coge informaci\u00f3n de un sitio web.</li> <li>Las fotos que se puedan ver correctamente al ampliarlas y que no ocupen mucho espacio.</li> <li>Insertar T\u00edtulo de foto que haga referencia al apartado y ejercicio correspondiente.</li> <li>Para las capturas de pantalla de las m\u00e1quinas virtuales:<ul> <li>Se captura todo el escritorio de la m\u00e1quina virtual donde se pueda leer el nombre de la m\u00e1quina, con el fondo de su plataforma Moodle, donde se pueda ver imagen de perfil. Toda aquella pr\u00e1ctica que no cumpla este requisito no ser\u00e1 evaluada.</li> <li>Al igual que en los T\u00edtulos de las fotos, en el T\u00edtulo de la captura de pantalla ir\u00e1 referenciado el apartado y ejercicio al que corresponde.</li> </ul> </li> </ul>"},{"location":"pr2.2/","title":"Pr\u00e1ctica 2.2 - Instalaci\u00f3n de una m\u00e1quina virtual con Lubuntu","text":""},{"location":"pr2.2/#descripcion-de-la-tarea","title":"Descripci\u00f3n de la tarea","text":"<p>Documenta todo el proceso de instalaci\u00f3n de una m\u00e1quina virtual con Lubuntu 24.04 en VirtualBox, siguiendo los pasos de los apuntes.</p>"},{"location":"pr2.2/#entrega","title":"Entrega","text":"<p>Crea un documento PDF, a partir de un Word o Google Docs, con las siguientes consideraciones:</p> <ul> <li>El nombre del archivo a entregar en la plataforma Moodle Centros debe tener el siguiente formato: <code>Apellido1Apellido2_Nombre_SOM_UD2_P2.pdf</code>.</li> <li>Portada con imagen, nombre del alumno, t\u00edtulo y curso.</li> <li>Encabezado con nombre de la pr\u00e1ctica y materia.</li> <li>Pie de p\u00e1gina con nombre, n\u00famero de p\u00e1gina insertado, curso, a\u00f1o escolar, instituto.</li> <li>\u00cdndice o tabla de contenidos generada autom\u00e1ticamente.</li> <li>Tipo de letra: Times New Roman 12 o similar, interlineado sencillo, espaciado anterior 6p.</li> <li>Uso correcto de la ortograf\u00eda.</li> <li>Texto justificado con uso de salto de p\u00e1ginas correcto.</li> <li>Enlaces web de referencia cuando se coge informaci\u00f3n de un sitio web.</li> <li>Las fotos que se puedan ver correctamente al ampliarlas y que no ocupen mucho espacio.</li> <li>Insertar T\u00edtulo de foto que haga referencia al apartado y ejercicio correspondiente.</li> <li>Para las capturas de pantalla de las m\u00e1quinas virtuales:<ul> <li>Se captura todo el escritorio de la m\u00e1quina virtual donde se pueda leer el nombre de la m\u00e1quina, con el fondo de su plataforma Moodle, donde se pueda ver imagen de perfil. Toda aquella pr\u00e1ctica que no cumpla este requisito no ser\u00e1 evaluada.</li> <li>Al igual que en los T\u00edtulos de las fotos, en el T\u00edtulo de la captura de pantalla ir\u00e1 referenciado el apartado y ejercicio al que corresponde.</li> </ul> </li> </ul>"},{"location":"pr2.3/","title":"Pr\u00e1ctica 2.3 - Creaci\u00f3n de una unidad USB booteable con Rufus y Ventoy","text":""},{"location":"pr2.3/#descripcion-de-la-tarea","title":"Descripci\u00f3n de la tarea","text":"<p>Documenta todo el proceso de creaci\u00f3n de una unidad USB booteable con Rufus (con Ubuntu 24.04 LTS) y Ventoy (incluye al menos 3 ISOs de sistemas operativos distintos), siguiendo los pasos de los apuntes.</p>"},{"location":"pr2.3/#entrega","title":"Entrega","text":"<p>Crea un documento PDF, a partir de un Word o Google Docs, con las siguientes consideraciones:</p> <ul> <li>El nombre del archivo a entregar en la plataforma Moodle Centros debe tener el siguiente formato: <code>Apellido1Apellido2_Nombre_SOM_UD2_P3.pdf</code>.</li> <li>Portada con imagen, nombre del alumno, t\u00edtulo y curso.</li> <li>Encabezado con nombre de la pr\u00e1ctica y materia.</li> <li>Pie de p\u00e1gina con nombre, n\u00famero de p\u00e1gina insertado, curso, a\u00f1o escolar, instituto.</li> <li>\u00cdndice o tabla de contenidos generada autom\u00e1ticamente.</li> <li>Tipo de letra: Times New Roman 12 o similar, interlineado sencillo, espaciado anterior 6p.</li> <li>Uso correcto de la ortograf\u00eda.</li> <li>Texto justificado con uso de salto de p\u00e1ginas correcto.</li> <li>Enlaces web de referencia cuando se coge informaci\u00f3n de un sitio web.</li> <li>Las fotos que se puedan ver correctamente al ampliarlas y que no ocupen mucho espacio.</li> <li>Insertar T\u00edtulo de foto que haga referencia al apartado y ejercicio correspondiente.</li> <li>Para las capturas de pantalla de las m\u00e1quinas virtuales:<ul> <li>Se captura todo el escritorio de la m\u00e1quina virtual donde se pueda leer el nombre de la m\u00e1quina, con el fondo de su plataforma Moodle, donde se pueda ver imagen de perfil. Toda aquella pr\u00e1ctica que no cumpla este requisito no ser\u00e1 evaluada.</li> <li>Al igual que en los T\u00edtulos de las fotos, en el T\u00edtulo de la captura de pantalla ir\u00e1 referenciado el apartado y ejercicio al que corresponde.</li> </ul> </li> </ul>"},{"location":"ud1/","title":"Unidad 1 - Introducci\u00f3n a los sistemas operativos","text":""},{"location":"ud1/#el-sistema-informatico-vision-global","title":"El sistema inform\u00e1tico: visi\u00f3n global","text":""},{"location":"ud1/#que-es-un-sistema-informatico-y-como-se-organiza","title":"\u00bfQu\u00e9 es un sistema inform\u00e1tico y c\u00f3mo se organiza?","text":"<p>Un sistema inform\u00e1tico puede entenderse como una colaboraci\u00f3n estructurada entre tres actores: hardware, software y personas usuarias. El hardware aporta la capacidad f\u00edsica de calcular, almacenar y comunicarse (CPU, memoria, discos, perif\u00e9ricos). El software dirige ese hardware con instrucciones y reglas (sistema operativo y aplicaciones). Las personas definen objetivos y criterios: qu\u00e9 datos introducir, qu\u00e9 transformaciones realizar y cu\u00e1ndo considerar v\u00e1lido el resultado.</p> <p>El sistema operativo (SO) ocupa una posici\u00f3n central: es el \u201cdirector de orquesta\u201d que reparte tiempo de CPU entre programas, asigna memoria, coordina dispositivos de entrada/salida y organiza la informaci\u00f3n en archivos y carpetas. Sin \u00e9l, las aplicaciones tendr\u00edan que hablar directamente con cada pieza de hardware, algo inviable por complejidad y seguridad.</p> <p>Para visualizar esta colaboraci\u00f3n, resulta \u00fatil seguir una tarea cotidiana. Al guardar un documento desde un procesador de textos, el programa pide al SO \u201cabre/crea este archivo y escribe estos bytes\u201d. El SO valida permisos, decide d\u00f3nde guardarlo (en qu\u00e9 bloques del disco) y coordina al controlador del SSD para que la escritura sea segura y eficiente. Cuando vuelve la confirmaci\u00f3n, la aplicaci\u00f3n muestra \u201cguardado\u201d.</p>"},{"location":"ud1/#componentes-esenciales-de-hardware-vision-funcional","title":"Componentes esenciales de hardware (visi\u00f3n funcional)","text":"<p>La CPU ejecuta instrucciones y realiza operaciones l\u00f3gicas y aritm\u00e9ticas. Trabaja apoyada por registros (muy r\u00e1pidos y peque\u00f1os) y por memoria cach\u00e9, que intenta tener \u201ca mano\u201d los datos e instrucciones m\u00e1s probables. La memoria RAM es el banco de trabajo temporal: all\u00ed residen los programas y datos mientras se usan. El almacenamiento (HDD/SSD/NVMe) conserva la informaci\u00f3n aunque se apague el equipo; su fortaleza es la persistencia, no la velocidad de acceso. Los dispositivos de E/S (teclado, pantalla, red, impresora) permiten introducir y presentar informaci\u00f3n o conectarse con otros equipos. La placa base y sus buses interconectan todo lo anterior, mientras la fuente de alimentaci\u00f3n entrega energ\u00eda estable. Por debajo del SO opera el firmware (BIOS/UEFI): comprueba que el hardware es utilizable y arranca el sistema.</p> <p>M\u00e1s all\u00e1 de los nombres, lo importante es comprender c\u00f3mo impacta cada pieza en el uso diario: una CPU moderna abrir\u00e1 programas con soltura si puede alimentarse de datos r\u00e1pido; suficiente RAM evitar\u00e1 que el sistema \u201ctire de disco\u201d (lo que lo hace m\u00e1s lento); un SSD recorta tiempos de carga; una tarjeta de red estable mejora descargas y videollamadas. El rendimiento percibido es el resultado del equilibrio entre estas partes.</p>"},{"location":"ud1/#interrelacion-y-flujo-de-informacion-modelo-de-von-neumann","title":"Interrelaci\u00f3n y flujo de informaci\u00f3n (modelo de Von Neumann)","text":"<p>La mayor\u00eda de ordenadores personales siguen el modelo de von Neumann, en el que instrucciones y datos residen en una misma memoria y viajan por los mismos buses. La CPU ejecuta lo que se llama ciclo de instrucci\u00f3n:</p> <ol> <li>B\u00fasqueda (fetch): trae de memoria la instrucci\u00f3n apuntada por el contador de programa.</li> <li>Decodificaci\u00f3n (decode): interpreta qu\u00e9 operaci\u00f3n es y con qu\u00e9 datos trabajar\u00e1.</li> <li>Ejecuci\u00f3n (execute): realiza el c\u00e1lculo, comparaci\u00f3n o movimiento solicitado.</li> <li>Escritura de resultados (write-back): guarda el resultado en un registro o en memoria.</li> <li>Actualizaci\u00f3n del contador de programa: pasa a la siguiente instrucci\u00f3n (o salta).</li> </ol> <p></p> <p>Este ciclo se repite millones de veces por segundo. Para ganar velocidad, las CPUs modernas solapan etapas (pipeline) y recurren a memorias cach\u00e9 que reducen esperas. Aunque estos detalles son internos, su efecto s\u00ed se nota: programas que \u201cresponden al instante\u201d frente a otros que \u201cpiensan\u201d porque dependen de datos a\u00fan no disponibles.</p> <p>Un comentario frecuente es la diferencia entre este modelo y el Harvard (instrucciones y datos por caminos separados). En PCs corrientes basta con recordar que el esquema von Neumann es el predominante; la idea de Harvard aparece a veces de forma parcial dentro de las cach\u00e9s (l\u00edneas separadas para instrucciones y datos).</p>"},{"location":"ud1/#buses-como-se-mueven-las-senales","title":"Buses: c\u00f3mo se mueven las se\u00f1ales","text":"<p>Para coordinar CPU, memoria y dispositivos se usan buses: conjuntos de l\u00edneas el\u00e9ctricas o enlaces serie de alta velocidad que transportan datos, direcciones y se\u00f1ales de control (leer, escribir, interrupciones, reloj).</p> <p>En un equipo actual conviven varios tipos. PCI Express (PCIe) conecta dispositivos de alto rendimiento (gr\u00e1ficas, SSD NVMe, tarjetas de red avanzadas) con enlaces escalables por \u201cl\u00edneas\u201d (x1, x4, x16). SATA une discos duros y SSDs de tipo 2,5\u201d. USB sirve de conector universal para perif\u00e9ricos y almacenamiento externo; sus versiones (2.0/3.x) marcan l\u00edmites de velocidad muy distintos. La memoria conversa con la CPU por canales dedicados de alta prioridad, porque cualquier retraso all\u00ed se nota en todo.</p> <p>Un matiz clave: ancho de banda (lo que puede pasar por el \u201ctubo\u201d) no es lo mismo que latencia (lo que tarda en empezar a fluir). Copiar un archivo grande por USB 3.0 aprovecha bien el ancho de banda; abrir miles de ficheros diminutos castiga la latencia y puede ser m\u00e1s lento aunque la cifra \u201cGB/s\u201d sea alta.</p>"},{"location":"ud1/#jerarquia-de-memoria-rapidez-frente-a-capacidad","title":"Jerarqu\u00eda de memoria: rapidez frente a capacidad","text":"<p>La memoria de un ordenador se organiza en una jerarqu\u00eda donde, al subir hacia la CPU, todo es m\u00e1s r\u00e1pido y caro, pero m\u00e1s peque\u00f1o:</p> <ul> <li>Registros (dentro de la CPU): acceso casi instant\u00e1neo, tama\u00f1o min\u00fasculo.</li> <li>Cach\u00e9s (L1/L2/L3): muy r\u00e1pidas; anticipan datos e instrucciones probables.</li> <li>RAM: grande y razonablemente r\u00e1pida; es el \u201ctaller\u201d de trabajo.</li> <li>Almacenamiento (SSD/HDD): enorme y persistente, pero mucho m\u00e1s lento que la RAM.</li> </ul> <p></p> <p>Cuando un programa necesita datos, la CPU los busca primero en cach\u00e9; si no est\u00e1n, sube a niveles m\u00e1s lentos (RAM, e incluso disco si falta memoria y hay memoria virtual). Esta escalera explica fen\u00f3menos comunes: con poca RAM, el sistema recurre al archivo de intercambio y todo se vuelve pesado; con suficiente RAM, los cambios entre aplicaciones resultan fluidos porque ya est\u00e1n en cach\u00e9.</p>"},{"location":"ud1/#entradasalida-que-el-equipo-no-se-pare-al-usar-dispositivos","title":"Entrada/salida: que el equipo no se \"pare\" al usar dispositivos","text":"<p>Los dispositivos (disco, red, teclado, impresora) necesitan atenci\u00f3n de la CPU, pero no conviene que todo se detenga mientras la impresora termina una p\u00e1gina o el SSD mueve bloques. Para evitarlo se emplean dos ideas pr\u00e1cticas:</p> <ul> <li>Interrupciones: el dispositivo \u201cavisa\u201d cuando algo importante sucede (termin\u00f3 una lectura, lleg\u00f3 un paquete de red). La CPU atiende r\u00e1pidamente esa se\u00f1al y vuelve a lo suyo.</li> <li>DMA (Acceso Directo a Memoria): el dispositivo (o su controlador) puede transferir datos a RAM sin que la CPU copie byte a byte. La CPU solo configura la operaci\u00f3n y es avisada al finalizar.</li> </ul> <p>El resultado para el usuario es que el equipo sigue respondiendo mientras se descargan archivos, se imprime o se copia informaci\u00f3n en segundo plano.</p>"},{"location":"ud1/#componentes-logicos-del-firmware-al-sistema-operativo","title":"Componentes l\u00f3gicos: del firmware al sistema operativo","text":"<p>Al encender, el firmware (BIOS/UEFI) realiza un autodiagn\u00f3stico, detecta los dispositivos y localiza un cargador de arranque en la unidad correspondiente. Ese cargador inicia el kernel del sistema operativo, que a su vez identifica hardware, carga controladores (drivers) y monta el sistema de archivos principal. A partir de ah\u00ed, el SO ofrece servicios a las aplicaciones: abrir archivos, mostrar ventanas, conectarse a Internet, crear procesos, etc. Todo acceso al hardware pasa por el SO y sus drivers, lo que da estabilidad y seguridad (por ejemplo, evitar que un programa cualquiera bloquee el teclado o lea memoria de otro programa).</p>"},{"location":"ud1/#representacion-de-la-informacion","title":"Representaci\u00f3n de la informaci\u00f3n","text":""},{"location":"ud1/#de-los-datos-a-la-informacion-idea-general","title":"De los datos a la informaci\u00f3n: idea general","text":"<p>En un ordenador todo se reduce a secuencias de bits (0 y 1). Un bit por s\u00ed solo apenas expresa algo; la informaci\u00f3n aparece cuando agrupamos bits siguiendo reglas de representaci\u00f3n: un conjunto de 8 bits forma un byte y, dependiendo del contexto, ese byte puede representar el n\u00famero 97, la letra \u201ca\u201d, parte del color de un p\u00edxel o una porci\u00f3n del sonido de una canci\u00f3n. El sistema operativo y las aplicaciones interpretan esos bits gracias a convenciones (sistemas de numeraci\u00f3n, tablas de caracteres, formatos de archivo). Comprender esas reglas permite explicar por qu\u00e9 un archivo ocupa lo que ocupa, por qu\u00e9 algunos textos \u201csalen con s\u00edmbolos raros\u201d, o por qu\u00e9 una imagen sin comprimir pesa mucho.</p>"},{"location":"ud1/#sistemas-de-numeracion-decimal-binario-y-haxadecimal","title":"Sistemas de numeraci\u00f3n: decimal, binario y haxadecimal","text":"<p>Los n\u00fameros se pueden escribir en distintas bases. En clase y en la vida diaria usamos base 10 (decimal). Los ordenadores operan en base 2 (binario) porque es natural para circuitos que detectan dos estados (alto/bajo, 1/0). Para los humanos, el hexadecimal (base 16) es una notaci\u00f3n compacta del binario.</p> <p>Notaci\u00f3n posicional (recordatorio breve). En cualquier base, el valor de un n\u00famero depende de sus cifras y de su posici\u00f3n. En decimal, 507 = 5\u00d710\u00b2 + 0\u00d710\u00b9 + 7\u00d710\u2070. En binario, 1011\u2082 = 1\u00d72\u00b3 + 0\u00d72\u00b2 + 1\u00d72\u00b9 + 1\u00d72\u2070 = 11\u2081\u2080.</p> <p>Por qu\u00e9 usamos hexadecimal. Cada grupo de 4 bits equivale a 1 d\u00edgito hexadecimal (porque 2\u2074 = 16). Esto permite traducir binario\u2194hex r\u00e1pido: 1011 0110\u2082 \u2192 B6\u2081\u2086. A la inversa, 0xAF \u2192 1010 1111\u2082.</p> <p>Conversi\u00f3n decimal \u2192 binario (m\u00e9todo de divisiones sucesivas). Ejemplo: 13\u2081\u2080. Dividimos entre 2 y anotamos restos:     \u2022   13/2 = 6 resto 1     \u2022   6/2 = 3 resto 0     \u2022   3/2 = 1 resto 1     \u2022   1/2 = 0 resto 1</p> <p>Le\u00eddos de abajo arriba: 1101\u2082.</p> <p>Conversi\u00f3n binario \u2192 decimal (sumando potencias). 110101\u2082 = 1\u00d732 + 1\u00d716 + 0\u00d78 + 1\u00d74 + 0\u00d72 + 1\u00d71 = 53\u2081\u2080.</p>"},{"location":"ud1/#como-se-codifican-los-numeros","title":"C\u00f3mo se codifican los n\u00fameros","text":"<p>Los enteros y los reales se guardan con convenciones estables para que hardware y software \u201chablen el mismo idioma\u201d.</p> <p>Enteros sin signo. Con n bits se representan valores de 0 a 2\u207f\u22121. Con 8 bits (1 byte), de 0 a 255.</p> <p>Enteros con signo (complemento a 2). Es el est\u00e1ndar actual porque simplifica la aritm\u00e9tica. Con n bits, el rango es \u22122\u207f\u207b\u00b9 \u2026 2\u207f\u207b\u00b9\u22121. Con 8 bits: \u2212128 \u2026 127.</p> <ul> <li>C\u00f3mo obtener el negativo de un n\u00famero en binario (complemento a 2):<ul> <li>Invierte los bits (complemento a 1). 2) Suma 1. Ejemplo: +5 en 8 bits es 0000 0101. Invertir \u2192 1111 1010. +1 \u2192 1111 1011 (esto es \u22125).</li> </ul> </li> </ul> <p>Reales (idea b\u00e1sica de IEEE 754). Un n\u00famero real se guarda como signo, mantisa y exponente en base 2. Esto permite representar valores muy grandes o muy peque\u00f1os, pero no todos exactamente (hay redondeo). Por eso aparecer\u00e1n resultados como 0,1 + 0,2 \u2248 0,30000000000000004 en ciertos lenguajes.</p>"},{"location":"ud1/#codificacion-de-texto-de-ascii-a-unicode-utf-8","title":"Codificaci\u00f3n de texto: de ASCII a Unicode (UTF-8)","text":"<p>Un car\u00e1cter tambi\u00e9n es un n\u00famero. La cuesti\u00f3n es qu\u00e9 tabla se usa para mapear \u201cn\u00famero \u2194 s\u00edmbolo\u201d.</p> <ul> <li>ASCII (7/8 bits): define 128 caracteres b\u00e1sicos (ingl\u00e9s). A = 65 decimal = 0x41.</li> <li>ISO-8859-1 / Windows-1252: ampl\u00edan ASCII con acentos y s\u00edmbolos europeos, pero no son universales.</li> <li>Unicode: intenta representar todos los idiomas y s\u00edmbolos. La tabla central asigna a cada car\u00e1cter un punto de c\u00f3digo (p. ej., U+00F1 es \u201c\u00f1\u201d).</li> </ul> <p>Unicode puede codificarse de varias maneras. La m\u00e1s com\u00fan hoy es UTF-8:</p> <ul> <li>Es retrocompatible con ASCII: los 128 primeros caracteres ocupan 1 byte id\u00e9ntico.</li> <li>Usa 1 a 4 bytes por car\u00e1cter seg\u00fan el s\u00edmbolo.</li> <li>Ejemplos:<ul> <li>A \u2192 0x41 (1 byte).</li> <li>\u00f1 (U+00F1) \u2192 0xC3 0xB1 (2 bytes).</li> <li>\u20ac (U+20AC) \u2192 0xE2 0x82 0xAC (3 bytes).</li> </ul> </li> </ul> <p>Conclusi\u00f3n pr\u00e1ctica: si un texto \u201csale con signos raros\u201d, casi siempre es mala elecci\u00f3n o mezcla de codificaciones. En 2025, UTF-8 es la opci\u00f3n por defecto en la mayor\u00eda de sistemas.</p>"},{"location":"ud1/#representar-imagenes-y-sonido-nociones-que-el-so-necesita","title":"Representar im\u00e1genes y sonido (nociones que el SO necesita)","text":"<p>El sistema operativo no \u201centiende fotos\u201d ni \u201centiende m\u00fasica\u201d por arte de magia; entiende bytes etiquetados con un formato. Dos ideas clave:</p> <p>Im\u00e1genes. Una imagen raster se compone de p\u00edxeles. Cada p\u00edxel guarda color con una profundidad t\u00edpica de 24 bits (8 bits por canal RGB). Un fotograma 1920\u00d71080 a 24 bpp ocupa en bruto: 1920\u00d71080\u00d73 bytes \u2248 6 220 800 bytes \u2248 5,94 MiB. Los formatos como PNG/JPEG a\u00f1aden compresi\u00f3n (sin p\u00e9rdida / con p\u00e9rdida) y metadatos.</p> <p>Audio digital. Se representa con frecuencia de muestreo (veces por segundo), profundidad de bits por muestra y canales. El CD de audio (44,1 kHz, 16 bits, est\u00e9reo) produce: 44100 \u00d7 16 \u00d7 2 \u2248 1 411 200 bps \u2248 1,411 Mbps \u2248 0,176 MB/s. Formatos como MP3/AAC/Opus comprimen reduciendo la tasa de bits.</p>"},{"location":"ud1/#medidas-de-informacion-capacidad-y-velocidad","title":"Medidas de informaci\u00f3n: capacidad y velocidad","text":"<p>Conviene distinguir capacidad (cu\u00e1nto cabe) y velocidad (a qu\u00e9 ritmo se mueve).</p> <p>Unidades base.</p> <ul> <li>bit (b) y byte (B); 1 B = 8 b.</li> <li>Prefijos decimales (SI): kB (10\u00b3), MB (10\u2076), GB (10\u2079), TB (10\u00b9\u00b2).</li> <li>Prefijos binarios (IEC): KiB (2\u00b9\u2070), MiB (2\u00b2\u2070), GiB (2\u00b3\u2070), TiB (2\u2074\u2070).</li> </ul> <p>Ejemplo cl\u00e1sico (discos). Un disco de \u201c1 TB\u201d comercial anuncia 1 000 000 000 000 bytes. El sistema operativo suele mostrarlo en GiB: 1 000 000 000 000 / 1 073 741 824 \u2248 931 GiB. No falta espacio; cambi\u00f3 la unidad.</p> <p>Velocidades.</p> <ul> <li>En redes se usan bits por segundo (Mb/s, Gb/s).</li> <li>En disco y memoria solemos ver bytes por segundo (MB/s, MiB/s). Para estimar: 100 Mb/s \u2248 12,5 MB/s (divide entre 8). El valor real ser\u00e1 menor por cabeceras y protocolos.</li> </ul> <p>Rendimiento real: m\u00e1s que MB/s. Intervienen:</p> <ul> <li>Ancho de banda (cu\u00e1nto puede pasar por la tuber\u00eda).</li> <li>Latencia (cu\u00e1nto tarda en empezar cada transferencia).</li> <li>Tama\u00f1o de bloque (muchos archivos peque\u00f1os penalizan).</li> <li>IOPS (operaciones de E/S por segundo) y colas en SSDs NVMe.</li> </ul>"},{"location":"ud1/#reglas-practicas-y-errores-comunes-vision-de-tecnico","title":"Reglas pr\u00e1cticas y errores comunes (visi\u00f3n de t\u00e9cnico)","text":"<p>Aunque sea teor\u00eda, estas pautas ayudan a evitar confusiones en pr\u00e1cticas y ex\u00e1menes:</p> <ul> <li>No mezclar unidades. Si un manual dice 500 MB y otro 500 MiB, no son iguales.</li> <li>Texto en UTF-8, salvo necesidad contraria. Evita mezclar codificaciones en el mismo proyecto.</li> <li>Comprender el rango de los enteros. Antes de guardar un valor, pregunta: \u00bfcabe en 8/16/32 bits con signo?</li> <li>Im\u00e1genes \u201cpesadas\u201d sin comprimir son normales: 24 bpp \u00d7 p\u00edxeles suma r\u00e1pido.</li> <li>Velocidad de red \u2260 velocidad de disco. Descargar a 100 Mb/s no implica que el disco escriba a esa tasa si hay cuellos de botella.</li> </ul>"},{"location":"ud1/#sistema-operativo-funciones-y-elementos","title":"Sistema operativo: funciones y elementos","text":""},{"location":"ud1/#que-es-un-sistema-operativo","title":"\u00bfQu\u00e9 es un sistema operativo?","text":"<p>Un sistema operativo (SO) es el gestor de recursos del ordenador y, al mismo tiempo, la puerta de entrada para las aplicaciones. Gestiona el procesador, la memoria, los dispositivos de entrada/salida y los datos almacenados de forma segura, eficiente y ordenada. Sin SO, cada programa deber\u00eda \u201chablar\u201d directamente con cada pieza de hardware; con SO, los programas piden servicios (abrir un archivo, crear una ventana, enviar datos por la red) y el sistema decide c\u00f3mo y cu\u00e1ndo atenderlos.</p> <p>En la pr\u00e1ctica, el SO cumple tres misiones inseparables:</p> <ul> <li>Abstraer el hardware (presenta una visi\u00f3n simplificada: \u201carchivos\u201d, \u201cprocesos\u201d, \u201cpantalla\u201d).</li> <li>Arbitrar el uso de recursos (decide a qu\u00e9 proceso dar CPU, cu\u00e1nta RAM asignar, qui\u00e9n accede a un dispositivo).</li> <li>Proteger el sistema y los datos (usuarios, permisos, aislamientos y pol\u00edticas).</li> </ul>"},{"location":"ud1/#elementos-principales-del-sistema-operativo","title":"Elementos principales del sistema operativo","text":"<p>Aunque cada familia de SO tenga sus particularidades, casi todos comparten estas piezas.</p> <p>N\u00facleo o kernel. Es la parte central que trabaja con m\u00e1ximos privilegios. Controla el procesador (planificador), la memoria (espacios de direcciones y paginaci\u00f3n), la entrada/salida (colas, interrupciones, DMA), el sistema de archivos (nombres, directorios, cach\u00e9), la red (sockets) y mecanismos de seguridad (cuentas, permisos, auditor\u00eda). El kernel no muestra ventanas ni men\u00fas; su funci\u00f3n es hacer posible que el resto funcione.</p> <p>Controladores (drivers). Traducen las \u00f3rdenes gen\u00e9ricas del SO a instrucciones concretas para cada dispositivo (SSD, tarjeta de red, impresora, GPU). Un driver mal dise\u00f1ado o inadecuado explica muchos fallos de estabilidad o de rendimiento.</p> <p>Servicios o demonios de sistema. Programas en segundo plano que realizan tareas continuas o peri\u00f3dicas: registro de eventos, actualizaciones, spool de impresi\u00f3n, sincronizaci\u00f3n de hora, servidor de redes. En Windows se ven como \u201cServicios\u201d; en GNU/Linux, como daemons gestionados por systemd u otro iniciador.</p> <p>Interfaces de usuario: CLI y GUI.</p> <ul> <li>La CLI (l\u00ednea de comandos) es un int\u00e9rprete de \u00f3rdenes (Bash, PowerShell, cmd) \u00fatil para automatizar con scripts y operar de forma precisa.</li> <li>La GUI (interfaz gr\u00e1fica) ofrece escritorios, ventanas, men\u00fas, arrastrar y soltar. Suele ser m\u00e1s accesible para tareas espor\u00e1dicas o visuales.</li> </ul> <p>Bibliotecas y API del sistema. Conjunto de funciones que las aplicaciones utilizan para solicitar servicios al SO (por ejemplo, Win32 en Windows o las bibliotecas de glibc en Linux). Tras esa API hay llamadas al sistema que cruzan de espacio de usuario al kernel.</p>"},{"location":"ud1/#funciones-esenciales-del-sistema-operativo","title":"Funciones esenciales del sistema operativo","text":"<p>A continuaci\u00f3n se desarrollan las funciones clave centradas en lo que el t\u00e9cnico necesita comprender y explicar.</p>"},{"location":"ud1/#gestion-del-procesador-cpu","title":"Gesti\u00f3n del procesador (CPU)","text":"<p>El SO mantiene una cola de procesos listos para ejecutarse y decide, en fracciones de segundo, a qui\u00e9n ceder la CPU. Esta decisi\u00f3n la toma el planificador (scheduler). Cuando cambia de un proceso a otro, realiza un cambio de contexto (guarda y recupera registros y estado).</p> <p>Ejemplo pr\u00e1ctico: con un navegador, un reproductor de m\u00fasica y un editor abiertos, el planificador reparte tiempo para que \u201cparezca\u201d que todo va a la vez.</p>"},{"location":"ud1/#gestion-de-memoria","title":"Gesti\u00f3n de memoria","text":"<p>Cada proceso ve un espacio de direcciones propio (memoria virtual), aunque f\u00edsicamente la RAM es compartida. La paginaci\u00f3n divide la memoria en bloques (p\u00e1ginas) que se cargan o expulsan seg\u00fan necesidad; si falta RAM, el SO usa memoria de intercambio (swap/archivo de paginaci\u00f3n) en disco, m\u00e1s lenta.</p> <ul> <li>Efecto visible: si hay poca RAM y muchas aplicaciones abiertas, el sistema se vuelve \u201cpesado\u201d porque mueve p\u00e1ginas al disco.</li> <li>Beneficio de la virtualizaci\u00f3n: a\u00edsla procesos (evita que uno pise la memoria de otro) y permite cargar programas m\u00e1s grandes que la RAM disponible, con cuidado del rendimiento.</li> </ul>"},{"location":"ud1/#entradasalida-es","title":"Entrada/salida (E/S)","text":"<p>El SO coordina la comunicaci\u00f3n con dispositivos para que el equipo no se bloquee. Emplea buffers, colas e interrupciones; cuando es posible, configura DMA para que los datos se muevan entre dispositivo y RAM sin ocupar a la CPU.</p> <p>Ejemplo: al copiar una carpeta grande a un USB, la barra de progreso avanza mientras seguimos usando otras aplicaciones; la CPU no \u201cespera\u201d activamente a cada bloque.</p>"},{"location":"ud1/#sistema-de-archivos","title":"Sistema de archivos","text":"<p>Ofrece una estructura jer\u00e1rquica (carpetas/ directorios), nombres y permisos para organizar datos. Mantiene cach\u00e9s para acelerar accesos repetidos y, en sistemas modernos, usa t\u00e9cnicas como journaling para recuperar coherencia tras apagones.</p> <p>Ejemplo: al guardar un documento, el SO traduce \u201ccarpeta/archivo.docx\u201d a posiciones f\u00edsicas del disco y asegura que los metadatos (tama\u00f1o, fechas) quedan consistentes.</p>"},{"location":"ud1/#red","title":"Red","text":"<p>Proporciona sockets y pila de protocolos (TCP/IP, UDP) para que los programas env\u00eden/reciban datos sin gestionar bits el\u00e9ctricos.</p> <p>Ejemplo: una videollamada usa sockets, colas de env\u00edo/recepci\u00f3n y buffers de jitter; el SO prioriza flujos y evita que otras tareas saturen la interfaz de red.</p>"},{"location":"ud1/#seguridad-y-cuentas","title":"Seguridad y cuentas","text":"<p>Define usuarios y grupos, administra permisos (lectura/escritura/ejecuci\u00f3n, ACL), controla la autenticaci\u00f3n (contrase\u00f1as, PIN, biometr\u00eda) y registra eventos. Mecanismos como UAC (Windows) o sudo/polkit (GNU/Linux) separan tareas de usuario de tareas administrativas.</p> <p>Regla de oro: trabajar en el d\u00eda a d\u00eda con cuenta no administradora y elevar privilegios solo cuando sea necesario.</p>"},{"location":"ud1/#servicios-de-sistema-y-mantenimiento","title":"Servicios de sistema y mantenimiento","text":"<p>Incluye actualizaciones, registro de eventos (logs), tareas programadas, spool de impresi\u00f3n y sincronizaci\u00f3n de hora. Un sistema estable depende de que estos servicios est\u00e9n activos y configurados.</p> <p>Ejemplo: un error intermitente en una impresora suele resolverse revisando el spooler y los logs antes de reinstalar drivers.</p>"},{"location":"ud1/#como-usan-el-so-las-aplicaciones-de-la-api-a-la-llamada-al-sistema","title":"C\u00f3mo usan el SO las aplicaciones: de la API a la llamada al sistema","text":"<p>Una aplicaci\u00f3n no escribe en el disco \u201cpor su cuenta\u201d. Llama a una funci\u00f3n de biblioteca (API), que a su vez realiza una llamada al sistema (syscall) para cruzar al kernel. El kernel valida par\u00e1metros (\u00bftienes permiso?, \u00bfexiste el archivo?), planifica la E/S y devuelve un c\u00f3digo de resultado (\u00e9xito, error, motivo). Esta disciplina aporta seguridad (no se accede donde no se debe) y estabilidad (los errores quedan controlados).</p> <p>Ejemplo encadenado (abrir una foto): 1. La app pide \u201cabre foto.jpg\u201d. 2. El SO comprueba permisos y localiza el archivo en el sistema de archivos. 3. Programa una lectura al dispositivo (posible DMA). 4. Devuelve los bytes a la app, que decodifica JPEG y los env\u00eda a la GUI para mostrarlos.</p>"},{"location":"ud1/#modos-de-uso-del-so-cli-y-gui-cuando-conviene-cada-una","title":"Modos de uso del SO: CLI y GUI (cu\u00e1ndo conviene cada una)","text":"<p>La GUI es directa y visual; ideal para explorar, configurar y trabajar con documentos. La CLI brilla cuando hay que automatizar, repetir tareas, operar en remoto o manejar muchos archivos con patrones.</p> <ul> <li>Windows (PowerShell)<ul> <li>Listar con detalles: Get-ChildItem -Force</li> <li>Copiar recursivo: Copy-Item C:\\Origen* C:\\Destino -Recurse</li> </ul> </li> <li>GNU/Linux (Bash)<ul> <li>Listar con permisos: ls -l</li> <li>Buscar por patr\u00f3n: find ~/Documentos -name \"*.pdf\"</li> </ul> </li> </ul> <p>La recomendaci\u00f3n para un t\u00e9cnico de SMR es sentirse c\u00f3modo en ambos modos: la GUI para rapidez visual y la CLI para precisi\u00f3n y escalabilidad.</p>"},{"location":"ud1/#rendimiento-y-fiabilidad-lo-que-hace-el-so-por-detras","title":"Rendimiento y fiabilidad: lo que hace el SO \"por detr\u00e1s\"","text":"<p>Muchas decisiones del SO mejoran la experiencia sin que el usuario lo note expl\u00edcitamente:</p> <ul> <li>Cach\u00e9s y prefetch. Mantener en memoria datos usados recientemente reduce esperas; por eso una app abre m\u00e1s r\u00e1pido la segunda vez.</li> <li>Prioridades y clases de planificaci\u00f3n. Un proceso interactivo obtiene respuesta \u00e1gil; uno en segundo plano consume CPU cuando no molesta.</li> <li>Aislamiento y recuperaci\u00f3n. Si un programa \u201cse cuelga\u201d, el SO puede cerrarlo y liberar recursos; si hay un apag\u00f3n, el journaling ayuda a evitar da\u00f1os mayores.</li> <li>Actualizaciones y controladores. Mantener el sistema y los drivers al d\u00eda soluciona errores y mejora compatibilidad, a cambio de planificar bien cu\u00e1ndo actualizar.</li> </ul>"},{"location":"ud1/#arquitectura-del-sistema-operativo","title":"Arquitectura del sistema operativo","text":""},{"location":"ud1/#dos-mundos-separados-espacio-de-usuario-y-espacio-de-kernel","title":"Dos mundos separados: espacio de usuario y espacio de kernel","text":"<p>Para que un ordenador sea estable y seguro, el sistema operativo trabaja en dos niveles de privilegio. En espacio de usuario se ejecutan las aplicaciones (navegador, editor, cliente de correo) con permisos limitados. En espacio de kernel corre el n\u00facleo del sistema, con acceso total al hardware y a todos los recursos. Esta separaci\u00f3n evita que un fallo de una app arrastre a todo el sistema: si el editor \u201cse cuelga\u201d, lo normal es cerrarlo sin que se apague el equipo; si se da\u00f1ara el kernel, s\u00ed ver\u00edamos un kernel panic (Linux) o una pantalla azul (Windows).</p> <p>Entre ambos espacios hay una puerta controlada: las llamadas al sistema. Cuando una app necesita hacer algo privilegiado (leer un archivo, reservar RAM, abrir un socket), no accede al hardware directamente: pide el servicio al kernel y espera la respuesta. As\u00ed se logra orden, seguridad (comprobaci\u00f3n de permisos) y uniformidad (todas las apps usan la misma interfaz).</p>"},{"location":"ud1/#de-que-esta-hecho-el-kernel-vision-funcional","title":"De qu\u00e9 est\u00e1 hecho el kernel (visi\u00f3n funcional)","text":"<p>El kernel es el \u201ccerebro\u201d del sistema operativo. No muestra ventanas: coordina.</p> <ul> <li>Planificador de CPU: decide a qu\u00e9 proceso/hilo da tiempo de procesador y cu\u00e1ndo cambia de uno a otro (cambio de contexto).</li> <li>Gestor de memoria: mantiene los espacios de direcciones de cada proceso, aplica paginaci\u00f3n y usa memoria virtual cuando falta RAM.</li> <li>Gesti\u00f3n de E/S: organiza colas, interrupciones y DMA para que el equipo responda mientras los dispositivos trabajan.</li> <li>Sistema de archivos: traduce nombres y rutas a ubicaciones f\u00edsicas, mantiene metadatos y usa cach\u00e9s para acelerar.</li> <li>Red: implementa las pilas de protocolos (TCP/IP, UDP) y los sockets.</li> <li>Seguridad: usuarios, grupos, permisos, auditor\u00eda, control de acceso.</li> <li>Sincronizaci\u00f3n: garantiza orden y coherencia cuando varios hilos acceden a recursos compartidos (bloqueos, colas, sem\u00e1foros).</li> </ul>"},{"location":"ud1/#disenos-de-kernel-monolitico-microkernel-e-hibrido","title":"Dise\u00f1os de kernel: monol\u00edtico, microkernel e h\u00edbrido","text":"<p>No todos los kernels se organizan igual. La elecci\u00f3n afecta a rendimiento, mantenibilidad y tolerancia a fallos.</p> <ul> <li>Monol\u00edtico: la mayor\u00eda de servicios (sistema de archivos, red, controladores importantes) corren dentro del kernel. Ventaja: rapidez (menos cambios de contexto). Inconveniente: un error en un m\u00f3dulo puede afectar a todo el sistema si no est\u00e1 bien aislado. (Ej.: Linux moderno es monol\u00edtico y modular.)</li> <li>Microkernel: el kernel deja solo lo m\u00ednimo (planificaci\u00f3n, memoria, IPC). Servicios como el sistema de archivos o el driver de red se ejecutan en usuario como servidores. Ventaja: mejor aislamiento (si un servidor falla, se reinicia sin tumbar el kernel). Inconveniente: m\u00e1s mensajer\u00eda entre procesos puede penalizar. (Ej.: familias inspiradas en MINIX, se usa en ciertos sistemas embebidos y de investigaci\u00f3n.)</li> <li>H\u00edbrido/modular: mezcla pr\u00e1ctica. Mantiene servicios cr\u00edticos en kernel, pero con m\u00f3dulos cargables y capas que separan partes. (Ej.: Windows NT suele describirse como h\u00edbrido; Linux permite cargar/quitar m\u00f3dulos.)</li> </ul>"},{"location":"ud1/#llamadas-al-sistema-el-idioma-entre-aplicaciones-y-kernel","title":"Llamadas al sistema: el \"idioma\" entre aplicaciones y kernel","text":"<p>Las aplicaciones utilizan APIs (por ejemplo, Win32 o glibc) que, por debajo, invocan llamadas al sistema (syscalls). Hacer una syscall implica:</p> <ol> <li>Cruzar de usuario a kernel: la CPU cambia de modo mediante una instrucci\u00f3n especial (trap, sysenter/syscall).</li> <li>Validar: el kernel comprueba par\u00e1metros y permisos (\u00bfpuede este proceso abrir ese archivo?).</li> <li>Ejecutar la operaci\u00f3n (p. ej., planificar lectura de disco, actualizar tablas de memoria).</li> <li>Devolver un c\u00f3digo de resultado (\u00e9xito o error) y los datos solicitados.</li> </ol> <p>Este camino es m\u00e1s lento que una funci\u00f3n normal (hay cambio de modo y validaciones), por eso los sistemas operativos usan cach\u00e9s y buffers para reducir el n\u00famero de syscalls necesarias.</p>"},{"location":"ud1/#interrupciones-excepciones-y-es-eficiente","title":"Interrupciones, excepciones y E/S eficiente","text":"<p>Los dispositivos no \u201cgritan\u201d continuamente a la CPU; avisan solo cuando toca.</p> <ul> <li>Una interrupci\u00f3n detiene brevemente lo que hac\u00eda la CPU y salta a una rutina de servicio que atiende el evento (lleg\u00f3 un paquete, termin\u00f3 una lectura).</li> <li>Muchas operaciones de E/S se hacen con DMA: se configuran y el dispositivo transfiere datos entre memoria y perif\u00e9rico sin ocupar a la CPU.</li> <li>Para no pasar demasiado tiempo en la rutina de interrupci\u00f3n, el kernel suele dividir el trabajo en una parte r\u00e1pida (arriba) y otra diferida (abajo), que se ejecuta cuando conviene.</li> </ul> <p>Resultado visible: el equipo sigue respondiendo mientras copia archivos o imprime; la m\u00fasica no se corta porque otra app lea del disco.</p>"},{"location":"ud1/#drivers-y-modulos-como-habla-el-kernel-con-el-hardware","title":"Drivers y m\u00f3dulos: c\u00f3mo habla el kernel con el hardware","text":"<p>Un driver es una pieza de software (a menudo un m\u00f3dulo del kernel) que act\u00faa de traductor entre el kernel y un dispositivo concreto. Gracias a los drivers, el kernel ofrece una interfaz gen\u00e9rica (\u201clee del disco\u201d, \u201cenv\u00eda por red\u201d) mientras cada fabricante implementa los detalles.</p> <ul> <li>Carga din\u00e1mica: muchos drivers se cargan solo cuando el dispositivo est\u00e1 presente (ahorra memoria y reduce superficie de ataque).</li> <li>Estabilidad: un driver mal implementado puede causar cuelgues. Por eso los sistemas modernos a\u00edslan, firman y actualizan drivers con cuidado.</li> <li>Rendimiento: los drivers de almacenamiento y red aprovechan colas, tama\u00f1os de bloque y offloads (checksum, segmentaci\u00f3n) para escalar la velocidad.</li> </ul>"},{"location":"ud1/#comunicacion-entre-procesos-ipc-y-sincronizacion","title":"Comunicaci\u00f3n entre procesos (IPC) y sincronizaci\u00f3n","text":"<p>La arquitectura del SO necesita que los procesos se comuniquen sin invadirse. Para ello existen mecanismos de IPC:</p> <ul> <li>Pipes y redirecciones (encadenar comandos).</li> <li>Sockets (comunicaci\u00f3n local o por red con la misma API).</li> <li>Memoria compartida (muy r\u00e1pida, exige sincronizaci\u00f3n).</li> <li>Mensajes/colas y se\u00f1ales (notificaciones ligeras).</li> </ul> <p>Cuando varios hilos acceden a un recurso com\u00fan, se requieren primitivas de sincronizaci\u00f3n (mutex, sem\u00e1foros, monitores) para evitar condiciones de carrera. A nivel pr\u00e1ctico: si dos programas escriben a la vez en el mismo archivo sin coordinaci\u00f3n, el resultado puede corromperse.</p>"},{"location":"ud1/#arranque-de-servicios-del-kernel-al-sistema-en-marcha","title":"Arranque de servicios: del kernel al \"sistema en marcha\"","text":"<p>Tras cargar el kernel, el sistema inicia un gestor de servicios (por ejemplo, systemd en muchas distribuciones GNU/Linux o el Service Control Manager en Windows). Su trabajo es levantar y vigilar componentes como:</p> <ul> <li>Registro de eventos (logs).</li> <li>Red (cliente DHCP, firewall).</li> <li>Spool de impresi\u00f3n.</li> <li>Sincronizaci\u00f3n de hora.</li> <li>Actualizaciones autom\u00e1ticas.</li> </ul> <p>Esta capa explica por qu\u00e9 algunas funciones aparecen \u201ctarde\u201d tras arrancar (la red necesita unos segundos) y por qu\u00e9 detener un servicio puede arreglar problemas sin reiniciar todo el equipo.</p>"},{"location":"ud1/#seguridad-estructural-modos-de-cpu-permisos-y-aislamiento","title":"Seguridad estructural: modos de CPU, permisos y aislamiento","text":"<p>La arquitectura del SO se apoya en el hardware para hacer cumplir las reglas:</p> <ul> <li>Modos/Anillos de CPU: el kernel usa el modo privilegiado; las apps, el modo usuario. La CPU impide instrucciones peligrosas fuera del kernel.</li> <li>MMU y tablas de p\u00e1ginas: cada proceso ve solo su memoria; acceder a otra sin permiso provoca una excepci\u00f3n.</li> <li>Permisos y ACL: el kernel decide qui\u00e9n puede leer/escribir/ejecutar archivos y dispositivos.</li> <li>Aislamientos adicionales: sandboxes, virtualizaci\u00f3n y contenedores para separar entornos.</li> </ul> <p>Consecuencia pr\u00e1ctica: un malware que se ejecuta como usuario normal tiene mucho menos poder que uno que logra privilegios de administrador.</p>"},{"location":"ud1/#lo-que-notas-como-usuario-sintomas-y-su-raiz-arquitectonica","title":"Lo que notas como usuario (s\u00edntomas y su ra\u00edz \"arquitect\u00f3nica\")","text":"<ul> <li>\u201cSe me congela al abrir muchas apps\u201d \u2192 presi\u00f3n de memoria, paginaci\u00f3n a disco (gestor de memoria).</li> <li>\u201cLa impresora no responde\u201d \u2192 servicio de impresi\u00f3n/driver en mal estado (drivers/servicios).</li> <li>\u201cDescarga r\u00e1pida pero va a trompicones\u201d \u2192 latencia, colas de red, priorizaci\u00f3n (E/S y pila de red).</li> <li>\u201cAplicaci\u00f3n cerrada por el sistema\u201d \u2192 protecci\u00f3n frente a accesos no permitidos o fallo interno (validaciones del kernel).</li> </ul>"},{"location":"ud1/#procesos-e-hilos","title":"Procesos e hilos","text":""},{"location":"ud1/#por-que-existen-los-procesos","title":"Por qu\u00e9 existen los procesos","text":"<p>Un proceso es, en esencia, un programa en ejecuci\u00f3n con su propio \u201centorno vital\u201d: memoria, descriptores de archivos, permisos, variables de entorno y uno o varios hilos que ejecutan las instrucciones. Los procesos permiten aislar aplicaciones: si un proceso falla, el sistema puede terminarlo y liberar sus recursos sin tirar abajo todo el equipo. Para el t\u00e9cnico, pensar en procesos es pensar en unidad de trabajo gestionada por el sistema operativo: se crean, se planifican, esperan E/S, consumen CPU, terminan y dejan rastro en los registros del sistema.</p>"},{"location":"ud1/#que-contiene-un-proceso-y-que-guarda-el-so","title":"Qu\u00e9 contiene un proceso y qu\u00e9 guarda el SO","text":"<p>Cada proceso tiene un espacio de direcciones privado con al menos cuatro zonas l\u00f3gicas: c\u00f3digo (instrucciones), datos est\u00e1ticos, mont\u00f3n (memoria din\u00e1mica) y pila (marcos de llamada). Adem\u00e1s, mantiene recursos asociados: archivos/directorios abiertos, sockets de red, identificadores de ventanas, temporizadores.</p> <p>El sistema operativo conserva una ficha por proceso, el PCB (Process Control Block), con informaci\u00f3n imprescindible para gestionarlo: identificadores (PID, usuario), estado, contexto de CPU (registros y contador de programa), mapas de memoria, prioridad, estad\u00edsticas y lista de recursos. Durante un cambio de contexto, el kernel guarda el contexto del proceso saliente en su PCB y carga el del entrante. Este trabajo tiene un coste: demasiados cambios de contexto reducen rendimiento.</p>"},{"location":"ud1/#ciclo-de-vida-estados-y-transiciones","title":"Ciclo de vida: estados y transiciones","text":"<p>Aunque cada sistema operativo introduce matices, el ciclo \u201ccl\u00e1sico\u201d es muy estable:</p> <ul> <li>Nuevo: el proceso est\u00e1 cre\u00e1ndose; el SO reserva estructuras y memoria.</li> <li>Listo (Ready): preparado para usar CPU; espera turno en la cola del planificador.</li> <li>Ejecuci\u00f3n (Running): ocupa un n\u00facleo y avanza instrucciones.</li> <li>Bloqueado/Espera (Waiting/Blocked): detenido hasta que se cumpla un evento (fin de E/S, llegada de datos, temporizador).</li> <li>Terminado (Exit): finaliza y libera recursos.</li> </ul> <p></p> <p>Transiciones t\u00edpicas:</p> <ul> <li>Listo \u2192 Ejecuci\u00f3n: el planificador le asigna CPU.</li> <li>Ejecuci\u00f3n \u2192 Bloqueado: inicia E/S y espera.</li> <li>Ejecuci\u00f3n \u2192 Listo: el cuanto de tiempo se agota y cede la CPU (planificaci\u00f3n expulsiva).</li> <li>Bloqueado \u2192 Listo: completa la E/S o se cumple el evento.</li> <li>Ejecuci\u00f3n \u2192 Terminado: acaba correctamente o por error/se\u00f1al.</li> </ul>"},{"location":"ud1/#planificacion-de-la-cpu-como-reparte-el-tiempo-el-so","title":"Planificaci\u00f3n de la CPU: c\u00f3mo reparte el tiempo el SO","text":"<p>El planificador decide qu\u00e9 proceso o hilo ejecuta en cada momento. En equipos de usuario se emplea planificaci\u00f3n expulsiva: si se agota el cuanto o llega uno de mayor prioridad, el sistema interrumpe al actual y da paso a otro.</p> <p>Modelos b\u00e1sicos que conviene entender (a nivel conceptual):</p> <ul> <li>FCFS / FIFO: primero en llegar, primero en ejecutarse. Sencillo, pero puede causar esperas largas.</li> <li>SJF / SRTF: favorecen los trabajos cortos (el segundo es su versi\u00f3n expulsiva). Reducen el tiempo medio de espera, pero requieren estimar la \u201cduraci\u00f3n\u201d.</li> <li>Round Robin (RR): cada proceso recibe un cuanto de CPU, en turnos. Es el t\u00edpico en sistemas interactivos. Elegir bien el cuanto es clave: si es muy corto, habr\u00e1 exceso de cambios de contexto; si es muy largo, la interacci\u00f3n se vuelve torpe.</li> <li>Prioridades: cada proceso tiene un nivel; el planificador atiende antes a los de mayor prioridad. Para evitar inanici\u00f3n, se usa envejecimiento (aumentar gradualmente la prioridad de quien lleva mucho esperando).</li> <li>Colas multinivel / MLFQ: combinan prioridades y Round Robin asignando colas con distintos quantum y pol\u00edticas, promoviendo/demoviendo procesos seg\u00fan su comportamiento.</li> </ul> <p>Qu\u00e9 mira el planificador para \u201cir bien\u201d:</p> <ul> <li>Tiempo de respuesta en tareas interactivas (ventanas que responden r\u00e1pido).</li> <li>Rendimiento sostenido en tareas de c\u00e1lculo prolongado.</li> <li>Equidad entre procesos de usuarios distintos.</li> </ul>"},{"location":"ud1/#senales-prioridad-y-afinidad","title":"Se\u00f1ales, prioridad y afinidad","text":"<p>El sistema proporciona mecanismos para controlar procesos:</p> <ul> <li>Se\u00f1ales (Unix): notificaciones como \u201ctermina\u201d o \u201creinicia\u201d que una app puede atender. En la pr\u00e1ctica de aula, el comando kill env\u00eda se\u00f1ales: kill -TERM PID intenta terminar con limpieza; kill -KILL PID fuerza el cierre.</li> <li>Prioridad / nice: permite sugerir al planificador en qu\u00e9 orden atender tareas. nice y renice (Linux) ajustan la \u201camabilidad\u201d de un proceso: m\u00e1s nice, menos prioridad. En Windows, el Administrador de tareas permite cambiar la prioridad de un proceso.</li> <li>Afinidad: fijar qu\u00e9 n\u00facleos puede usar un proceso; \u00fatil para pruebas o para aislar cargas.</li> </ul>"},{"location":"ud1/#observar-y-gestionar-procesos-herramientas-basicas","title":"Observar y gestionar procesos: herramientas b\u00e1sicas","text":"<p>En Windows:</p> <ul> <li>Administrador de tareas: pesta\u00f1as de \u201cProcesos\u201d y \u201cRendimiento\u201d muestran uso de CPU, memoria, disco y red por proceso; \u201cServicios\u201d permite reiniciar spool de impresi\u00f3n o servicios atascados.</li> <li>PowerShell: Get-Process | Sort CPU -Descending | Select -First 10 para ver lo que m\u00e1s consume; Stop-Process -Id  para terminar; Start-Process para lanzar. <p>En GNU/Linux:</p> <ul> <li>top o htop para vista en vivo; ps -e -o pid,ppid,stat,pri,ni,cmd para listar con estado y prioridades.</li> <li>nice/renice para ajustar prioridad; kill/pkill/killall para terminar.</li> <li>pstree para ver la jerarqu\u00eda padre-hijo; \u00fatil para localizar zombis y hu\u00e9rfanos.</li> </ul>"},{"location":"ud1/#errores-tipicos-y-como-diagnosticarlos","title":"Errores t\u00edpicos y como diagnosticarlos","text":"<ul> <li>Ventana \u201ccongelada\u201d que vuelve a la vida al cabo de un rato: trabajo pesado en el hilo de la interfaz. Soluci\u00f3n: mover c\u00e1lculos o E/S a hilos de trabajo.</li> <li>CPU al 100% con un solo proceso: proceso CPU-bound; revisar si tiene sentido, limitar prioridad o dividir el trabajo.</li> <li>Memoria que sube sin bajar: posible fuga; cerrar y reabrir libera, pero conviene localizar el proceso y revisar su comportamiento.</li> <li>Disco al 100% con CPU baja: cuellos de E/S; tal vez copia masiva, antivirus analizando, o aplicaci\u00f3n que escribe muchas cosas peque\u00f1as.</li> <li>Muchos cambios de contexto y poca CPU \u00fatil: quantum demasiado corto o DEMASIADOS procesos; simplificar cargas o esperar.</li> </ul>"},{"location":"ud1/#buenas-practicas","title":"Buenas pr\u00e1cticas","text":"<ul> <li>Mantener aplicaciones que hagan E/S en segundo plano y no en el hilo de interfaz.</li> <li>Evitar abrir decenas de pesta\u00f1as o programas si la RAM es limitada; forzar\u00e1 swap y penalizar\u00e1 a todos.</li> <li>Cerrar procesos que no respondan con la opci\u00f3n \u201cterminar\u201d antes de forzar el apagado; reduce el riesgo de corrupci\u00f3n.</li> <li>En servidores o pr\u00e1cticas largas, registrar hora y PID de procesos importantes para poder rastrear eventos en los logs.</li> </ul>"},{"location":"ud1/#sistema-de-archivos_1","title":"Sistema de archivos","text":""},{"location":"ud1/#estructura-y-organizacion-como-se-guarda-y-se-encuentra-la-informacion","title":"Estructura y organizaci\u00f3n: c\u00f3mo se guarda y se encuentra la informaci\u00f3n","text":"<p>Un sistema de archivos (FS) es el conjunto de normas y estructuras que usa el sistema operativo para organizar los datos en un dispositivo de almacenamiento (disco, SSD, USB). Sin un FS, el disco ser\u00eda un bloque enorme de bytes sin forma; con \u00e9l, aparecen archivos con nombre, directorios que los agrupan, rutas para localizarlos y metadatos (tama\u00f1o, fechas, due\u00f1o, permisos) que describen su estado.</p> <p>En la pr\u00e1ctica, trabajamos con una jerarqu\u00eda en forma de \u00e1rbol. En GNU/Linux el \u00e1rbol nace en la ra\u00edz /; todo cuelga de ah\u00ed (incluidos otros discos que se montan como subcarpetas). En Windows, cada volumen recibe normalmente una letra de unidad (C:, D:, E:), y cada una tiene su ra\u00edz (C:). Esta diferencia no cambia la idea clave: un camino \u00fanico identifica a cada archivo (la ruta).</p> <p>utas absolutas y relativas. Una ruta absoluta empieza desde la ra\u00edz del volumen: /home/ana/notas.txt o C:\\Usuarios\\Ana\\notas.txt. Una ruta relativa parte de la carpeta actual: si estoy en /home/ana, docs/resumen.md apunta a /home/ana/docs/resumen.md. Los atajos . (esta carpeta) y .. (la superior) permiten moverse: ../imagenes/logo.png sube un nivel y entra en imagenes.</p> <p>Nombres y extensiones. Los nombres describen y las extensiones orientan sobre el tipo ( .txt, .jpg, .docx). En GNU/Linux el tipo real lo determina el contenido (cabecera o magic number); la extensi\u00f3n solo ayuda a humanos y aplicaciones. En Windows, muchas asociaciones de apertura dependen de la extensi\u00f3n. Tambi\u00e9n hay nombres reservados (Windows: CON, NUL, PRN y otros) y caracteres prohibidos (&lt; &gt; : \" / \\ | ? *). Linux es m\u00e1s flexible (permite cualquier car\u00e1cter salvo / y el nulo), aunque conviene evitar caracteres problem\u00e1ticos para compartir entre sistemas.</p> <p>Archivos y directorios no son lo \u00fanico. En sistemas tipo Unix existen tipos adicionales: enlaces simb\u00f3licos (atajos que apuntan a otra ruta), enlaces duros (otra entrada de nombre para el mismo contenido), dispositivos (archivos especiales en /dev), pipes y sockets. Windows soporta enlaces simb\u00f3licos y puntos de uni\u00f3n en NTFS, y adem\u00e1s dispone de streams alternativos (ADS) para asociar datos \u201csecundarios\u201d a un archivo.</p> <p>Metadatos vs datos. Un archivo consta de datos (el contenido) y metadatos (qui\u00e9n es el due\u00f1o, cu\u00e1nto ocupa, cu\u00e1ndo se modific\u00f3, qu\u00e9 permisos tiene). Separar estas dos ideas ayuda a entender por qu\u00e9 puede cambiar la fecha de acceso sin tocar el contenido, o por qu\u00e9 un renombrado suele ser at\u00f3mico (r\u00e1pido y seguro): se retoca una entrada de directorio, no se \u201cmueve\u201d f\u00edsicamente el contenido.</p> <p>Particiones, vol\u00famenes y montaje. Un mismo disco puede dividirse en particiones (trozos l\u00f3gicos). Cada partici\u00f3n puede formatearse con un FS (NTFS, ext4, exFAT\u2026). En Linux, cada FS se monta en una carpeta (ej.: montar el USB en /media/usb). En Windows, cada FS se expone como una unidad (D:), aunque tambi\u00e9n se puede montar en una carpeta NTFS. Este juego explica por qu\u00e9 \u201caparece\u201d una nueva letra al conectar un USB o por qu\u00e9 en Linux el contenido de /mnt/datos cambia tras montar un volumen all\u00ed.</p> <p>C\u00f3mo se ubican los datos en el disco. Un FS necesita un m\u00e9todo para asignar bloques del dispositivo a los archivos. Existen enfoques:</p> <ul> <li>Extensiones/Extents: rangos contiguos (muy com\u00fan en ext4, NTFS, XFS). Reducen la fragmentaci\u00f3n l\u00f3gica.</li> <li>Listas o \u00edndices: estructuras (\u00e1rboles B+, tablas) para localizar r\u00e1pidamente los bloques.</li> <li>Gesti\u00f3n del espacio libre: mapas de bits y otras estructuras para saber d\u00f3nde hay huecos.</li> </ul> <p>Con el tiempo aparece fragmentaci\u00f3n (un archivo se \u201crompe\u201d en trozos no contiguos). En HDD puede penalizar mucho; en SSD la penalizaci\u00f3n es menor, pero aun as\u00ed es preferible mantener extents grandes por eficiencia y para reducir escrituras.</p> <p>Operaciones habituales y su \u201clado t\u00e9cnico\u201d. Crear, copiar, mover, renombrar y borrar activan mecanismos diferentes. Por ejemplo, renombrar suele ser una operaci\u00f3n barata y at\u00f3mica (se cambia una entrada de directorio). Mover dentro del mismo volumen tambi\u00e9n puede ser barato; mover entre vol\u00famenes implica copiar y luego borrar. Borrar marca espacio como libre pero puede dejar datos recuperables hasta que el sistema los sobrescriba; en SSD, la orden TRIM informa al dispositivo de qu\u00e9 bloques puede reciclar.</p> <p>Rutas, comodines y b\u00fasqueda. En CLI, los comodines ayudan: *.txt selecciona todos los .txt. Linux tiene globbing integrado en la shell; Windows PowerShell usa comodines y cmdlets ricos (filtrado por propiedades). Para b\u00fasquedas profundas: find en Linux, Get-ChildItem -Recurse en PowerShell.</p> <p>Ejemplos m\u00ednimos (sin abusar de listas):</p> <ul> <li>Linux: ls -l /var/log, cp foto.jpg img/foto.jpg, mv .txt docs/, find ~/ -name \".pdf\".</li> <li>PowerShell: Get-ChildItem C:\\Datos -File, Copy-Item .\\informe.docx .\\2025\\, Move-Item .png .\\img\\, Get-ChildItem -Recurse -Filter .pdf.</li> </ul>"},{"location":"ud1/#tipos-de-sistemas-de-archivos","title":"Tipos de sistemas de archivos","text":"<p>Hay muchos FS. Lo importante es saber para qu\u00e9 se dise\u00f1\u00f3 cada uno y qu\u00e9 ofrece.</p> <ul> <li>FAT32. Muy compatible (funciona \u201cen todas partes\u201d), ideal para dispositivos antiguos, pero no guarda permisos avanzados y limita el tama\u00f1o de archivo a ~4 GB. \u00datil para pendrives \u201cpara cualquier equipo\u201d, con esas restricciones.</li> <li>exFAT. Evoluci\u00f3n pensada para memorias y discos externos grandes: sin l\u00edmite de 4 GB, amplia compatibilidad en Windows, macOS y, hoy en d\u00eda, Linux. No aporta permisos avanzados tipo POSIX.</li> <li>TFS (Windows). Sistema por defecto en Windows de escritorio y servidores. Ofrece ACLs avanzadas, compresi\u00f3n, cifrado (EFS), cuotas, enlaces y journaling. Es robusto y soporta archivos y vol\u00famenes muy grandes.</li> <li>ext4 (GNU/Linux). Equilibrio entre rendimiento y estabilidad; soporta journaling, extents y opciones modernas. Es el est\u00e1ndar de hecho en muchas distribuciones.</li> <li>XFS (Linux). Muy buen rendimiento en archivos grandes y cargas de servidor; escalable.</li> <li>Btrfs (Linux). Dise\u00f1ado con copy-on-write, instant\u00e1neas y subvol\u00famenes, verificaci\u00f3n de integridad con sumas y opciones de compresi\u00f3n transparente.</li> <li>APFS (macOS). Moderno, copy-on-write, snapshots, cifrado fuerte por dise\u00f1o, muy buen desempe\u00f1o en SSD.</li> <li>ReFS (Windows Server, ciertas ediciones). Pensado para resiliencia y grandes vol\u00famenes; prioriza integridad y escalado (no todas las caracter\u00edsticas est\u00e1n disponibles en todas las ediciones de cliente).</li> </ul> <p>Sugerencia de gr\u00e1fico 5: tabla comparativa sencilla con columnas \u201cCompatibilidad\u201d, \u201cPermisos avanzados/ACL\u201d, \u201cJournaling/CoW\u201d, \u201cSnapshots/Compresi\u00f3n\u201d, \u201cL\u00edmites de tama\u00f1o (aprox.)\u201d, y filas: FAT32, exFAT, NTFS, ext4, XFS, Btrfs, APFS.</p> <p>L\u00edmites y matices \u00fatiles de recordar. FAT32 no sirve para archivos muy grandes; exFAT es ideal para tarjetas SDXC y pendrives actuales; NTFS es la elecci\u00f3n razonable para el disco del sistema en Windows y para discos externos que usar\u00e1s sobre todo en Windows; ext4 \u201cfunciona siempre\u201d en Linux de escritorio; si necesitas instant\u00e1neas y verificaci\u00f3n de integridad, mira Btrfs/APFS. En entornos mixtos (Windows + macOS + Linux), exFAT suaviza roces, pero no da permisos finos.</p>"},{"location":"ud1/#criterios-de-seleccion-del-sistema-de-archivos","title":"Criterios de selecci\u00f3n del sistema de archivos","text":"<p>Elegir un FS es una decisi\u00f3n t\u00e9cnica que afecta a compatibilidad, seguridad, rendimiento y mantenimiento. Para un t\u00e9cnico de SMR, la pregunta correcta no es \u201c\u00bfcu\u00e1l es el mejor?\u201d sino \u201c\u00bfcu\u00e1l encaja con este uso?\u201d. Estas son las variables que conviene ponderar:</p> <p>Compatibilidad y portabilidad. \u00bfD\u00f3nde se usar\u00e1 el dispositivo? Si va a moverse entre Windows, macOS y Linux, exFAT suele ser la apuesta pragm\u00e1tica para USB grandes. Si es el disco del sistema en Windows, NTFS. En Linux de escritorio/servidor, ext4 (o XFS/Btrfs seg\u00fan necesidades). En Mac modernos, APFS.</p> <p>Seguridad y control de acceso. \u00bfNecesitas permisos granulares, ACLs, cifrado, cuotas o auditor\u00eda? NTFS, ext4 (con ACLs POSIX), APFS, Btrfs y XFS cubren estas necesidades con distintos matices. Para USBs \u201cpara todos\u201d, FAT/exFAT no ofrecen esa fineza.</p> <p>Integridad frente a fallos. Aqu\u00ed entran conceptos que desarrollaremos m\u00e1s en el punto 8: journaling (NTFS, ext4, XFS) o copy-on-write (Btrfs, APFS). Si el entorno sufre cortes de luz o desconexiones bruscas (port\u00e1tiles, aulas), conviene priorizar FS con mecanismos de recuperaci\u00f3n.</p> <p>Rendimiento y patr\u00f3n de uso. \u00bfArchivos muy grandes (v\u00eddeo, backups) o millones de archivos peque\u00f1os (logs, repositorios)? XFS y ext4 rinden muy bien con grandes; Btrfs aporta compresi\u00f3n transparente que puede ayudar con muchos peque\u00f1os; NTFS tiene buen desempe\u00f1o general en Windows. En SSD, habilitar y mantener TRIM evita degradaci\u00f3n.</p> <p>L\u00edmites de tama\u00f1o. Asegura que los l\u00edmite de archivo/volumen no te frenar\u00e1n (FAT32 falla aqu\u00ed). La mayor\u00eda de FS modernos manejan tama\u00f1os que superan con mucho las necesidades de aula/oficina.</p> <p>Mantenimiento y herramientas. \u00bfDispones de utilidades para comprobar (chkdsk/fsck), reparar, clonar y recuperar? En entornos educativos, prioridad a FS con herramientas maduras y bien documentadas.</p> <p>Casos tipo (para decidir r\u00e1pido, justificando):</p> <ul> <li>USB para clase (grande, pasar v\u00eddeos y trabajos): exFAT (compatibilidad y tama\u00f1o de archivo sin l\u00edmite de 4 GB).</li> <li>Disco del sistema en Windows: NTFS (permisos, journaling, utilidades).</li> <li>Partici\u00f3n de datos en Linux: ext4 (equilibrio y herramientas).</li> <li>Servidor de ficheros con archivos grandes (Linux): XFS o ext4.</li> <li>Equipo macOS moderno: APFS (por dise\u00f1o del sistema).</li> <li>Necesidad de instant\u00e1neas locales y verificaci\u00f3n de integridad (Linux): Btrfs (sopesando curva de aprendizaje).</li> </ul>"},{"location":"ud1/#atributos-y-permisos","title":"Atributos y permisos","text":"<p>uando guardamos un archivo, no solo almacenamos su contenido; tambi\u00e9n se registra informaci\u00f3n sobre \u00e9l (qui\u00e9n es su due\u00f1o, cu\u00e1ndo se modific\u00f3, qu\u00e9 tama\u00f1o tiene, en qu\u00e9 carpeta est\u00e1, etc.). A eso lo llamamos metadatos o atributos. Los permisos, en cambio, indican qui\u00e9n puede hacer qu\u00e9 con ese objeto: leerlo, modificarlo, ejecutarlo o entrar en su carpeta. En sistemas con varios usuarios (o incluso en un solo equipo con cuentas separadas) los permisos son la primera barrera de seguridad y tambi\u00e9n una herramienta de organizaci\u00f3n del trabajo (por ejemplo, una carpeta com\u00fan donde todos leen, pero solo un grupo concreto escribe).</p>"},{"location":"ud1/#atributos-lo-que-describe-a-un-archivo-o-directorio","title":"Atributos: lo que describe a un archivo o directorio","text":"<p>A nivel pr\u00e1ctico vamos a encontrarnos siempre estos atributos b\u00e1sicos:</p> <ul> <li>Propietario y grupo: en sistemas tipo Unix (GNU/Linux), cada objeto tiene un usuario due\u00f1o y un grupo asociado; en Windows (NTFS) existe tambi\u00e9n un propietario y las ACL referencian usuarios y grupos del sistema.</li> <li>Tama\u00f1o: bytes de contenido. Ojo: el espacio f\u00edsico ocupado puede ser mayor por el tama\u00f1o de bloque/cluster del sistema de archivos.</li> <li>Fechas y horas:<ul> <li>Modificaci\u00f3n (mtime): cambia cuando se altera el contenido.</li> <li>Acceso (atime): cambia cuando se lee (a veces se desactiva por rendimiento).</li> <li>Cambio (ctime en Unix): cambia cuando se modifica el estado (permisos, nombre, propietario).</li> </ul> </li> <li>Tipo de objeto: archivo regular, directorio, enlace simb\u00f3lico, dispositivo, socket, pipe (Unix); en NTFS tambi\u00e9n flujos alternativos de datos.</li> <li>Atributos especiales (var\u00edan seg\u00fan FS/SO):<ul> <li>Windows: oculto (H), solo lectura (R), sistema (S), archivo (A).</li> <li>Linux (seg\u00fan FS): inmutable (chattr +i), solo anexo (+a), etc.</li> </ul> </li> </ul>"},{"location":"ud1/#permisos-posix","title":"Permisos POSIX","text":"<p>En sistemas tipo Unix, cada archivo/directorio define permisos para tres \u201cclases\u201d:</p> <ul> <li>u (user): el propietario.</li> <li>g (group): el grupo asociado.</li> <li>o (others): el resto de usuarios.</li> </ul> <p>Para cada clase se controlan tres acciones: r (read = 4), w (write = 2), x (execute = 1). La suma da la notaci\u00f3n octal:</p> <ul> <li>rwx = 7, rw- = 6, r-x = 5, r-- = 4, -wx = 3, -w- = 2, --x = 1, --- = 0.</li> <li>Un modo t\u00edpico -rwxr-x--- equivale a 750: due\u00f1o 7, grupo 5, otros 0.</li> </ul> <p>Archivos vs directorios (muy importante):</p> <ul> <li>En archivos, r permite leer el contenido; w modificarlo; x ejecutarlo como programa o script.</li> <li>En directorios, x permite entrar (traves\u00eda); r permite listar los nombres; w permite crear/borrar/renombrar entradas. Un directorio sin x es \u201copaco\u201d: ni entrar ni listar, aunque tengas r.</li> </ul>"},{"location":"ud1/#permisos-en-ntfs-windows","title":"Permisos en NTFS (Windows)","text":"<p>En NTFS, la seguridad se basa en DACL (listas de control de acceso). Cada DACL contiene varias ACE (entradas) que conceden o deniegan permisos a usuarios o grupos. Los permisos \u201cb\u00e1sicos\u201d que ver\u00e1s en la GUI son combinaciones de permisos \u201cavanzados\u201d:</p> <ul> <li>Control total: todo, incluida la modificaci\u00f3n de permisos y propiedad.</li> <li>Modificar: leer, escribir, borrar, crear; no toca permisos.</li> <li>Lectura y ejecuci\u00f3n, Lectura, Escritura.</li> </ul> <p>Dos ideas clave:</p> <ol> <li>Herencia: por defecto, los objetos heredan permisos de su carpeta padre. Puedes romper herencia y dejar permisos \u201cexpl\u00edcitos\u201d. Esto da control, pero aumenta la complejidad.</li> <li>Permisos efectivos: lo que realmente tiene un usuario surge de sumar permisos concedidos y restar los denegados a ese usuario y a los grupos a los que pertenece. Un DENY espec\u00edfico puede anular un ALLOW; hay que usarlo con mesura.</li> </ol>"},{"location":"ud1/#comparativa-posix-vs-ntfs","title":"Comparativa POSIX vs NTFS","text":"<ul> <li>Simplicidad vs granularidad: u\u2013g\u2013o es simple y r\u00e1pido de leer; NTFS con ACL es muy granular. Linux puede usar ACL POSIX para casos no cubiertos por u\u2013g\u2013o.</li> <li>Herencia: en Linux, la herencia se emula con setgid en directorios y ACL por defecto; en NTFS la herencia es una propiedad de cada objeto.</li> <li>Atributos \u201cvisuales\u201d: en Windows, \u201coculto\u201d y \u201csolo lectura\u201d son atributos, no permisos. En Linux, la \u201cocultaci\u00f3n\u201d es un convenio (archivo que empieza por punto no se muestra por defecto) y el \u201csolo lectura\u201d es un permiso real (chmod a-w).</li> </ul>"},{"location":"ud1/#errores-frecuentes-y-como-evitarlos","title":"Errores frecuentes (y c\u00f3mo evitarlos)","text":"<ul> <li>Quitar x a un directorio y \u201cmatarlo\u201d: sin x no puedes entrar, aunque tengas r para listar. Para carpetas de trabajo, casi siempre r-x como m\u00ednimo para quien deba acceder.</li> <li>Poner 777 \u201cpara que funcione\u201d: p\u00e9sima pr\u00e1ctica.</li> <li>Abusar de DENY en NTFS: un deny mal puesto bloquea a usuarios leg\u00edtimos y complica el an\u00e1lisis de permisos efectivos. Prefiere ALLOW bien definidos.</li> <li>Romper herencia sin documentar: al cabo de meses nadie recuerda por qu\u00e9 esa carpeta \u201cse resiste\u201d. Si rompes herencia, an\u00f3talo (y valora si te bastaba con una excepci\u00f3n puntual).</li> <li>Confundir \u201csolo lectura\u201d y permisos en Windows: el atributo \u201cR\u201d no sustituye a una ACL correcta.</li> </ul>"},{"location":"ud1/#sistemas-transaccionales-y-journaling","title":"Sistemas transaccionales y journaling","text":""},{"location":"ud1/#que-es-una-transaccion-y-por-que-nos-importa-en-som","title":"\u00bfQu\u00e9 es una transacci\u00f3n y por qu\u00e9 nos importa en SOM?","text":"<p>Una transacci\u00f3n es un conjunto de operaciones que el sistema trata como una unidad indivisible: o se realizan todas, o ninguna. Esta idea naci\u00f3 en bases de datos, pero tiene impacto directo en sistemas de archivos y, por tanto, en la integridad de tus datos. Si un equipo se apaga de golpe en mitad de un guardado, \u00bfquedar\u00e1 el archivo bien, mal\u2026 o el sistema sabr\u00e1 volver a un estado coherente? Esa garant\u00eda depende de si hay mecanismos transaccionales (como el journaling) y de c\u00f3mo se escriben los cambios.</p>"},{"location":"ud1/#acid","title":"ACID","text":"<p>Cuando oigas que un sistema es \u201ctransaccional\u201d, suele apuntar a estas propiedades ACID (explicadas sin matem\u00e1ticas):</p> <ul> <li>Atomicidad: o todo el conjunto de cambios se aplica, o nada.</li> <li>Consistencia: al finalizar, las reglas se respetan (p. ej., directorios y metadatos no quedan \u201ca medias\u201d).</li> <li>Aislamiento: mientras una transacci\u00f3n est\u00e1 en curso, otras no ven un estado raro intermedio.</li> <li>Durabilidad: una vez confirmada, los cambios sobreviven a un reinicio imprevisto.</li> </ul> <p>En sistemas de archivos no siempre se cumple ACID para los datos, pero s\u00ed se busca al menos consistencia de metadatos (nombres, tama\u00f1os, entradas de directorio).</p>"},{"location":"ud1/#journaling-en-sistemas-de-archivos-el-diario-que-salva-el-dia","title":"Journaling en sistemas de archivos: el diario que salva el d\u00eda","text":"<p>Un FS con journaling anota primero en un diario (journal) qu\u00e9 cambios har\u00e1. Si todo va bien, marca la transacci\u00f3n como completada y despu\u00e9s aplica (o confirma) los cambios \u201creales\u201d. Si hay un corte, al arrancar se relee el diario y se repite o deshace lo pendiente para volver a un estado coherente r\u00e1pidamente, sin tener que examinar todo el disco.</p> <p>Hay varios modos (nombres y detalles cambian seg\u00fan FS, pero la idea es la misma):</p> <ul> <li>Solo metadatos: el diario protege estructuras (entradas de directorio, tama\u00f1os, inodos). El contenido del archivo puede perder los \u00faltimos bytes si el corte fue a mitad de una escritura, pero el \u00e1rbol del FS no se corrompe. (Com\u00fan en ext4 por defecto, NTFS).</li> <li>Datos + metadatos: se registran en el diario tambi\u00e9n los datos. Es m\u00e1s seguro para el contenido, pero m\u00e1s costoso en escrituras.</li> <li>Ordenado (ordered): los datos se escriben al disco antes de registrar los metadatos como \u201cfinales\u201d. Reduce la posibilidad de ver basura en archivos tras un corte, con menos coste que \u201cdatos + metadatos\u201d.</li> </ul> <p>\u00bfQu\u00e9 ganamos?</p> <ul> <li>Arranques tras fallo mucho m\u00e1s r\u00e1pidos (se lee el diario, no todo el disco).</li> <li>Coherencia estructural (no aparecen directorios \u201cfantasma\u201d ni tama\u00f1os imposibles).</li> <li>Menos necesidad de herramientas de reparaci\u00f3n intensivas.</li> </ul> <p>\u00bfQu\u00e9 pagamos?</p> <ul> <li>M\u00e1s escrituras (se escribe en el diario y luego \u201cde verdad\u201d).</li> <li>Ligero impacto en rendimiento sostenido, a cambio de mucha m\u00e1s seguridad.</li> </ul>"},{"location":"ud1/#y-si-el-fs-no-tiene-journaling-fat32-exfat-otros","title":"\u00bfY si el FS no tiene journaling? (FAT32, exFAT, otros)","text":"<p>Sigue existiendo y es \u00fatil para compatibilidad (pendrives que viajan entre muchos sistemas). Pero si retiras un USB sin expulsar o se va la luz en medio de una escritura, puede quedar inconsistente: entradas de directorio apuntando a datos inexistentes, tama\u00f1os incorrectos, etc. Los sistemas pasan entonces un chequeo (chkdsk, fsck) que repara lo que puede, a veces moviendo piezas a \u201carchivos perdidos\u201d.</p> <p>Conclusi\u00f3n operativa: para discos del sistema o almacenamiento importante, mejor un FS con journaling o CoW. Para USB de intercambio, exFAT es pr\u00e1ctico, pero siempre expulsar antes de retirar.</p>"},{"location":"ud1/#caches-flush-barreras-lo-invisible-que-marca-la-diferencia","title":"Cach\u00e9s, flush, barreras: lo invisible que marca la diferencia","text":"<p>Entre la aplicaci\u00f3n y el disco hay capas de cach\u00e9 (del SO y del propio dispositivo). Escribir en un archivo suele llenar un buffer y \u201cparecer\u201d instant\u00e1neo; solo cuando el sistema vac\u00eda (hace flush) esa cach\u00e9 a almacenamiento estable podemos decir que los datos son realmente durables.</p> <p>Conceptos \u00fatiles:</p> <ul> <li>sync (Linux) fuerza a escribir al dispositivo lo que estaba pendiente.</li> <li>Barreras / fencing: \u00f3rdenes que obligan a respetar el orden de escritura para mantener la coherencia del journaling.</li> <li>Pol\u00edtica de cach\u00e9 del dispositivo (Windows: \u201cmejor rendimiento\u201d vs \u201cextracci\u00f3n r\u00e1pida\u201d): si permites cach\u00e9 agresiva, m\u00e1s obligaci\u00f3n de expulsar con seguridad.</li> </ul>"},{"location":"ud1/#como-escriben-las-aplicaciones-para-ser-seguras","title":"\u00bfC\u00f3mo escriben las aplicaciones para ser seguras?","text":"<p>Muchas aplicaciones no conf\u00edan solo en el FS: escriben primero a un archivo temporal, sincronizan (fsync), y luego renombran sobre el archivo original. El renombrado suele ser at\u00f3mico en el FS, de modo que ver\u00e1s o el archivo antiguo o el nuevo, pero no una mezcla. Si el FS tiene journaling y la app hace fsync donde toca, incluso un corte brusco dejar\u00e1 el sistema coherente y, a menudo, el archivo sano.</p>"},{"location":"ud1/#buenas-practicas-que-evitan-disgustos","title":"Buenas pr\u00e1cticas (que evitan disgustos)","text":"<ul> <li>Expulsar siempre unidades extra\u00edbles antes de retirarlas.</li> <li>Para trabajos largos en port\u00e1til, conectar a corriente o activar opciones que reduzcan cach\u00e9 si se va a desconectar con frecuencia.</li> <li>En Linux, aprender a usar sync (y en apps cr\u00edticas, fsync).</li> <li>Elegir FS con journaling/CoW para datos importantes; reservar exFAT para intercambio entre sistemas.</li> <li>Hacer copias de seguridad: el journaling reduce corrupci\u00f3n, pero no protege frente a borrados accidentales o malware.</li> </ul>"},{"location":"ud2.1/","title":"Unidad 2 - Instalaci\u00f3n y m\u00e1quinas virtuales con Windows y Linux","text":""},{"location":"ud2.1/#introduccion","title":"Introducci\u00f3n","text":"<p>Antes de que un ordenador pueda ser utilizado, es imprescindible contar con un sistema operativo que act\u00fae como base para la ejecuci\u00f3n de programas y aplicaciones. Este componente es el que permite que el hardware y el software trabajen de forma coordinada.</p> <p>En el mercado existen diversas alternativas, como Windows, macOS o Linux, cada una con diferentes versiones y caracter\u00edsticas. No todas resultan apropiadas para cualquier equipo, por lo que la elecci\u00f3n debe hacerse con cuidado. Una selecci\u00f3n inadecuada puede ocasionar fallos de funcionamiento o un rendimiento deficiente.</p> <p>Asimismo, no todas las aplicaciones son compatibles con cualquier sistema operativo, lo que hace necesario valorar qu\u00e9 programas se necesitan y qu\u00e9 hardware est\u00e1 disponible antes de decidir cu\u00e1l instalar.</p>"},{"location":"ud2.1/#seleccionar-un-so","title":"Seleccionar un SO","text":"<p>La decisi\u00f3n sobre qu\u00e9 sistema operativo utilizar no tiene una \u00fanica respuesta v\u00e1lida, ya que depende de m\u00faltiples factores. Antes de elegir conviene plantearse cuestiones como: \u00bfqu\u00e9 hardware tiene el equipo?, \u00bfqu\u00e9 programas necesito ejecutar?, \u00bfqu\u00e9 tipo de interfaz o experiencia de uso prefiero? Una mala elecci\u00f3n puede traducirse en problemas de compatibilidad o en un rendimiento inferior al esperado.</p> <p>Entre los principales aspectos a tener en cuenta destacan:</p> <ul> <li>Econ\u00f3micos: algunos sistemas operativos son de distribuci\u00f3n gratuita (como muchas distribuciones de Linux), mientras que otros requieren la compra de una licencia, como Windows o macOS, cuyo coste debe valorarse en relaci\u00f3n con los beneficios que ofrecen.</li> <li>T\u00e9cnicos: es necesario comprobar que el hardware cumple los requisitos m\u00ednimos y recomendados. De no ser as\u00ed, puede ser necesario optar por una versi\u00f3n m\u00e1s ligera o por una alternativa que aproveche mejor los recursos disponibles.</li> <li>Soporte y actualizaciones: un buen sistema operativo debe contar con actualizaciones de seguridad frecuentes, mejoras de rendimiento y correcci\u00f3n de errores. Windows 11, macOS Sonoma o distribuciones Linux con soporte extendido (LTS) son ejemplos de sistemas que se mantienen actualizados.</li> <li>Preferencias personales: la comodidad y la familiaridad tambi\u00e9n son factores decisivos. Muchos usuarios prefieren seguir utilizando el entorno con el que ya est\u00e1n habituados, aunque cambiar puede ser una opci\u00f3n interesante si la experiencia actual no resulta satisfactoria.</li> </ul> <p>A continuaci\u00f3n, se presenta una descripci\u00f3n general de los sistemas operativos m\u00e1s habituales en ordenadores personales.</p>"},{"location":"ud2.1/#windows","title":"Windows","text":"<p>Desde el lanzamiento de su primera versi\u00f3n, Windows ha acumulado m\u00e1s de tres d\u00e9cadas de evoluci\u00f3n. Su amplia implantaci\u00f3n en ordenadores personales y su facilidad de uso lo han convertido en el sistema operativo m\u00e1s extendido entre los usuarios dom\u00e9sticos y profesionales. A ello se suma una gran cantidad de software disponible y un ecosistema de soporte muy consolidado.</p> <p>Ventajas principales:</p> <ul> <li>La mayor\u00eda de los usuarios est\u00e1 familiarizada con su entorno.</li> <li>Es el sistema con mayor n\u00famero de programas y aplicaciones desarrollados.</li> <li>Su instalaci\u00f3n y manejo resultan sencillos.</li> <li>Gracias a su popularidad, es f\u00e1cil encontrar soluciones a problemas t\u00e9cnicos en foros y comunidades.</li> </ul> <p>Inconvenientes:</p> <ul> <li>Requiere la compra de una licencia, lo que supone un coste elevado en comparaci\u00f3n con alternativas gratuitas.</li> <li>Las versiones m\u00e1s recientes, como Windows 11, demandan hardware potente y moderno.</li> <li>Es m\u00e1s vulnerable a malware y virus, por lo que el uso de un antivirus es pr\u00e1cticamente imprescindible.</li> <li>Puede presentar problemas de compatibilidad con aplicaciones antiguas.</li> <li>Sin un mantenimiento adecuado, el sistema puede volverse inestable con el tiempo.</li> <li>Necesita actualizaciones frecuentes para corregir errores y reforzar la seguridad.</li> </ul>"},{"location":"ud2.1/#linux","title":"Linux","text":"<p>Linux surgi\u00f3 a comienzos de los a\u00f1os noventa en el \u00e1mbito universitario, inicialmente con fines acad\u00e9micos, y pronto se consolid\u00f3 como una alternativa real a Windows. Gracias a la colaboraci\u00f3n de miles de desarrolladores en todo el mundo, se ha convertido en un sistema en constante evoluci\u00f3n, capaz de adaptarse a distintos perfiles de usuarios y necesidades.</p> <p>Ventajas principales:</p> <ul> <li>Es gratuito en la mayor\u00eda de sus distribuciones y no exige un hardware de alto coste.</li> <li>Destaca por su seguridad y estabilidad, lo que lo hace id\u00f3neo para servidores, bases de datos o aplicaciones web.</li> <li>Puede aprovechar equipos con recursos limitados, siendo adecuado incluso para ordenadores antiguos mediante distribuciones ligeras.</li> <li>Ofrece gran cantidad de software libre y gratuito.</li> <li>Existen distribuciones adaptadas a distintos usos (educaci\u00f3n, seguridad, multimedia, servidores, etc.).</li> <li>Las vulnerabilidades suelen resolverse con rapidez gracias al trabajo de la comunidad.</li> <li>Su c\u00f3digo optimizado favorece un buen rendimiento y eficiencia.</li> <li>Es un sistema altamente configurable y flexible.</li> </ul> <p>Inconvenientes:</p> <ul> <li>En algunas tareas avanzadas requiere conocimientos previos de Unix o administraci\u00f3n de sistemas.</li> <li>El soporte comercial es m\u00e1s limitado que en otros sistemas operativos.</li> <li>Aunque ha crecido mucho el cat\u00e1logo, a\u00fan existen menos programas comerciales disponibles.</li> <li>No siempre hay equivalentes directos para determinadas aplicaciones de Windows o macOS.</li> <li>Algunos dispositivos de hardware muy recientes pueden carecer de controladores oficiales.</li> <li>Aunque distribuciones como Ubuntu o Linux Mint han mejorado la usabilidad, puede resultar m\u00e1s complejo para usuarios sin experiencia, ya que la curva de aprendizaje es mayor.</li> <li>Parte de la documentaci\u00f3n sigue siendo t\u00e9cnica, lo que puede generar cierta resistencia entre usuarios noveles.</li> </ul>"},{"location":"ud2.1/#macos","title":"macOS","text":"<p>Apple concibe sus equipos como un producto integrado de hardware y software, de modo que macOS es el sistema operativo exclusivo de los ordenadores Mac. Esta integraci\u00f3n garantiza un alto nivel de optimizaci\u00f3n y estabilidad, lo que lo convierte en una opci\u00f3n muy valorada en determinados entornos profesionales.</p> <p>Ventajas principales:</p> <ul> <li>Su interfaz gr\u00e1fica est\u00e1 muy cuidada y resulta intuitiva, con gran protagonismo de elementos visuales.</li> <li>Es especialmente apreciado en \u00e1mbitos como el dise\u00f1o gr\u00e1fico, la edici\u00f3n de v\u00eddeo y el audio profesional.</li> <li>Destaca por su estabilidad y fiabilidad.</li> <li>Tiene una baja incidencia de virus y malware en comparaci\u00f3n con otros sistemas operativos.</li> </ul> <p>Inconvenientes:</p> <ul> <li>El precio de los equipos es elevado, aunque el sistema operativo viene incluido.</li> <li>Muchas aplicaciones profesionales para macOS tienen un coste superior al de sus equivalentes en otras plataformas.</li> <li>En caso de aver\u00eda, la reparaci\u00f3n suele ser m\u00e1s costosa y dependiente del servicio t\u00e9cnico oficial.</li> <li>Solo puede instalarse en equipos Apple, ya que no es compatible con ordenadores de otros fabricantes.</li> </ul>"},{"location":"ud2.1/#pasos-en-la-instalacion-de-un-so","title":"Pasos en la instalaci\u00f3n de un SO","text":"<p>Cada sistema operativo est\u00e1 dise\u00f1ado para funcionar con unas especificaciones m\u00ednimas de hardware, como un tipo de procesador determinado, una cantidad b\u00e1sica de memoria RAM o un espacio m\u00ednimo en disco. Estos valores aseguran que el sistema pueda ejecutarse, pero no necesariamente que lo haga con un rendimiento fluido.</p> <p>Por este motivo, adem\u00e1s de los requisitos m\u00ednimos, la documentaci\u00f3n t\u00e9cnica suele indicar los requisitos recomendados, que son los que garantizan una experiencia de uso adecuada y estable. Tomar en cuenta ambos par\u00e1metros es fundamental antes de decidir qu\u00e9 sistema operativo instalar en un equipo.</p> <p>A continuaci\u00f3n, se presentar\u00e1n ejemplos de requisitos m\u00ednimos y recomendados de distintos sistemas operativos, considerando aspectos b\u00e1sicos del hardware como procesador, memoria y almacenamiento.</p> Sistema operativo CPU m\u00ednimo / recomendado RAM m\u00ednimo / recomendado Almacenamiento m\u00ednimo / recomendado Windows 11 1 GHz, 2 n\u00facleos, 64-bit 4 GB 64 GB Ubuntu LTS (24.04) Doble n\u00facleo ~2 GHz 4 GB / 8 GB recomendado 25 GB / 50 GB recomendado macOS Sonoma Apple Silicon o Intel 8\u00aa gen en adelante 8 GB 25 GB libres"},{"location":"ud2.1/#copia-de-seguridad-de-los-datos-actuales","title":"Copia de seguridad de los datos actuales","text":"<p>Antes de instalar un nuevo sistema operativo es fundamental realizar una copia de seguridad de la informaci\u00f3n importante, salvo en los casos en que el disco est\u00e9 vac\u00edo y no haya datos que conservar. Si ya existe un sistema operativo instalado, conviene guardar los archivos que se quieran preservar en un medio de almacenamiento externo, como un disco duro externo, una memoria USB o un servicio en la nube, para evitar p\u00e9rdidas irreversibles durante el proceso.</p>"},{"location":"ud2.1/#obtener-el-soporte-de-instalacion","title":"Obtener el soporte de instalaci\u00f3n","text":"<p>Hoy en d\u00eda, los sistemas operativos pueden instalarse desde diferentes medios: unidades \u00f3pticas, memorias USB o directamente mediante descarga desde Internet.</p> <p>En el caso de software propietario, es necesario adquirir una copia legal en tiendas especializadas o a trav\u00e9s de la web oficial. Por el contrario, si se trata de un sistema operativo libre, suele ser suficiente con descargar la imagen ISO desde la p\u00e1gina del proyecto o, en algunos casos, solicitarla en formato f\u00edsico.</p> <p>Con un archivo ISO es posible crear un dispositivo USB de arranque que permita la instalaci\u00f3n, algo especialmente \u00fatil en equipos que no cuentan con lector \u00f3ptico.</p>"},{"location":"ud2.1/#preparar-el-equipo-para-el-arranque-desde-el-soporte-de-instalacion","title":"Preparar el equipo para el arranque desde el soporte de instalaci\u00f3n","text":"<p>En la mayor\u00eda de los casos, la instalaci\u00f3n de un sistema operativo se realiza desde un dispositivo externo, como un DVD o un pendrive USB, que contiene los archivos necesarios para iniciar el proceso. Si la instalaci\u00f3n es desde cero, ser\u00e1 necesario reiniciar el ordenador e indicar que arranque desde dicho soporte, ya que este viene configurado para iniciar autom\u00e1ticamente la instalaci\u00f3n.</p> <p>Existen dos formas principales de lograrlo:</p> <ul> <li>Men\u00fa de arranque: los equipos actuales suelen incluir un men\u00fa de arranque r\u00e1pido que permite elegir el dispositivo desde el que iniciar el sistema. Para acceder a \u00e9l, se debe pulsar una tecla espec\u00edfica (F2, F8, F10, F12, ESC, entre otras) justo al encender el ordenador. La tecla concreta depende del fabricante y suele indicarse en los primeros mensajes de la BIOS/UEFI que aparecen en pantalla. Una vez dentro, se selecciona el dispositivo que contiene el instalador del sistema operativo.</li> <li>Configuraci\u00f3n en la BIOS/UEFI: si el equipo no dispone de men\u00fa de arranque r\u00e1pido, ser\u00e1 necesario entrar en la BIOS/UEFI y modificar el orden de arranque. En la secci\u00f3n correspondiente (habitualmente llamada Boot o Boot Order), se establece como primera opci\u00f3n el dispositivo con el instalador. Tras guardar los cambios, el ordenador se reiniciar\u00e1 iniciando desde el soporte seleccionado.</li> </ul>"},{"location":"ud2.1/#ejecutar-el-programa-de-instalacion","title":"Ejecutar el programa de instalaci\u00f3n","text":"<p>Una vez realizados los pasos previos y configurado el arranque desde el soporte de instalaci\u00f3n, el ordenador iniciar\u00e1 autom\u00e1ticamente el programa de instalaci\u00f3n del sistema operativo. Este suele presentarse como un asistente que gu\u00eda al usuario paso a paso, solicitando la informaci\u00f3n necesaria seg\u00fan el sistema y la versi\u00f3n seleccionados.</p> <p>Entre las configuraciones m\u00e1s habituales que se deben indicar se encuentran:</p> <ul> <li>Selecci\u00f3n de particiones: se debe elegir la partici\u00f3n del disco en la que se instalar\u00e1 el sistema. Es importante asegurarse de no seleccionar una que contenga informaci\u00f3n valiosa, ya que ser\u00e1 borrada durante el proceso.</li> <li>Creaci\u00f3n del usuario administrador: todo sistema multiusuario requiere una cuenta con privilegios de administraci\u00f3n. Generalmente, esta es la primera cuenta que se configura y tendr\u00e1 a su cargo la gesti\u00f3n inicial del sistema.</li> <li>Selecci\u00f3n de software opcional: algunos instaladores ofrecen la posibilidad de a\u00f1adir programas adicionales durante la instalaci\u00f3n, ya sea mediante una configuraci\u00f3n recomendada o a trav\u00e9s de una selecci\u00f3n personalizada.</li> <li>Par\u00e1metros de red: si el equipo se conectar\u00e1 a Internet o a una red local, es necesario configurar la tarjeta de red. En la mayor\u00eda de los casos se emplea DHCP, lo que permite obtener autom\u00e1ticamente la configuraci\u00f3n sin intervenci\u00f3n. Si se requiere configuraci\u00f3n manual, ser\u00e1 necesario introducir datos como la direcci\u00f3n IP, la m\u00e1scara de red, la puerta de enlace y los servidores DNS.</li> </ul>"},{"location":"ud2.1/#instalador-del-gestor-de-arranque","title":"Instalador del gestor de arranque","text":"<p>Tras copiar los archivos del sistema operativo en el disco, el instalador completa el proceso configurando el gestor de arranque. Este peque\u00f1o programa se encarga de iniciar el sistema operativo o, en el caso de tener varios instalados, de permitir al usuario elegir cu\u00e1l arrancar. En Windows se utiliza Windows Boot Manager, mientras que en la mayor\u00eda de distribuciones Linux se emplea GRUB (GRand Unified Bootloader).</p> <p>Es importante tener en cuenta que la instalaci\u00f3n de Windows suele sobrescribir cualquier cargador previo, por lo que en sistemas de arranque dual conviene instalar primero Windows y despu\u00e9s Linux.</p>"},{"location":"ud2.1/#actualizaciones-de-seguridad","title":"Actualizaciones de seguridad","text":"<p>Una vez finalizada la instalaci\u00f3n, es muy probable que existan actualizaciones publicadas despu\u00e9s de la versi\u00f3n original del sistema. Estas pueden incluir mejoras de seguridad, correcci\u00f3n de fallos y optimizaci\u00f3n de rendimiento.</p> <p>Normalmente, los sistemas operativos modernos descargan e instalan estas actualizaciones de manera autom\u00e1tica tras el primer arranque. Mantener el sistema actualizado es esencial para protegerlo frente a vulnerabilidades, malware o errores no detectados en la versi\u00f3n inicial.</p>"},{"location":"ud2.1/#instalacion-de-controladores-de-dispositivos","title":"Instalaci\u00f3n de controladores de dispositivos","text":"<p>Despu\u00e9s de instalar el sistema operativo, es posible que algunos componentes de hardware no funcionen correctamente. Para que lo hagan, es necesario instalar sus controladores (drivers), peque\u00f1os programas que permiten la comunicaci\u00f3n entre el hardware y el sistema operativo.</p> <p>Aunque muchos sistemas incluyen una base de drivers gen\u00e9ricos, lo m\u00e1s recomendable es instalar los controladores oficiales del fabricante, ya que garantizan un mejor aprovechamiento del dispositivo y ofrecen todas sus funciones.</p> <p>Los drivers pueden obtenerse de tres maneras principales:</p> <ul> <li>A trav\u00e9s del CD o memoria USB proporcionado con la placa base, que incluye controladores para los componentes integrados.</li> <li>Mediante el disco o soporte incluido con el propio dispositivo.</li> <li>Descarg\u00e1ndolos desde la p\u00e1gina web del fabricante, asegur\u00e1ndose de elegir la versi\u00f3n adecuada para el sistema operativo instalado.</li> </ul> <p>En algunos casos, puede ser necesario reiniciar el equipo tras la instalaci\u00f3n de un controlador.</p>"},{"location":"ud2.1/#instalacion-de-aplicaciones","title":"Instalaci\u00f3n de aplicaciones","text":"<p>Con el sistema ya operativo y configurado, el siguiente paso es instalar las aplicaciones de usuario necesarias. Cada programa requiere unos requisitos m\u00ednimos, entre los que figura el sistema operativo compatible y su versi\u00f3n. Solo cumpliendo esas condiciones podr\u00e1n instalarse y funcionar correctamente.</p>"},{"location":"ud2.1/#terminologia","title":"Terminolog\u00eda","text":"<p>En este apartado se abordar\u00e1 el proceso de instalaci\u00f3n de Windows 11 y Lubuntu en un PC moderno con UEFI y Secure Boot. Antes de profundizar en la instalaci\u00f3n, conviene repasar algunos conceptos clave relacionados con las tecnolog\u00edas de firmware que los fabricantes de placas base incluyen en sus equipos actuales.</p>"},{"location":"ud2.1/#uefi-unified-extensible-firmware-interface","title":"UEFI (Unified Extensible Firmware Interface)","text":"<p>La UEFI es una interfaz de firmware est\u00e1ndar que sustituye a la tradicional BIOS (Basic Input/Output System). Fue desarrollada por un consorcio de m\u00e1s de 140 empresas tecnol\u00f3gicas, entre ellas Microsoft, con el objetivo de superar las limitaciones de la BIOS cl\u00e1sica y ofrecer una mayor compatibilidad e interoperabilidad.</p> <p>A diferencia de la BIOS tradicional, UEFI cuenta con un entorno gr\u00e1fico m\u00e1s avanzado y f\u00e1cil de usar, soporte multilenguaje y la posibilidad de integrar utilidades adicionales, como herramientas de red o diagn\u00f3sticos previos al arranque. Podr\u00eda describirse como una \u201cBIOS moderna\u201d con un dise\u00f1o m\u00e1s intuitivo y un rendimiento superior.</p> <p>Ventajas principales de UEFI:</p> <ul> <li>Refuerza la seguridad frente a ataques de bootkit durante el arranque.</li> <li>Reduce los tiempos de inicio y de reanudaci\u00f3n desde la hibernaci\u00f3n.</li> <li>Permite trabajar con discos de gran capacidad, superiores a 2,2 TB.</li> <li>Soporta controladores de firmware modernos de 64 bits.</li> <li>Mantiene compatibilidad con hardware dise\u00f1ado para BIOS.</li> <li>Incorpora la posibilidad de activar Secure Boot para garantizar un arranque verificado.</li> </ul> <p></p> <p></p>"},{"location":"ud2.1/#particionamiento-gpt-vs-mbr","title":"Particionamiento GPT vs MBR","text":"<p>Una de las grandes ventajas de contar con UEFI es la posibilidad de usar el esquema de particionamiento GPT (GUID Partition Table) en lugar del cl\u00e1sico MBR (Master Boot Record).</p> <p>Limitaciones de MBR:</p> <ul> <li>Solo admite hasta 4 particiones primarias, o bien 3 primarias y una extendida que contenga m\u00faltiples unidades l\u00f3gicas.</li> <li>El tama\u00f1o m\u00e1ximo de cada partici\u00f3n es de 2,2 TB, lo que limita la gesti\u00f3n de discos a un m\u00e1ximo de 8,8 TB.</li> </ul> <p>Ventajas de GPT:</p> <ul> <li>Permite hasta 128 particiones primarias sin necesidad de particiones extendidas.</li> <li>Cada partici\u00f3n puede alcanzar un tama\u00f1o de hasta 9,3 ZB (zettabytes), una capacidad pr\u00e1cticamente inalcanzable con la tecnolog\u00eda actual.</li> <li>Proporciona un arranque m\u00e1s r\u00e1pido y confiable.</li> </ul> <p>Cuando Windows se instala en modo UEFI, utiliza autom\u00e1ticamente el esquema GPT para gestionar las particiones del disco.</p>"},{"location":"ud2.1/#secure-boot","title":"Secure Boot","text":"<p>Secure Boot es una caracter\u00edstica de UEFI incorporada a partir de Windows 8. Su objetivo es proteger la fase de arranque del sistema operativo frente a software malicioso.</p> <p>Este mecanismo asegura que \u00fanicamente se ejecute c\u00f3digo firmado y certificado por el fabricante, bloqueando as\u00ed intentos de infecci\u00f3n mediante bootkits o malware que ataque antes de que cargue el sistema.</p> <p>El principal inconveniente es que si una distribuci\u00f3n de Linux no cuenta con la firma digital reconocida por el firmware, el equipo impedir\u00e1 su instalaci\u00f3n. No obstante, muchas distribuciones actuales incluyen soporte para Secure Boot o proporcionan m\u00e9todos para instalarse en sistemas que lo tienen activado.</p>"},{"location":"ud2.1/#virtualizacion","title":"Virtualizaci\u00f3n","text":"<p>La virtualizaci\u00f3n es una tecnolog\u00eda que permite crear entornos inform\u00e1ticos simulados que funcionan como si fueran equipos f\u00edsicos reales. A trav\u00e9s de un software especializado, conocido como hipervisor, es posible ejecutar m\u00faltiples sistemas operativos y aplicaciones en un mismo ordenador, compartiendo los recursos de hardware (procesador, memoria, almacenamiento, red) de manera controlada y eficiente.</p> <p>Este enfoque ofrece grandes ventajas: reduce la necesidad de disponer de varios equipos f\u00edsicos, facilita la realizaci\u00f3n de pruebas en diferentes sistemas operativos sin alterar el sistema principal y permite optimizar el uso de los recursos disponibles. Adem\u00e1s, la virtualizaci\u00f3n es fundamental en entornos profesionales y educativos, ya que posibilita la creaci\u00f3n de laboratorios de pr\u00e1cticas, el despliegue de servidores virtuales y la ejecuci\u00f3n de software en plataformas diversas.</p> <p></p>"},{"location":"ud2.1/#virtualbox","title":"VirtualBox","text":"<p>VirtualBox es una herramienta de virtualizaci\u00f3n de c\u00f3digo abierto desarrollada originalmente por Sun Microsystems y actualmente mantenida por Oracle. Permite ejecutar sistemas operativos completos como m\u00e1quinas virtuales dentro de otro sistema anfitri\u00f3n, lo que significa que es posible tener varios entornos diferentes en un mismo ordenador sin necesidad de modificar el disco f\u00edsico ni afectar al sistema principal.</p> <p>Su principal uso es crear entornos de prueba y aprendizaje, ya que facilita instalar, configurar y ejecutar sistemas operativos como Windows, Linux o incluso versiones antiguas de macOS en una m\u00e1quina virtual. Adem\u00e1s, ofrece opciones avanzadas como la creaci\u00f3n de instant\u00e1neas para guardar el estado de una m\u00e1quina y restaurarlo en cualquier momento, la configuraci\u00f3n de redes virtuales o la integraci\u00f3n entre el sistema anfitri\u00f3n y el invitado para compartir carpetas, portapapeles y dispositivos USB.</p> <p>Gracias a su versatilidad y facilidad de uso, VirtualBox es una de las soluciones m\u00e1s utilizadas en educaci\u00f3n, pruebas de software y entornos de desarrollo.</p> <p>Puedes descargar VirtualBox en el siguiente enlace.</p>"},{"location":"ud2.1/#crear-una-maquina-virtual","title":"Crear una m\u00e1quina virtual","text":"<p>Para comenzar a trabajar con VirtualBox, el primer paso es crear una m\u00e1quina virtual que actuar\u00e1 como el entorno en el que instalaremos el sistema operativo invitado. El proceso b\u00e1sico es el siguiente:</p> <ol> <li>Abrir VirtualBox y hacer clic en el bot\u00f3n Nueva para iniciar el asistente de creaci\u00f3n.</li> <li>Introducir un nombre para la m\u00e1quina virtual y seleccionar el tipo y la versi\u00f3n del sistema operativo que se instalar\u00e1. Luego, hacer clic en Siguiente.</li> <li>Definir la cantidad de memoria RAM (en MB) que se asignar\u00e1 a la m\u00e1quina virtual y continuar con Siguiente.</li> <li>Si ya se dispone de un disco virtual creado, elegir la opci\u00f3n Usar un disco duro virtual existente, localizar el archivo correspondiente y hacer clic en Siguiente.</li> <li>Si no existe un disco, seleccionar la opci\u00f3n Crear un disco duro virtual ahora y pulsar Crear.</li> <li>En el asistente de creaci\u00f3n de disco, mantener seleccionado el tipo VDI (VirtualBox Disk Image) y hacer clic en Siguiente.</li> <li>Elegir el tipo de almacenamiento: din\u00e1mico (ocupa menos espacio inicialmente pero puede crecer) o tama\u00f1o fijo (m\u00e1s r\u00e1pido pero reserva todo el espacio desde el principio). Pulsar Siguiente.</li> <li>Establecer la ubicaci\u00f3n y el tama\u00f1o del disco virtual. Finalmente, hacer clic en Crear para completar la configuraci\u00f3n.</li> </ol> <p></p> <p>Con estos pasos, la m\u00e1quina virtual queda lista para proceder a la instalaci\u00f3n del sistema operativo invitado.</p>"},{"location":"ud2.1/#modificar-la-configuracion-de-la-maquina-virtual","title":"Modificar la configuraci\u00f3n de la m\u00e1quina virtual","text":"<p>Despu\u00e9s de crear una m\u00e1quina virtual en VirtualBox, es recomendable ajustar su configuraci\u00f3n para optimizar el rendimiento y facilitar la interacci\u00f3n con el sistema anfitri\u00f3n. Los pasos m\u00e1s habituales son los siguientes:</p> <ol> <li>Seleccionar la m\u00e1quina virtual en el administrador de VirtualBox y hacer clic en Configuraci\u00f3n.</li> <li>En General \u2192 Avanzado, activar la opci\u00f3n Compartir portapapeles en modo Bidireccional para poder copiar y pegar entre el sistema anfitri\u00f3n y el invitado.</li> <li>En Sistema \u2192 Placa base, modificar el orden de arranque, desactivando el disquete, situando el disco duro como primera opci\u00f3n y dejando en tercer lugar la unidad de disquete si fuera necesario.</li> <li>En Pantalla \u2192 Pantalla, asignar el m\u00e1ximo de memoria de v\u00eddeo disponible para mejorar el rendimiento gr\u00e1fico.</li> <li>En Almacenamiento, seleccionar la unidad \u00f3ptica dentro del \u00e1rbol de dispositivos y cargar el archivo ISO del sistema operativo que se instalar\u00e1.</li> <li>En Red \u2192 Adaptador 1, habilitar el adaptador de red y seleccionar el modo de conexi\u00f3n m\u00e1s adecuado (por ejemplo, NAT o puente).</li> <li>En Carpetas compartidas, a\u00f1adir una carpeta del sistema anfitri\u00f3n para compartirla con la m\u00e1quina virtual.</li> <li>Guardar los cambios haciendo clic en Aceptar.</li> </ol> <p>Con esta configuraci\u00f3n, la m\u00e1quina virtual estar\u00e1 lista para iniciar la instalaci\u00f3n del sistema operativo invitado de forma m\u00e1s c\u00f3moda y eficiente.</p>"},{"location":"ud2.1/#instalar-el-sistema-operativo-invitado","title":"Instalar el sistema operativo invitado","text":"<p>Una vez configurada la m\u00e1quina virtual, el siguiente paso es instalar el sistema operativo elegido:</p> <ol> <li>En el administrador de VirtualBox, seleccionar la m\u00e1quina creada y hacer clic en Iniciar.</li> <li>La m\u00e1quina arrancar\u00e1 desde el archivo ISO previamente configurado y se abrir\u00e1 el asistente de instalaci\u00f3n del sistema operativo.</li> <li>Seguir los pasos indicados por el instalador hasta completar el proceso.</li> </ol>"},{"location":"ud2.1/#instalar-las-guest-additions","title":"Instalar las Guest Additions","text":"<p>Las Guest Additions son un conjunto de controladores y utilidades que mejoran la integraci\u00f3n entre el sistema anfitri\u00f3n y el invitado, permitiendo funciones como pantalla completa, carpetas compartidas, sincronizaci\u00f3n del portapapeles o mejor soporte gr\u00e1fico.</p> <p>En sistemas Windows:</p> <ol> <li>En el men\u00fa de la ventana de la m\u00e1quina virtual, ir a Dispositivos \u2192 Insertar imagen de CD de las Guest Additions.</li> <li>Cuando aparezca la ventana de reproducci\u00f3n autom\u00e1tica, seleccionar Ejecutar VBoxWindowsAdditions.exe y seguir las instrucciones del asistente.</li> <li>Reiniciar la m\u00e1quina virtual al finalizar.</li> </ol> <p>En sistemas Linux:</p> <ol> <li>Abrir una terminal y ejecutar:</li> </ol> <pre><code>sudo apt-get install dkms\n</code></pre> <ol> <li>A continuaci\u00f3n, instalar los paquetes de compilaci\u00f3n y cabeceras del kernel:</li> </ol> <pre><code>sudo apt-get install build-essential linux-headers-$(uname -r)\n</code></pre> <ol> <li>En el men\u00fa de la m\u00e1quina virtual, seleccionar Dispositivos \u2192 Insertar imagen de CD de las Guest Additions.</li> <li>Cuando aparezca la ventana emergente, hacer clic en Ejecutar.</li> <li>Introducir la contrase\u00f1a del usuario administrador cuando se solicite.</li> <li>Reiniciar la m\u00e1quina virtual para aplicar los cambios.</li> </ol>"},{"location":"ud2.2/","title":"Unidad 2 - Instalaci\u00f3n de Windows 11","text":""},{"location":"ud2.2/#proceso-de-instalacion","title":"Proceso de instalaci\u00f3n","text":"<p>En este punto comenzaremos con la instalaci\u00f3n de Windows 11 en nuestro PC o m\u00e1quina virtual. Podemos descargar la \u00faltima versi\u00f3n de Windows 11 en su p\u00e1gina web (Descargar una imagen de disco (archivo ISO) de Windows 11 para dispositivos x64). Una vez cargado el medio de instalaci\u00f3n de Windows nos aparecer\u00e1 la pantalla para seleccionar el idioma de configuraci\u00f3n y el formato de hora y moneda. Seleccionaremos Espa\u00f1ol (Espa\u00f1a, internacional) en ambos casos y haremos clic en el bot\u00f3n Siguiente.</p> <p></p> <p>A continuaci\u00f3n, deberemos seleccionar el teclado o m\u00e9todo de entrada. Volvemos a seleccionar Espa\u00f1ol y hacemos clic en el bot\u00f3n Siguiente.</p> <p></p> <p>En la siguiente pantalla el asistente de instalaci\u00f3n nos pregunta sobre si queremos instalar Windows 11 o reparar el equipo. En nuestro caso, puesto que se trata de una instalaci\u00f3n de cero, en la que no existe contenido alguno anterior en el disco, seleccionamos Instalar Windows 11, y marcamos la casilla de I agree everything will be deleted including files, apps, and settings. Seguidamente clicamos en el bot\u00f3n Siguiente.</p> <p></p> <p>La siguiente ventana nos solicitar\u00e1 una clave de producto de Windows 11. Podemos introducirla en dicho campo y hacemos clic en el bot\u00f3n Siguiente. Tambi\u00e9n podemos clicar en No tengo clave de producto en caso de estar instalado una versi\u00f3n de evaluaci\u00f3n.</p> <p></p> <p>En el siguiente paso nos solicitar\u00e1 que seleccionemos la imagen a instalar, es decir, la versi\u00f3n espec\u00edfica de Windows 11 que deseamos instalar. Seleccionaremos Windows 11 Pro y haremos clic en el bot\u00f3n Siguiente.</p> <p></p> <p>Ahora nos presenta el Contrato de T\u00e9rminos de licencia y avisos aplicables, el cual deberemos aceptar haciendo clic en el bot\u00f3n Aceptar para poder continuar con la instalaci\u00f3n.</p> <p></p> <p>A continuaci\u00f3n, se muestra la herramienta de gesti\u00f3n de discos, que muestra todas las unidades detectadas y permite administrarlas antes de proceder con la instalaci\u00f3n.</p> <p>En esta pantalla es posible cargar controladores adicionales mediante el enlace Load Driver, \u00fatil en casos donde el instalador no reconoce el disco duro. Estos controladores pueden obtenerse en un CD o memoria USB proporcionada por el fabricante, o descargarse desde su p\u00e1gina web. Esta opci\u00f3n suele ser necesaria especialmente en configuraciones con discos SCSI u otros controladores espec\u00edficos.</p> <p>Adem\u00e1s, podemos realizar funciones avanzadas como:</p> <ul> <li>Eliminar particiones existentes.</li> <li>Formatear particiones seleccionadas.</li> <li>Extender particiones para aprovechar m\u00e1s espacio.</li> <li>Crear nuevas particiones en el disco.</li> </ul> <p>Si se selecciona el espacio no asignado y se pulsa Siguiente, el instalador crear\u00e1 autom\u00e1ticamente una partici\u00f3n que ocupar\u00e1 todo ese espacio (todo el disco en nuestro caso) y comenzar\u00e1 la instalaci\u00f3n de Windows 11 en ella.</p> <p>Si no se desea ocupar todo el espacio no asignado del disco, se puede hacer clic en Nuevo y especificar el tama\u00f1o que se dedicar\u00e1 a la instalaci\u00f3n de Windows. Aunque el asistente hable de \u201ccrear una partici\u00f3n\u201d, en realidad lo que se define es cu\u00e1nto espacio del disco se reserva para el sistema. Al confirmar con Aplicar, aparece un mensaje indicando que se crear\u00e1n de manera autom\u00e1tica las particiones necesarias para que Windows funcione correctamente.</p> <p>En un ordenador con UEFI y esquema de particionamiento GPT, el instalador genera normalmente las siguientes particiones:</p> <ol> <li>Partici\u00f3n de recuperaci\u00f3n del sistema (500 MB): contiene herramientas de reparaci\u00f3n, como el Entorno de Recuperaci\u00f3n de Windows (Windows RE).</li> <li>Partici\u00f3n del sistema EFI (100 MB): es la partici\u00f3n de arranque de los equipos con GPT. Debe estar en formato FAT32 y solo contiene archivos esenciales para iniciar el sistema.</li> <li>Partici\u00f3n reservada de Microsoft (MSR, 16 MB): no tiene letra de unidad ni permite almacenar datos de usuario. Se utiliza internamente por Windows para gestionar el disco.</li> <li>Partici\u00f3n principal de Windows: aqu\u00ed se instala el sistema operativo. Requiere al menos 20 GB de espacio para la versi\u00f3n de 64 bits (16 GB en la de 32 bits) y debe estar formateada en NTFS.</li> </ol> <p>Con esta estructura, el sistema queda preparado para arrancar en modo UEFI de forma segura y eficiente.</p> <p></p> <p>Si el PC tiene Firmware BIOS o UEFI configurado en modo de compatabilidad de BIOS (BIOS Legacy), el instalador de Windows detectar\u00e1 este supuesto e instalar\u00e1 Windows con un esquema de particinamiento MBR y dos particiones:</p> <ul> <li>Partici\u00f3n de sistema (100 MB): Partici\u00f3n de arranque.</li> <li>Partici\u00f3n principal de Windows: Aqu\u00ed se encontrar\u00e1 instalado el sistema operativo.</li> </ul> <p>C\u00f3mo \u00faltimo paso en el asistente de instalaci\u00f3n seremos preguntados sobre proceder con la instalaci\u00f3n o volver atr\u00e1s. Hacemos clic en el bot\u00f3n Instalar.</p> <p></p> <p>En este punto el instalador comenzar\u00e1 a realizar la copia de archivos e instalaci\u00f3n propiamente dicha. Seguiremos las indicaciones que aparecen en \u00e9l y esperaremos su finalizaci\u00f3n.</p> <p></p> <p>Una vez completada la instalaci\u00f3n propiamente dicha, comenzar\u00e1 el proceso de configuraci\u00f3n inicial b\u00e1sica, que requerir\u00e1 de la intervenci\u00f3n del usuario. Comenzar\u00e1 preguntando acerca del pa\u00eds o regi\u00f3n en donde nos encontramos. Seleccionamos Espa\u00f1a y hacemos clic en el bot\u00f3n S\u00ed.</p> <p></p> <p>A continuaci\u00f3n, volvemos a ser preguntados sobre la distribuci\u00f3n de teclado que deseamos usar. Seleccionamos Espa\u00f1ol y clicamos en el bot\u00f3n S\u00ed.</p> <p></p> <p>Llegados a este punto el asistente nos preguntar\u00e1 si deseamos a\u00f1adir una segunda distribuci\u00f3n de teclado. En nuestro caso, lo omitiremos haciendo clic en el bot\u00f3n correspondiente.</p> <p></p> <p>En la siguiente pantalla, el asistente comenzar\u00e1 a realizar varias configuraciones, como se puede observar en la siguiente imagen, que se pueden extender durante varios minutos.</p> <p></p> <p>El siguiente paso nos requerir\u00e1 el nombre del dispositivo, el cual debe cumplir una serie de normas. Este nombre es posible cambiarlo posteriormente. En nuestro caso introducimos, por ejemplo, VirtualBoxWin11 y hacemos clic en Siguiente.</p> <p></p> <p>En este punto, el asistente de configuraci\u00f3n nos solicita informaci\u00f3n acerca de si el dispositivo se utilizar\u00e1 para uso personal, o profesional o educativo (formando parte de una organizaci\u00f3n). Seleccionamos Configurar para uso personal y hacemos clic en Siguiente.</p> <p></p> <p>A continuaci\u00f3n, nos solicitar\u00e1 que iniciemos sesi\u00f3n con una cuenta de Microsoft para continuar con la configuraci\u00f3n. Esto es un requisito en las \u00faltimas versiones de Windows 11, pero podemos hacer un peque\u00f1o truco para salt\u00e1rnoslo y poder crear \u00fanicamente una cuenta de usuario local. </p> <p></p> <p>Para ello, pulsamos la combinaci\u00f3n de teclas Shift + F10 y se abrir\u00e1 una terminal (consola de comandos). En ella introduciremos el siguiente comando y pulsamos Enter:</p> <pre><code>start ms-cxh:localonly\n</code></pre> <p></p> <p>Esta acci\u00f3n abrir\u00e1 una ventana que nos permitir\u00e1 crear un nuevo usuario en local. Deberemos introducir un nombre de usuario, contrase\u00f1a, y la respuesta a tres preguntas de seguridad para poder recuperar la contrase\u00f1a en caso de olvido.</p> <p></p> <p>Rellenamos todos los campos con la informaci\u00f3n solicitada y hacemos clic en el bot\u00f3n Siguiente. De esta forma evitamos tener que usar una cuenta de Microsoft para iniciar sesi\u00f3n en nuestro sistema operativo.</p> <p></p> <p></p> <p>Seguidamente, el sistema operativo continuar\u00e1 realizando configuraci\u00f3n, las cuales pueden alargarse varios minutos, mostrando pantallas similares a la siguiente imagen:</p> <p></p> <p>A continuaci\u00f3n, una vez finalizada la configuraci\u00f3n autom\u00e1tica anterior, el asistente nos realizar\u00e1 varias preguntas sobre la autorizaci\u00f3n de cesi\u00f3n de datos personales recopilados por el sistema operativo con fines de mejora de rendimiento y experiencia de usuario. Marcamos, de forma sucesiva en No o Solo obligatorios, y hacemos clic en el bot\u00f3n Aceptar.</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>Llegados a este punto, la configuraci\u00f3n inicial finalizar\u00e1 y se nos mostrar\u00e1 el escritorio de nuestro sistema operativo con la sesi\u00f3n iniciada del usuario que hemos introducido anteriormente.</p> <p></p>"},{"location":"ud2.2/#actualizacion-de-windows","title":"Actualizaci\u00f3n de Windows","text":"<p>Una buena pr\u00e1ctica tras la instalaci\u00f3n del sistema operativo es la actualizaci\u00f3n de este. Para realizarla hacemos clic en el bot\u00f3n Inicio (icono de Windows), despu\u00e9s en Configuraci\u00f3n, y en el men\u00fa de la izquierda en Windows Update.</p> <p></p> <p></p> <p>En este punto deber\u00edan aparecernos algunas instalaciones ya encontradas. Para instalarlas hacemos clic en el bot\u00f3n Descargar e instalar todo. Si no nos aparece ninguna actualizaci\u00f3n disponible podemos buscarlas con el bot\u00f3n Buscar actualizaciones.</p> <p>El proceso de instalaci\u00f3n suele ser lento y en bastantes ocasiones nos solicitar\u00e1 reiniciar el sistema para finalizar.</p> <p> </p> <p>Hoy en d\u00eda, Windows Update ofrece controladores de la mayor\u00eda del hardware com\u00fan (tarjetas de red, sonido, gr\u00e1ficas b\u00e1sicas, perif\u00e9ricos\u2026). Eso significa que un equipo reci\u00e9n instalado suele funcionar de forma aceptable sin necesidad de buscarlos manualmente, aunque no siempre son los m\u00e1s recientes ni los m\u00e1s completos.</p>"},{"location":"ud2.2/#desactivar-actualizaciones-automaticas","title":"Desactivar actualizaciones autom\u00e1ticas","text":"<p>En el uso de m\u00e1quinas virtuales, resulta conveniente desactivar las actualizaciones autom\u00e1ticas de Windows 11 porque estas consumen recursos adicionales de CPU, memoria y disco, lo que puede ralentizar el rendimiento de la m\u00e1quina virtual. Adem\u00e1s, las actualizaciones pueden modificar configuraciones o instalar cambios que afecten a la estabilidad del sistema virtualizado, dificultando la pr\u00e1ctica y el aprendizaje en un entorno controlado.</p> <p>Para desactivar las actualizaciones autom\u00e1ticas en Windows 11 podemos hacer lo siguiente:</p> <ol> <li>Pulsa Win + R, escribe services.msc y presiona Enter.</li> <li>Busca Windows Update en la lista.</li> <li>Haz doble clic \u2192 en Tipo de inicio, selecciona Deshabilitado.</li> <li>Pulsa Detener y luego Aplicar.</li> </ol> <p></p> <p> </p>"},{"location":"ud2.2/#creacion-de-una-carpeta-compartida-entre-el-anfitrion-y-el-huesped","title":"Creaci\u00f3n de una carpeta compartida entre el anfitri\u00f3n y el hu\u00e9sped","text":"<p>Cuando trabajamos con m\u00e1quinas virtuales, a menudo necesitamos intercambiar archivos entre el sistema host (el ordenador f\u00edsico) y el sistema guest (la m\u00e1quina virtual). Aunque es posible hacerlo mediante memorias USB o enviando archivos por la red, estas opciones son menos pr\u00e1cticas y m\u00e1s lentas.</p> <p>Las carpetas compartidas de VirtualBox ofrecen una soluci\u00f3n m\u00e1s sencilla y eficiente: permiten que una carpeta del host sea accesible directamente desde el guest, como si formara parte de sus propias unidades de almacenamiento. De esta forma, se pueden transferir documentos, programas o configuraciones sin necesidad de recurrir a dispositivos externos ni configuraciones de red complejas.</p> <p>En resumen, las carpetas compartidas facilitan el trabajo en entornos virtualizados porque agilizan el flujo de archivos, ahorran tiempo y mejoran la integraci\u00f3n entre el host y la m\u00e1quina virtual.</p> <p>Info</p> <p>Para que esta gu\u00eda funcione es necesario tener previamente instalados los VirtualBox Guest Additions.</p> <p>Lo primero que deberemos realizar es crear la carpeta compartida en nuestro host (m\u00e1quina real), por ejemplo, en el escritorio.</p> <p> </p> <p>A continuaci\u00f3n, nos dirigimos a VirtualBox, seleccionamos la m\u00e1quina virtual hu\u00e9sped donde queremos compartir los archivos y entramos en Configuraci\u00f3n -&gt; Carpetas compartidas.</p> <p> </p> <p>Hacemos clic en el bot\u00f3n + (Agregar nueva carpeta compartida) e incluimos:</p> <ul> <li>Ruta de la carpeta: introducimos la ruta de la carpeta que creamos en el host.</li> <li>Nombre de la carpeta: nombre identificativo.</li> <li>Marcamos las casillas de:<ul> <li>Automontar.</li> </ul> </li> </ul> <p>Guardamos los cambios.</p> <p> </p> <p> </p> <p>Desde este momento, al iniciar nuestro sistema hu\u00e9sped tendremos la carpeta compartida funcionando. Para acceder a ella desde nuestra m\u00e1quina virtual, debemos ir a Este Equipo, y podremos verla en Ubicaciones de red.</p> <p></p>"},{"location":"ud2.2/#acceder-a-un-dispositivo-de-almacenamiento-externo-usb-desde-la-maquina-virtual-en-virtualbox","title":"Acceder a un dispositivo de almacenamiento externo USB desde la m\u00e1quina virtual en VirtualBox","text":"<p>Si conectamos un pendrive u otro dispositivo de almacenamiento externo a nuestra m\u00e1quina real (host) a trav\u00e9s de un puerto USB, este no se ver\u00e1 desde la m\u00e1quina hu\u00e9sped. Para poder acceder desde esta \u00faltima deberemos realizar los siguientes pasos.</p> <p>Comenzaremos descargando e instalando el Oracle VirtualBox Extension Pack. Si hacemos doble clic en el archivo descargado seremos preguntados acerca de instalar este paquete de instalaci\u00f3n. Pulsamos en el bot\u00f3n Instalar. Aceptamos las condiciones y esperamos que finalice.</p> <p>A continuaci\u00f3n, con la m\u00e1quina virtual apagada, nos dirigimos a la configuraci\u00f3n de la misma, desde Configuraci\u00f3n -&gt; Puertos USB. Marcamos la opci\u00f3n de Controlador USB 3.0 (xHCI) (si no lo estaba anteriormente).</p> <p></p> <p>Seguidamente, hacemos clic en el icono de + (Agregar nuevo filtro USB), seleccionamos el dispositivo de la lista (por nombre y fabricante) y este se a\u00f1adir\u00e1 como filtro para que el anfitri\u00f3n lo pueda capturar.</p> <p></p> <p></p> <p>Iniciamos la m\u00e1quina virtual, insertamos el pendrive en la m\u00e1quina host (si lo hab\u00edamos retirado) y en la barra superior de VirtualBox nos dirigimos a Dispositivos -&gt; USB -&gt; [Nombre del pendrive]. En este punto, lo seleccionamos si no aparece seleccionado.</p> <p></p> <p>En nuestra m\u00e1quina virtual nos dirigimos al explorador de archivos, accedemos a Este Equipo y podremos ver como el dispositivo de almacenamiento USB est\u00e1 disponible para acceder a \u00e9l como una unidad extra\u00edble normal.</p> <p></p>"},{"location":"ud2.3/","title":"Unidad 2 - Instalaci\u00f3n de GNU/Linux","text":""},{"location":"ud2.3/#gnulinux","title":"GNU/Linux","text":"<p>GNU/Linux es el resultado de la combinaci\u00f3n del n\u00facleo Linux, creado por Linus Torvalds, y el proyecto GNU, impulsado por la Free Software Foundation. De su uni\u00f3n surgi\u00f3 un sistema operativo completo acompa\u00f1ado de numerosas aplicaciones de usuario, caracterizado por ser de libre distribuci\u00f3n y altamente vers\u00e1til.</p>"},{"location":"ud2.3/#introduccion-al-software-libre","title":"Introducci\u00f3n al software libre","text":"<p>El software libre otorga a los usuarios la libertad de usar, copiar, estudiar, modificar y redistribuir el programa. Seg\u00fan la Free Software Foundation, se considera libre si cumple con las siguientes cuatro libertades:</p> <ul> <li>Libertad 0: ejecutar el programa para cualquier prop\u00f3sito.</li> <li>Libertad 1: estudiar c\u00f3mo funciona y adaptarlo a las propias necesidades (requiere acceso al c\u00f3digo fuente).</li> <li>Libertad 2: redistribuir copias y compartirlas con otros.</li> <li>Libertad 3: mejorar el programa y poner esas mejoras a disposici\u00f3n de la comunidad.</li> </ul> <p>Es importante se\u00f1alar que software libre no es sin\u00f3nimo de software gratuito. Puede existir software libre de pago, siempre que respete estas libertades. Del mismo modo, un software gratuito puede no ser libre si no cumple los principios anteriores.</p> <p>Ventajas del software libre:</p> <ul> <li>Econ\u00f3mico: permite a particulares y peque\u00f1as empresas reducir costes al evitar grandes inversiones en licencias.</li> <li>Libertad de uso y redistribuci\u00f3n: puede instalarse y compartirse sin restricciones de licencias por equipo.</li> <li>Independencia tecnol\u00f3gica: el acceso al c\u00f3digo fuente facilita la creaci\u00f3n de nuevos desarrollos sin partir de cero.</li> <li>Fomenta la competencia en servicios: el negocio se centra en la asistencia y el soporte, no en la venta de licencias.</li> <li>Soporte a largo plazo: a diferencia de ciertos modelos propietarios, muchas comunidades de software libre mantienen versiones estables durante a\u00f1os.</li> <li>Formatos est\u00e1ndar: prioriza la interoperabilidad y evita los problemas de los formatos cerrados.</li> <li>Mayor seguridad: al ser p\u00fablico el c\u00f3digo, posibles vulnerabilidades pueden detectarse y resolverse con rapidez.</li> <li>Correcci\u00f3n \u00e1gil de errores: la comunidad suele publicar parches m\u00e1s r\u00e1pido que en software propietario.</li> <li>Gesti\u00f3n sencilla de programas: la mayor\u00eda de distribuciones cuentan con gestores de paquetes que permiten instalar aplicaciones de forma centralizada y segura.</li> <li>Expansi\u00f3n constante: su uso est\u00e1 ampliamente consolidado en servidores, supercomputadoras y empresas de primer nivel como Google, IBM, HP o incluso Microsoft en parte de su infraestructura.</li> </ul> <p>GNU/Linux es, hoy en d\u00eda, una alternativa s\u00f3lida y madura, utilizada tanto en entornos profesionales como personales, y con un futuro de crecimiento asegurado.</p>"},{"location":"ud2.3/#evolucion-historica-del-software-libre","title":"Evoluci\u00f3n hist\u00f3rica del software libre","text":"<p>En las d\u00e9cadas de 1960 y 1970, el software no se conceb\u00eda como un producto independiente, sino como un complemento que acompa\u00f1aba a los grandes ordenadores (mainframes) de la \u00e9poca. En aquel contexto, era habitual que los programadores compartieran libremente su trabajo dentro de comunidades de usuarios como DECUS, lo que fomentaba la colaboraci\u00f3n y el intercambio de conocimientos.</p> <p>A finales de los a\u00f1os setenta, las empresas empezaron a imponer restricciones mediante licencias, limitando la posibilidad de modificar y redistribuir el software. Ya en los a\u00f1os ochenta, los nuevos ordenadores comenzaron a incluir sistemas operativos privativos que obligaban a aceptar condiciones restrictivas. As\u00ed, si un programador detectaba un error en un programa, deb\u00eda comunicarlo al fabricante en lugar de corregirlo por s\u00ed mismo, incluso si ten\u00eda la capacidad t\u00e9cnica para hacerlo.</p> <p>Un ejemplo clave lo vivi\u00f3 Richard M. Stallman en su trabajo con una impresora de red que sufr\u00eda atascos frecuentes sin enviar avisos a los usuarios. Stallman intent\u00f3 mejorar el controlador para solucionar el problema, pero la empresa propietaria le neg\u00f3 el acceso al c\u00f3digo fuente. Ante esta situaci\u00f3n, Stallman decidi\u00f3 impulsar una alternativa: en 1984 inici\u00f3 el proyecto GNU y, un a\u00f1o despu\u00e9s, fund\u00f3 la Free Software Foundation (FSF). Con ello introdujo la definici\u00f3n formal de software libre y el concepto de copyleft, destinado a garantizar la libertad de uso, estudio y distribuci\u00f3n, y a evitar la apropiaci\u00f3n privativa del software.</p>"},{"location":"ud2.3/#codigo-abierto","title":"C\u00f3digo abierto","text":"<p>El t\u00e9rmino software libre a menudo genera confusi\u00f3n porque en ingl\u00e9s se denomin\u00f3 inicialmente Free Software, y la palabra free puede interpretarse tanto como \u201clibre\u201d como \u201cgratuito\u201d. Para evitar malentendidos, a finales de los noventa comenz\u00f3 a popularizarse el concepto de c\u00f3digo abierto (Open Source).</p> <p>El c\u00f3digo abierto mantiene las mismas libertades fundamentales que el software libre: los usuarios pueden leer, modificar y redistribuir el c\u00f3digo fuente. Este modelo promueve una evoluci\u00f3n r\u00e1pida del software, pues la comunidad detecta y corrige errores de manera \u00e1gil, adapta los programas a diferentes necesidades y contribuye de forma colaborativa a crear soluciones de mayor calidad que las obtenidas bajo modelos privativos.</p>"},{"location":"ud2.3/#el-proyecto-gnu-y-el-origen-de-gnulinux","title":"El proyecto GNU y el origen de GNU/Linux","text":"<p>UNIX fue un sistema operativo propietario muy popular gracias a su arquitectura robusta y estable. El proyecto GNU, iniciado por Richard Stallman, se dise\u00f1\u00f3 para ser totalmente compatible con UNIX, lo que significaba que pod\u00eda construirse a partir de peque\u00f1as piezas de software que pod\u00edan reutilizarse, adaptarse o reescribirse.</p> <p>Para garantizar que GNU se mantuviera libre y accesible para todos, se cre\u00f3 la Licencia General P\u00fablica de GNU (GPL), basada en el principio de copyleft. Este modelo aseguraba que cualquier usuario pudiera ejecutar, copiar, modificar y distribuir el software, evitando restricciones derivadas del copyright tradicional.</p> <p>En 1985, Stallman fund\u00f3 la Free Software Foundation (FSF) con el fin de dar soporte legal, log\u00edstico y financiero al proyecto GNU. Aunque la FSF contrat\u00f3 programadores, gran parte del desarrollo continu\u00f3 en manos de colaboradores voluntarios. A medida que el proyecto crec\u00eda, tambi\u00e9n se sumaron empresas interesadas en apoyar o comercializar productos basados en GNU.</p> <p>Hacia 1990, GNU ya contaba con compiladores, bibliotecas y utilidades b\u00e1sicas, pero carec\u00eda de un n\u00facleo. En 1991, Linus Torvalds desarroll\u00f3 el n\u00facleo Linux y lo liber\u00f3 bajo licencia GPL, lo que atrajo r\u00e1pidamente a una comunidad de desarrolladores que colaboraron a trav\u00e9s de Internet. En 1992, al combinar GNU con Linux, naci\u00f3 un sistema operativo libre y plenamente funcional conocido como GNU/Linux.</p>"},{"location":"ud2.3/#distribuciones-linux","title":"Distribuciones Linux","text":"<p>Una distribuci\u00f3n Linux (o distro) es una versi\u00f3n del sistema operativo que incluye el n\u00facleo Linux junto con diferentes conjuntos de software y herramientas adaptados a distintos perfiles de usuarios. Generalmente, incorporan las utilidades del proyecto GNU, bibliotecas, el sistema de ventanas X y un entorno de escritorio como GNOME o KDE.</p> <p>Las distribuciones pueden orientarse a diferentes \u00e1mbitos: uso dom\u00e9stico, educativo, empresarial o servidores. Aunque la mayor\u00eda se compone principalmente de software libre, algunas incluyen controladores o aplicaciones privativas para mejorar la compatibilidad.</p> <p>Entre las distribuciones m\u00e1s reconocidas se encuentran:</p> <ul> <li>Linux Mint</li> <li>Ubuntu</li> <li>Fedora</li> <li>Debian</li> <li>openSUSE</li> <li>Arch Linux</li> <li>PCLinuxOS</li> <li>CentOS</li> <li>Mageia</li> <li>Slackware</li> <li>FreeBSD (aunque no est\u00e1 basada en Linux, suele mencionarse como alternativa en el ecosistema de software libre).</li> </ul> <p>Cada distribuci\u00f3n responde a diferentes necesidades, pero todas comparten la filosof\u00eda de libertad, flexibilidad y comunidad que caracteriza al software libre.</p>"},{"location":"ud2.3/#ubuntu","title":"Ubuntu","text":"<p>Ubuntu es una de las distribuciones de Linux m\u00e1s populares y est\u00e1 basada en Debian. Su objetivo principal es ofrecer un sistema operativo f\u00e1cil de usar, accesible para el usuario promedio y con una experiencia gr\u00e1fica amigable. Al igual que otras distribuciones GNU/Linux, Ubuntu est\u00e1 compuesto por software libre y de c\u00f3digo abierto, lo que le ha permitido crecer con rapidez y consolidarse como la distribuci\u00f3n m\u00e1s utilizada a nivel mundial.</p> <p>El proyecto est\u00e1 patrocinado por Canonical Ltd., empresa brit\u00e1nica fundada por el empresario sudafricano Mark Shuttleworth. Canonical no obtiene beneficios mediante la venta directa de Ubuntu, sino a trav\u00e9s de servicios relacionados, como el soporte t\u00e9cnico y soluciones empresariales. Gracias a que se distribuye libre y gratuitamente, cuenta adem\u00e1s con la colaboraci\u00f3n activa de la comunidad de desarrolladores, que contribuye a mejorar sus componentes.</p> <p>Canonical respalda oficialmente varias derivadas de Ubuntu, entre ellas:</p> <ul> <li>Kubuntu, que utiliza el entorno de escritorio KDE.</li> <li>Xubuntu, con el ligero entorno Xfce.</li> <li>Lubuntu, orientado a equipos de bajos recursos con LXQt.</li> <li>Ubuntu Server, optimizado para entornos de servidor.</li> </ul> <p>Existen tambi\u00e9n variantes no oficiales como Ubuntu Studio (enfocada en la creaci\u00f3n multimedia) o distribuciones adaptadas a necesidades espec\u00edficas.</p> <p>Ubuntu sigue un calendario de lanzamientos predecible: publica una nueva versi\u00f3n cada seis meses, con soporte oficial durante 18 meses. Adem\u00e1s, cada dos a\u00f1os aparece una versi\u00f3n LTS (Long Term Support), con soporte extendido de 5 a\u00f1os tanto para escritorio como para servidor. Estas versiones LTS son las m\u00e1s recomendadas para entornos de producci\u00f3n y uso profesional.</p> <p>Su nombre proviene del t\u00e9rmino sudafricano Ubuntu, que significa \u201chumanidad hacia otros\u201d, y su eslogan original fue \u201cLinux for human beings\u201d (Linux para seres humanos).</p> <p>En la actualidad, la \u00faltima versi\u00f3n LTS disponible es Ubuntu 24.04 LTS (Noble Numbat), publicada en abril de 2024, que sustituye a la 22.04 LTS.</p>"},{"location":"ud2.3/#lubuntu","title":"Lubuntu","text":"<p>Llegamos a este punto vamos a proceder a la instalaci\u00f3n de un sistema operativo GNU/Linux. En nuestro caso, y debido a las limitaciones de rendimiento que en ocasiones podemos encontrar con las m\u00e1quinas virtuales, vamos a trabajar con Lubuntu. </p> <p>Lubuntu es una distribuci\u00f3n ligera del sistema operativo GNU/Linux, basada en Ubuntu, que utiliza el entorno de escritorio LXQt (anteriormente LXDE) como interfaz gr\u00e1fica.</p> <p>Su principal caracter\u00edstica es que est\u00e1 dise\u00f1ada para ser r\u00e1pida, sencilla y consumir pocos recursos, por lo que resulta ideal para ordenadores con hardware limitado o m\u00e1s antiguos.</p> <p>Algunas claves de Lubuntu:</p> <ul> <li>Est\u00e1 basada en Ubuntu, por lo que utiliza los mismos repositorios y hereda su estabilidad y facilidad de uso.</li> <li>Usa LXQt, un entorno de escritorio minimalista, eficiente y con un aspecto moderno pero ligero.</li> <li>Requiere menos memoria RAM y CPU que otras versiones de Ubuntu (como Ubuntu con GNOME o Kubuntu con KDE).</li> <li>Es compatible con la mayor\u00eda del software de Ubuntu y se actualiza en paralelo con sus versiones oficiales.</li> <li>Es una buena opci\u00f3n tanto para equipos antiguos como para usuarios que buscan un sistema r\u00e1pido y sencillo sin sobrecargar su m\u00e1quina.</li> </ul>"},{"location":"ud2.3/#instalacion-de-lubuntu","title":"Instalaci\u00f3n de Lubuntu","text":"<p>En este punto vamos a comenzar la instalaci\u00f3n de Lubuntu 24.04 en nuestro PC o m\u00e1quina virtual. Podemos descargar la ISO necesaria desde el siguiente enlace. Una vez cargado el medio de instalaci\u00f3n nos aparecer\u00e1 el men\u00fa de Grub, donde deberemos seleccionar la opci\u00f3n Try or install Lubuntu y pulsar Enter.</p> <p></p> <p>El instalador comenzar\u00e1 a cargar archivos y deberemos ver una pantalla similar a la siguiente:</p> <p></p> <p>A continuaci\u00f3n, somos preguntados sobre el idioma de la instalaci\u00f3n, donde seleccionaremos Espa\u00f1ol de Espa\u00f1a, y si queremos probar o instalar Lubuntu. Como muchos sistemas operativos basados en Linux, Lubuntu permite probar su sistema operativo sin necesidad de instalarlo en nuestro PC. Esta opci\u00f3n es \u00fatil en algunos casos, como para recuperar un sistema operativo da\u00f1ado, realizar diagn\u00f3stico de hardware o probar una distribuci\u00f3n del propio sistema operativo. En nuestro caso haremos clic en el bot\u00f3n Install Lubuntu.</p> <p></p> <p>Seguidamente se nos mostrar\u00e1 el asistente de instalaci\u00f3n, cuya primera configuraci\u00f3n ser\u00e1 seleccionar el idioma con el que deseamos usar el sistema operativo. Seleccionamos Espa\u00f1ol de Espa\u00f1a y hacemos clic en el bot\u00f3n Siguiente.</p> <p></p> <p>En este punto debemos introducir la regi\u00f3n y el uso horario, para lo cual seleccionaremos Europe y Madrid, respectivamente. A continuaci\u00f3n, hacemos clic en Siguiente.</p> <p></p> <p>El siguiente paso nos pedir\u00e1 seleccionar la distribuci\u00f3n de teclado. Seleccionamos Spanish y Predeterminado y hacemos clic en el bot\u00f3n Siguiente.</p> <p></p> <p>La siguiente ventana del asistente nos solicitar\u00e1 diversa informaci\u00f3n acerca de la instalaci\u00f3n. En primer lugar deberemos seleccionar Normal installation como modo de instalaci\u00f3n. Marcaremos la casilla Download and install updates following installation, para descargar las actualizaciones disponibles para el sistema operativo. Finalmente, hacemos clic en el bot\u00f3n Siguiente.</p> <p></p> <p>A continuaci\u00f3n, deberemos seleccionar las particiones en las que creamos el disco de nuestra instalaci\u00f3n. En nuestro caso, seleccionamos todo el disco disponible marcado la opci\u00f3n Borrar el disco, Swap en archivo y ext4. Hacemos clic en Siguiente.</p> <p></p> <p>Seguidamente, debemos introducir el nombre, nombre de usuario, contrase\u00f1a y nombre para el equipo. Introducimos todos estos datos y hacemos clic en Siguiente.</p> <p></p> <p>En este punto se nos mostrar\u00e1 un resumen de todas las opciones que hemos marcado en el asistente de instalaci\u00f3n. Si estamos de acuerdo hacemos clic en Instalar. Volveremos a ser preguntados para confirmar nuestra decisi\u00f3n. Hacemos clic en Instalar ahora.</p> <p></p> <p></p> <p>El instalador comenzar\u00e1 a crear particiones, copiar archivos y dem\u00e1s operaciones necesarias.</p> <p></p> <p>Finalizada la instalaci\u00f3n, el asistente nos informar\u00e1 de ello. Marcamos la opci\u00f3n Reiniciar ahora y hacemos clic en el bot\u00f3n Hecho. A continuaci\u00f3n, el sistema operativo nos pedir\u00e1 que extraigamos el medio de instalaci\u00f3n. Pulsamos Enter para ello.</p> <p></p> <p></p> <p>Iniciamos el sistema operativo y lo primero que nos solicitar\u00e1 ser\u00e1 la contrase\u00f1a del usuario que creamos en la instalaci\u00f3n. Accedemos con nuestras credenciales.</p> <p></p> <p>Llegados a este punto, e igual que hicimos con la instalaci\u00f3n de Windows 11, procederemos a actualizar para instalar los posibles paquetes obsoletos de nuestra instalaci\u00f3n. Para ello abrimos una terminal y ejecutamos los siguientes comandos:</p> <pre><code>sudo apt update\n</code></pre> <pre><code>sudo apt upgrade\n</code></pre> <p></p> <p></p> <p></p>"},{"location":"ud2.3/#creacion-de-una-carpeta-compartida-entre-el-anfitrion-y-el-huesped","title":"Creaci\u00f3n de una carpeta compartida entre el anfitri\u00f3n y el hu\u00e9sped","text":"<p>Cuando trabajamos con m\u00e1quinas virtuales, a menudo necesitamos intercambiar archivos entre el sistema host (el ordenador f\u00edsico) y el sistema guest (la m\u00e1quina virtual). Aunque es posible hacerlo mediante memorias USB o enviando archivos por la red, estas opciones son menos pr\u00e1cticas y m\u00e1s lentas.</p> <p>Las carpetas compartidas de VirtualBox ofrecen una soluci\u00f3n m\u00e1s sencilla y eficiente: permiten que una carpeta del host sea accesible directamente desde el guest, como si formara parte de sus propias unidades de almacenamiento. De esta forma, se pueden transferir documentos, programas o configuraciones sin necesidad de recurrir a dispositivos externos ni configuraciones de red complejas.</p> <p>En resumen, las carpetas compartidas facilitan el trabajo en entornos virtualizados porque agilizan el flujo de archivos, ahorran tiempo y mejoran la integraci\u00f3n entre el host y la m\u00e1quina virtual.</p> <p>Info</p> <p>Para que esta gu\u00eda funcione es necesario tener previamente instalados los VirtualBox Guest Additions.</p> <p>Lo primero que deberemos realizar es crear la carpeta compartida en nuestro host (m\u00e1quina real), por ejemplo, en el escritorio.</p> <p>A continuaci\u00f3n, nos dirigimos a VirtualBox, seleccionamos la m\u00e1quina virtual hu\u00e9sped donde queremos compartir los archivos y entramos en Configuraci\u00f3n -&gt; Carpetas compartidas.</p> <p></p> <p>Hacemos clic en el bot\u00f3n + (Agregar nueva carpeta compartida) e incluimos:</p> <ul> <li>Ruta de la carpeta: introducimos la ruta de la carpeta que creamos en el host.</li> <li>Nombre de la carpeta: nombre identificativo.</li> <li>Marcamos las casillas de:<ul> <li>Automontar.</li> </ul> </li> </ul> <p>Guardamos los cambios.</p> <p></p> <p></p> <p>Desde este momento, al iniciar nuestro sistema hu\u00e9sped tendremos la carpeta compartida funcionando. Esta deber\u00eda encontrarse en <code>/media/sf_Compartida</code>, donde Compartida es el nombre que le hemos puesto a la carpeta. Tambi\u00e9n podemos encontrarla en Sistema.</p> <p>En caso de no tener los permisos necesarios, podemos a\u00f1adir nuestro usuario al grupo <code>vboxsf</code>:</p> <pre><code>sudo usermod -aG vboxsf $USER\n</code></pre> <p></p>"},{"location":"ud2.3/#acceder-a-un-dispositivo-de-almacenamiento-externo-usb-desde-la-maquina-virtual-en-virtualbox","title":"Acceder a un dispositivo de almacenamiento externo USB desde la m\u00e1quina virtual en VirtualBox","text":"<p>Si conectamos un pendrive u otro dispositivo de almacenamiento externo a nuestra m\u00e1quina real (host) a trav\u00e9s de un puerto USB, este no se ver\u00e1 desde la m\u00e1quina hu\u00e9sped. Para poder acceder desde esta \u00faltima deberemos realizar los siguientes pasos.</p> <p>Comenzaremos descargando e instalando el Oracle VirtualBox Extension Pack. Si hacemos doble clic en el archivo descargado seremos preguntados acerca de instalar este paquete de instalaci\u00f3n. Pulsamos en el bot\u00f3n Instalar. Aceptamos las condiciones y esperamos que finalice.</p> <p>A continuaci\u00f3n, con la m\u00e1quina virtual apagada, nos dirigimos a la configuraci\u00f3n de la misma, desde Configuraci\u00f3n -&gt; Puertos USB. Marcamos la opci\u00f3n de Controlador USB 3.0 (xHCI) (si no lo estaba anteriormente).</p> <p></p> <p>Seguidamente, hacemos clic en el icono de + (Agregar nuevo filtro USB), seleccionamos el dispositivo de la lista (por nombre y fabricante) y este se a\u00f1adir\u00e1 como filtro para que el anfitri\u00f3n lo pueda capturar.</p> <p></p> <p></p> <p>Iniciamos la m\u00e1quina virtual, insertamos el pendrive en la m\u00e1quina host (si lo hab\u00edamos retirado) y en la barra superior de VirtualBox nos dirigimos a Dispositivos -&gt; USB -&gt; [Nombre del pendrive]. En este punto, lo seleccionamos si no aparece seleccionado.</p> <p></p> <p>En nuestra m\u00e1quina virtual Lubuntu nos dirigimos al explorador de archivos, donde deber\u00eda aparecer como unidad extra\u00edble. Si no aparece autom\u00e1ticamente, abrimos una terminal y escribimos:</p> <pre><code>lsblk\n</code></pre> <p>Ah\u00ed deber\u00edamos ver el dispositivo (ej. /dev/sdb1). Podemos montarlo manualmente:</p> <pre><code>sudo mount /dev/sdb1 /mnt\n</code></pre> <p></p>"},{"location":"ud2.4/","title":"Unidad 2 - Instalaci\u00f3n de una m\u00e1quina virtual dual","text":"<p>Al trabajar con m\u00e1quinas virtuales, es posible instalar m\u00e1s de un sistema operativo en un mismo entorno, creando lo que se conoce como un sistema dual. Una de las combinaciones m\u00e1s habituales es contar con Windows y Linux en la misma m\u00e1quina, lo que permite aprovechar las ventajas de ambos sistemas seg\u00fan las necesidades del usuario.</p> <p>Para evitar problemas con el arranque y la gesti\u00f3n del gestor de inicio, es recomendable instalar primero Windows y posteriormente Linux. Esto se debe a que el instalador de Windows sobrescribe el gestor de arranque existente, mientras que las distribuciones Linux, mediante GRUB, detectan autom\u00e1ticamente otros sistemas instalados y permiten seleccionarlos en el inicio.</p> <p>En los siguientes apartados veremos, paso a paso, c\u00f3mo crear una m\u00e1quina virtual con un entorno dual Windows/Linux de forma sencilla y segura.</p>"},{"location":"ud2.4/#proceso-de-instalacion","title":"Proceso de instalaci\u00f3n","text":"<p>El primer paso ser\u00e1 crear una m\u00e1quina virtual con Windows 11 ya creada, o clonar una ya existente. Si deseamos clonarla lo podemos hacer desde el propio VirtualBox. Para ello, seleccionamos la m\u00e1quina virtual de Windows 11, hacemos clic derecho en ella -&gt; Clonar.</p> <p></p> <p>Introducimos el nombre de la nueva m\u00e1quina, dejamos el resto de par\u00e1metros tal y como se nos muestran y hacemos clic en Terminar. De esta forma comenzar\u00e1 el proceso de clonaci\u00f3n de la m\u00e1quina, el cual puede durar varios minutos.</p> <p></p> <p></p> <p></p> <p>Una vez clonada debemos eliminar el cifrado del disco que por defecto crea Windows 11. Para ello iniciamos la m\u00e1quina virtual que acabamos de clonar y abrimos la terminal Powershell como administrador.</p> <p></p> <p>Procedemos ahora a descifrar el disco para lo que ejecutamos el siguiente comando:</p> <pre><code>Disable-BitLocker -MountPoint \"C:\"\n</code></pre> <p></p> <p></p> <p>Este proceso tardar\u00e1 unos minutos. Podemos comprobar el estado ejecutando el comando:</p> <pre><code>manage-bde -status\n</code></pre> <p></p> <p></p> <p>Una vez finalizado este proceso procedemos a apagar la m\u00e1quina virtual y accedemos a la configuraci\u00f3n de esta. Nos dirigimos a Almacenamiento, seleccionamos la unidad \u00f3ptica y hacemos clic en el disco azul para seleccionar la imagen de Ubuntu. Si no la tenemos descargada previamente lo podemos hacer desde su p\u00e1gina oficial de descargas.</p> <p></p> <p>Hacemos clic en Aceptar y arrancamos nuestra m\u00e1quina. </p> <p></p> <p>Ahora debemos entrar en el Boot Manager de la m\u00e1quina virtual, para ello, debemos pulsar Escape varias veces justo en el momento en el que se inicie esta. En este punto seleccionamos la opci\u00f3n Boot Maintenance Manager y pulsamos aceptar.</p> <p></p> <p></p> <p>En el men\u00fa que se nos muestra deberemos seleccionar la opci\u00f3n de UEFI VBOX CD y pulsar Enter.</p> <p></p> <p>A continuaci\u00f3n, pulsamos Escape para salir de esta configuraci\u00f3n, y seguidamente pulsamos Y, para confirmar los cambios.</p> <p></p> <p></p> <p>Finalmente, nos desplazamos hasta la opci\u00f3n Reset y pulsamos Enter.</p> <p></p> <p>En este punto, la m\u00e1quina se quedar\u00e1 en negro. Hacemos clic en cerrar la ventana y apagamos la m\u00e1quina virtual.</p> <p></p> <p></p> <p>Volvemos a iniciar la m\u00e1quina virtual y esta arrancar\u00e1 desde la ISO de Ubuntu. Seleccionamos la opci\u00f3n de Try or Install Ubuntu y pulsamos Enter.</p> <p></p> <p>Seguidamente se mostrar\u00e1 el asistente de instalaci\u00f3n de Ubuntu. Seguimos los pasos tal y como se indica en las siguientes im\u00e1genes:</p> <p> </p> <p>En el siguiente paso del asistente seremos preguntados sobre  c\u00f3mo queremos instalar Ubuntu. Seleccionamos la opci\u00f3n de Instalar Ubuntu junto a Windows Boot Manager y hacemos clic en siguiente.</p> <p></p> <p>Seleccionamos el tama\u00f1o que queremos en nuestra instalaci\u00f3n de Ubuntu y hacemos clic en Siguiente. Es importante se\u00f1alar en este punto que todo aquel tama\u00f1o que asignemos ser\u00e1 recortado de la instalaci\u00f3n de Windows, ya que est\u00e1n usando el mismo \"disco duro\".</p> <p></p> <p>Continuamos con el resto de pasos del asistente de instalaci\u00f3n.</p> <p> </p> <p>Una vez finalice la instalaci\u00f3n, reiniciamos y arrancar\u00e1 la m\u00e1quina mostrando el men\u00fa de Grub, el gestor de arranque m\u00e1s utilizado en sistemas GNU/Linux, el cual nos dejar\u00e1 seleccionar entre iniciar Ubuntu o Windows (entre otras opciones).</p>"},{"location":"ud2.5/","title":"Unidad 2 - Creaci\u00f3n de un pendrive booteable","text":"<p>Un pendrive booteable es un USB preparado para que el firmware del equipo (UEFI o BIOS) pueda arrancar desde \u00e9l y cargar un gestor de arranque que, a su vez, inicia un instalador o un sistema \u201cLive\u201d (arranca sin instalar, t\u00edpico en GNU/Linux).</p> <p>\u00bfQu\u00e9 ocurre al pulsar el bot\u00f3n de encendido?</p> <ol> <li>Firmware (UEFI/BIOS) busca el primer dispositivo arrancable seg\u00fan el orden de arranque (Boot Order).</li> <li>Si es UEFI:<ul> <li>Lee la Partici\u00f3n del Sistema EFI (ESP) del USB (normalmente FAT32) y ejecuta un fichero .efi (p. ej., \\EFI\\BOOT\\BOOTX64.EFI).</li> </ul> </li> <li>Si es BIOS/Legacy:<ul> <li>Carga el MBR del dispositivo (sector 0) y salta al c\u00f3digo del cargador all\u00ed contenido.</li> </ul> </li> <li>El gestor de arranque (GRUB, Windows Boot Manager, Syslinux, Ventoy\u2026) muestra un men\u00fa o lanza directamente el instalador/Live.</li> </ol> <p>ISO, \u201cLive\u201d e instalador:</p> <ul> <li>Una ISO es una imagen del medio de instalaci\u00f3n (antes CD/DVD). Muchas ISOs modernas son h\u00edbridas (arrancan tanto en BIOS como en UEFI).</li> <li>Modo Live (Linux): el sistema se ejecuta desde la RAM/USB sin tocar el disco.</li> <li>Persistencia (opcional): permite guardar cambios entre reinicios (archivos, paquetes, configuraci\u00f3n).</li> <li>Instalador: gu\u00eda para particionar, copiar el sistema y configurar el arranque en el disco interno.</li> </ul>"},{"location":"ud2.5/#rufus","title":"Rufus","text":"<p>Rufus es una utilidad para formatear y crear USB de arranque (pendrives, tarjetas de memoria, etc.) de forma r\u00e1pida y segura.</p> <p>Cu\u00e1ndo usar Rufus:</p> <ul> <li>Crear medios de instalaci\u00f3n a partir de ISOs arrancables (Windows 10/11, Ubuntu/Debian/Fedora, utilidades UEFI, etc.).</li> <li>Soporta UEFI y BIOS/Legacy, GPT/MBR y maneja ISOs \u201cgrandes\u201d: si alg\u00fan archivo supera 4 GB, puede usar UEFI:NTFS para arrancar en UEFI aunque el USB est\u00e9 en NTFS.</li> <li>Poner en marcha equipos sin sistema operativo, iniciando directamente un instalador o un sistema Live de Linux.</li> <li>Ejecutar utilidades de bajo nivel (diagn\u00f3stico, clonado, antivirus offline, gestores de particiones, MemTest, etc.).</li> <li>Actualizar firmware/BIOS desde DOS (FreeDOS) cuando el fabricante lo exige en equipos antiguos o herramientas legadas.</li> </ul>"},{"location":"ud2.5/#con-rufus","title":"Con Rufus","text":"<p>Descargamos la \u00faltima versi\u00f3n de Rufus desde su p\u00e1gina web y la ejecutamos. En la ventana del programa podemos ver multitud de opciones para crear nuestro USB booteable. Seleccionamos la ISO que deseemos, en nuestro caso la de Windows 11, y hacemos clic ene l bot\u00f3n Empezar.</p> <p></p> <p>A continuaci\u00f3n, al detectar que se trata de una instalaci\u00f3n de Windows seremos preguntados por diversas opciones. Marcamos las mismas que se muestran en la siguiente imagen y hacemos clic en el bot\u00f3n Ok.</p> <p></p> <p>El programa comenzar\u00e1 a copiar archivos y nos informar\u00e1 cuando finalice.</p>"},{"location":"ud2.5/#windows-to-go","title":"Windows To Go","text":"<p>Rufus tambi\u00e9n nos permite crear un USB booteable con Windows To Go. Esta opci\u00f3n nos permite arrancar un sistema operativo Windows desde el pendrive sin necesidad de instalarlo (de la misma forma que algunas distribuciones GNU/Linux funcionan en modo live). Para ello, despu\u00e9s de seleccionar la imagen de Windows 11 indicamos en el desplegable Opciones de imagen la opci\u00f3n de Windows To Go.</p> <p></p> <p>En teste punto Rufus nos preguntar\u00e1 sobre la versi\u00f3n de Windows 11 que queremos utilizar y otras preguntas acerca de la instalaci\u00f3n del SO.</p> <p> </p>"},{"location":"ud2.5/#con-el-creador-de-medios-de-windows-11","title":"Con el creador de medios de Windows 11","text":""},{"location":"ud2.5/#creacion-de-un-usb-booteable-de-linux","title":"Creaci\u00f3n de un USB booteable de Linux","text":"<p>De la misma forma que hicimos con la ISO de Windows 11 seleccionamos la de Ubuntu y hacemos clic en el bot\u00f3n Empezar. Seremos preguntados acerca del modo de imagen, para lo que seleccionamos la opci\u00f3n recomendada y hacemos clic en Ok.</p> <p> </p>"},{"location":"ud2.5/#ventoy","title":"Ventoy","text":"<p>Ventoy es una herramienta de c\u00f3digo abierto que permite crear unidades USB de arranque (bootables) de manera r\u00e1pida, sencilla y muy flexible. A diferencia de los m\u00e9todos tradicionales, en los que es necesario formatear la memoria USB y grabar una imagen ISO cada vez que se desea cambiar de sistema operativo o herramienta, Ventoy permite copiar m\u00faltiples archivos ISO directamente al dispositivo USB y elegir cu\u00e1l arrancar desde un men\u00fa interactivo al iniciar el ordenador.</p> <p>Esto significa que con una sola memoria USB se pueden almacenar y utilizar varias distribuciones de Linux, instaladores de Windows, utilidades de rescate, herramientas de diagn\u00f3stico, antivirus o cualquier otro sistema arrancable. Ventoy crea un entorno de arranque compatible con BIOS y UEFI, e incluso soporta el modo Secure Boot.</p> <p>Gracias a su dise\u00f1o, el proceso de actualizaci\u00f3n es muy sencillo: no es necesario volver a formatear el dispositivo ni reinstalar las im\u00e1genes, ya que basta con copiar nuevas ISOs o eliminar las que ya no se necesiten. Por su versatilidad y facilidad de uso, Ventoy se ha convertido en una de las herramientas m\u00e1s populares entre administradores de sistemas, t\u00e9cnicos inform\u00e1ticos y usuarios avanzados que trabajan con distintos sistemas operativos o entornos de recuperaci\u00f3n.</p>"},{"location":"ud2.5/#creacion-de-un-usb-booteable-con-ventoy","title":"Creaci\u00f3n de un USB booteable con Ventoy","text":"<p>En primer lugar, nos dirigimos al apartado de descargas de su web oficial y descargamos el paquete adecuado a nuestro sistema operativo.</p> <p></p> <p>Descomprimimos el archivo ZIP y accedemos a los archivos que contiene. Hacemos clic derecho en el archivo Ventoy2Disk.exe y lo ejecutamos como administrador.</p> <p></p> <p>Una vez abierta la aplicaci\u00f3n, seleccionamos nuestra unidad de almacenamiento USB en el desplegable Device y hacemos clic en el bot\u00f3n Install. En ese punto seremos preguntados dos veces sobre que esta acci\u00f3n provocar\u00e1 el borrado de todos los datos que tengamos en el pendrive. Hacemos clic en S\u00ed y la instalaci\u00f3n continuar\u00e1.</p> <p> </p> <p>Una vez finalice nuestro pendrive tendr\u00e1 como nombre Ventoy y aparentemente se encontrar\u00e1 vac\u00edo (aunque realmente hay una partici\u00f3n donde se encuentran los archivo de Ventoy).</p> <p></p> <p>Dentro de la unidad podremos copiar tantas im\u00e1genes ISOs de sistemas operativos como queremos arrancar desde nuestro pendrive booteable.</p> <p></p>"},{"location":"ud2.6/","title":"Unidad 2 - Creaci\u00f3n y restauraci\u00f3n de im\u00e1genes","text":"<p>Una imagen de sistema es una instant\u00e1nea bit a bit de un disco o partici\u00f3n que captura todo: sistema operativo, controladores, configuraci\u00f3n, aplicaciones y datos. Al restaurarla, el equipo queda exactamente como estaba cuando se cre\u00f3. A diferencia de una copia \u201cpor archivos\u201d, que solo guarda carpetas y documentos, la imagen incluye tambi\u00e9n el arranque y te evita reinstalar ni reconfigurar nada.</p> <p>Hacer copias de seguridad en forma de imagen tiene sentido porque los fallos ocurren: discos que mueren, errores humanos, malware o ransomware. La ventaja clave es el tiempo: con una imagen puedes realizar una restauraci\u00f3n bare-metal y volver a estar operativo en minutos u horas, en lugar de pasar medio d\u00eda reinstalando sistema, drivers y software. Si piensas en objetivos de continuidad, reduces tanto el RTO (tiempo para volver a funcionar) como el RPO (cu\u00e1nta informaci\u00f3n est\u00e1s dispuesto a perder desde la \u00faltima copia).</p> <p>Hay varios enfoques. El backup completo genera una \u00fanica imagen con todo el contenido; ocupa m\u00e1s y tarda m\u00e1s en crearse, pero su restauraci\u00f3n es la m\u00e1s simple porque no depende de nada m\u00e1s. El diferencial guarda solo lo que ha cambiado desde el \u00faltimo completo; con el paso de los d\u00edas crece, pero restaurar es directo (imagen completa m\u00e1s el \u00faltimo diferencial), por eso es una buena combinaci\u00f3n con un completo semanal. El incremental registra los cambios desde la copia inmediatamente anterior, sea completa o incremental; crea ficheros peque\u00f1os y r\u00e1pidos de generar, ahorra espacio, pero para restaurar necesitas la cadena entera (completo + todos los incrementales hasta la fecha), as\u00ed que conviene gestionarlo con pol\u00edticas de retenci\u00f3n o consolidaci\u00f3n para evitar cadenas demasiado largas. Por su parte, el clonado copia 1:1 a otro disco arrancable; es ideal para migrar de HDD a SSD o sustituir un disco, pero no te da hist\u00f3rico de versiones: lo que hay en origen pasa tal cual a destino.</p> <p>Elegir depende del objetivo: en aulas o entornos de pr\u00e1ctica suele funcionar muy bien una imagen base reci\u00e9n configurada y, si el equipo cambia poco, recrearla tras cada hito importante; si hay modificaciones frecuentes, a\u00f1ade diferenciales (restauraci\u00f3n m\u00e1s sencilla) o incrementales (m\u00e1s eficientes en espacio). Para migraciones de hardware, clonar es lo m\u00e1s \u00e1gil. En cualquier caso, la copia por archivos sigue siendo el complemento adecuado para documentos que cambian a diario.</p> <p>Hay detalles pr\u00e1cticos que conviene tener presentes. En Windows, las herramientas \u201cen caliente\u201d usan VSS para asegurar consistencia; en Linux, crear la imagen \u201cen fr\u00edo\u201d desde un medio live (como Clonezilla) simplifica la captura de particiones en uso. Si el disco est\u00e1 cifrado (BitLocker o LUKS), suspende temporalmente el cifrado o aseg\u00farate de tener las claves de recuperaci\u00f3n antes de hacer y restaurar la imagen. Para que el sistema arranque tras una restauraci\u00f3n, no olvides incluir las particiones de arranque (ESP/EFI, MSR/Recovery en Windows; EFI y/o /boot en GNU/Linux). Y, por seguridad y espacio, aprovecha opciones como compresi\u00f3n, verificaci\u00f3n de integridad y cifrado de la imagen con contrase\u00f1a.</p> <p>Con esta base, en las siguientes secciones veremos c\u00f3mo crear y restaurar im\u00e1genes con AOMEI, Acronis y Clonezilla, destacando qu\u00e9 elegir en cada caso y qu\u00e9 ajustes marcan la diferencia.</p>"},{"location":"ud2.6/#aomei-backupper","title":"AOMEI Backupper","text":"<p>AOMEI Backupper es una suite de copia de seguridad e imagen de disco para Windows (7/8/10/11 y ediciones Server) orientada a crear y restaurar im\u00e1genes completas de sistema, disco o particiones, adem\u00e1s de copias por archivos. Est\u00e1 pensada para reducir tiempos de recuperaci\u00f3n (bare-metal restore) y facilitar tareas como migrar a SSD mediante clonaci\u00f3n.</p> <p>Trabaja \u201cen caliente\u201d gracias a VSS (no necesitas cerrar aplicaciones) y permite backups completos, diferenciales e incrementales, con planificaciones, compresi\u00f3n, cifrado y verificaci\u00f3n de integridad. Las im\u00e1genes pueden guardarse en discos externos/USB, NAS o recursos de red, y es posible crear un medio de arranque WinPE para restaurar aunque Windows no inicie (compatible con UEFI/GPT y MBR/Legacy).</p> <p>Adem\u00e1s de la copia/restore ofrece clon de disco/partici\u00f3n y, en ediciones de pago, opciones como Universal Restore (restaurar a hardware distinto) y esquemas de retenci\u00f3n para purgar incrementales antiguos. Existe una edici\u00f3n gratuita (Standard) con funciones b\u00e1sicas y ediciones Professional/Workstation/Server/Technician con capacidades avanzadas.</p>"},{"location":"ud2.6/#acronis","title":"Acronis","text":"<p>Acronis \u2014antes conocido como True Image\u2014 es una suite de copia de seguridad e imagen de disco orientada a usuarios dom\u00e9sticos y profesionales que necesitan proteger equipos Windows y macOS con opciones locales y en nube. Permite crear im\u00e1genes completas de sistema/disco, respaldos por archivos y carpetas, versionado, programaciones y validaci\u00f3n de copias. Trabaja \u201cen caliente\u201d (VSS en Windows), ofrece clonado de discos para migrar a SSD y genera medios de arranque (WinPE/macOS) para bare-metal restore cuando el sistema no inicia. En ediciones superiores integra protecci\u00f3n antiransomware/antimalware y funciones avanzadas de gesti\u00f3n. Soporta UEFI/GPT y escenarios h\u00edbridos (disco externo, NAS y nube), buscando un equilibrio entre rapidez de recuperaci\u00f3n y facilidad de uso.</p>"},{"location":"ud2.6/#clonezilla","title":"Clonezilla","text":"<p>Clonezilla es una herramienta libre y multiplataforma de clonado e imagen que se ejecuta en modo live desde USB/ISO (sin depender del sistema instalado). Est\u00e1 pensada para capturar y restaurar discos o particiones a nivel de bloque de forma muy r\u00e1pida (usa partclone para copiar solo bloques usados), con compresi\u00f3n, verificaci\u00f3n y soporte de MBR/GPT y UEFI. Es ideal en aulas y laboratorios: la edici\u00f3n SE (Server Edition) permite clonado masivo por red (multicast). Su interfaz es textual y no ofrece backups incrementales ni por archivo: brilla cuando se necesita una instant\u00e1nea exacta del sistema o desplegar la misma imagen en muchos equipos.</p>"},{"location":"ud3.1/","title":"Unidad 3 - Configuraci\u00f3n y administraci\u00f3n de sistemas basados en Linux","text":"<p>Esquema</p> <ul> <li>Introducci\u00f3n a Lubuntu<ul> <li>Interfaz</li> <li>Escritorio</li> </ul> </li> <li> <p>Introducci\u00f3n al uso de comandos</p> <ul> <li>Comandos iniciales </li> </ul> </li> <li> <p>Gesti\u00f3n de archivos</p> </li> <li>Montaje de dispositivos de almacenamiento</li> <li> <p>Gesti\u00f3n de archivos y directorios en CLI</p> </li> <li> <p>Usuarios y grupos</p> </li> <li>Permisos de archivo</li> <li>Dispositivos hardware y controladores</li> <li>Instalaci\u00f3n de aplicaciones</li> <li>Red</li> <li>Discos y particiones</li> <li>Procesos</li> <li>Administrador de impresi\u00f3n</li> </ul>"},{"location":"ud3.1/#introduccion-a-lubuntu","title":"Introducci\u00f3n a Lubuntu","text":"<p>Lubuntu es un sabor oficial de Ubuntu orientado a equipos ligeros y a quienes prefieren un entorno sencillo y eficiente. Hereda la base tecnol\u00f3gica de Ubuntu/Debian (mismos repositorios y ciclo de publicaci\u00f3n), pero utiliza el entorno de escritorio LXQt, que consume menos recursos que escritorios m\u00e1s pesados. Hist\u00f3ricamente Lubuntu us\u00f3 LXDE; desde Lubuntu 18.10 el proyecto adopta LXQt como entorno por defecto. LXQt no es un \u201cshell\u201d sobre GNOME: es un entorno de escritorio completo (panel, gestor de archivos, configuraci\u00f3n, etc.) construido con Qt, independiente de GNOME y de su shell. Esta elecci\u00f3n da a Lubuntu una identidad propia: arranque r\u00e1pido, baja huella de memoria y una experiencia limpia sin renunciar a las herramientas habituales del ecosistema Ubuntu.</p>"},{"location":"ud3.1/#versiones-de-lubuntu","title":"Versiones de Lubuntu","text":"<p>Lubuntu sigue el mismo calendario de lanzamientos que Ubuntu:</p> <ul> <li>Versiones regulares: cada 6 meses. Aportan novedades y cambios incrementales. Su soporte t\u00edpico es de 9 meses.</li> <li>Versiones LTS (Long Term Support): cada 2 a\u00f1os. Priorizan estabilidad.</li> <li>En Ubuntu \u201cbase\u201d el soporte LTS es de 5 a\u00f1os.</li> <li>En los sabores oficiales (como Lubuntu), el soporte LTS suele ser de 3 a\u00f1os.</li> </ul> <p>Si quieres lo \u00faltimo en software y escritorio, puedes ir actualizando entre versiones regulares. Si buscas estabilidad a medio plazo y menos cambios, lo habitual es instalar una LTS y actualizar a la siguiente LTS cuando corresponda.</p> <p>Cada lanzamiento tiene n\u00famero de versi\u00f3n y nombre en clave:</p> <ul> <li>N\u00famero de versi\u00f3n: a\u00f1o.mes. Por ejemplo, 24.04 corresponde a abril de 2024.</li> <li>Nombre en clave: un adjetivo + un animal con la misma letra inicial, siguiendo orden alfab\u00e9tico (compartido con Ubuntu).</li> <li>Es posible actualizar desde una versi\u00f3n a otra sin reinstalar, usando las herramientas de actualizaci\u00f3n del sistema.</li> </ul> <p>La LTS vigente en el ecosistema Ubuntu es 24.04 LTS; en Lubuntu, como sabor oficial, esa LTS se ofrece con el soporte propio del proyecto (habitualmente 3 a\u00f1os), mientras que las versiones regulares mantienen el ciclo de 9 meses.</p>"},{"location":"ud3.1/#el-software-de-lubuntu","title":"El software de Lubuntu","text":"<p>Lubuntu incluye una colecci\u00f3n de aplicaciones gr\u00e1ficas para configurar el sistema y cubrir las tareas habituales, y se beneficia de los mismos repositorios que Ubuntu. El escritorio predeterminado es LXQt y su ciclo de publicaci\u00f3n se sincroniza con el de Ubuntu. Adem\u00e1s de Lubuntu, existen otros sabores oficiales que ofrecen distintos escritorios: Kubuntu (KDE Plasma), Xubuntu (Xfce), Ubuntu MATE, Ubuntu Budgie, etc. En cualquier sistema basado en Ubuntu puedes instalar otros escritorios desde los repositorios si lo prefieres.</p> <p>Aplicaciones de Lubuntu (orientadas a ligereza y uso cotidiano):</p> <ul> <li>Navegaci\u00f3n web: Mozilla Firefox.</li> <li>Ofim\u00e1tica: LibreOffice (suele incluir al menos Writer y Calc).</li> <li>Multimedia: VLC como reproductor vers\u00e1til.</li> <li>Gesti\u00f3n de archivos: PCManFM-Qt.</li> <li>Im\u00e1genes/PDF: LXImage-Qt y visor PDF ligero (p. ej., qpdfview).</li> <li>Terminal y editor: QTerminal y FeatherPad.</li> <li>Gesti\u00f3n de software: centro de software y/o gestor de paquetes (seg\u00fan versi\u00f3n, se ofrece una tienda gr\u00e1fica y herramientas APT).</li> </ul>"},{"location":"ud3.1/#interfaz-de-usuario","title":"Interfaz de usuario","text":"<p>Lubuntu utiliza como interfaz predeterminada el entorno de escritorio LXQt, pensado para ofrecer una experiencia ligera, r\u00e1pida y con bajo consumo de recursos. Hist\u00f3ricamente, Lubuntu emple\u00f3 LXDE; desde Lubuntu 18.10 el proyecto migr\u00f3 a LXQt, manteniendo la base de Ubuntu pero con un escritorio basado en Qt (no en GNOME).</p> <p>LXQt proporciona panel, men\u00fa de aplicaciones, \u00e1rea de notificaci\u00f3n e integraciones b\u00e1sicas, con un dise\u00f1o sencillo y eficiente orientado a equipos modestos y a usuarios que buscan un entorno sin distracciones. A diferencia de \u201cshells\u201d como GNOME Shell o Unity, LXQt es un entorno completo independiente de GNOME, con sus propias herramientas de configuraci\u00f3n y utilidades.</p> <p>Elementos principales:</p> <ul> <li>Panel: por defecto en la parte inferior; contiene el men\u00fa, lanzadores, gestor de tareas, bandeja del sistema (red, sonido, energ\u00eda\u2026) y reloj.</li> <li>Men\u00fa de aplicaciones: clasifica el software por categor\u00edas y permite buscar escribiendo.</li> <li>Lanzadores (Quick Launch): accesos directos a tus apps favoritas fijados en el panel.</li> <li>Gestor de tareas: lista y agrupa ventanas abiertas; permite cambiar r\u00e1pidamente entre ellas.</li> <li>Espacios de trabajo (workspaces): escritorios virtuales para organizar ventanas.</li> <li>LXQt Runner: ejecutor r\u00e1pido para abrir aplicaciones o lanzar comandos (tipo \u201cAlt+F2\u201d).</li> </ul> <p>Vamos a ver con detalle los equivalentes en Lubuntu a los apartados cl\u00e1sicos.</p>"},{"location":"ud3.1/#panel-y-lanzadores-quick-launch","title":"Panel y lanzadores (Quick Launch)","text":"<p>El panel de LXQt muestra tus lanzadores junto al gestor de tareas y a la bandeja del sistema.</p> <ul> <li>Puedes anclar aplicaciones arrastr\u00e1ndolas desde el men\u00fa al panel (o con clic derecho \u2192 A\u00f1adir al panel).</li> <li>Es posible ocultar autom\u00e1ticamente el panel (auto-ocultar) o usar modo siempre visible.</li> <li>Los lanzadores abren la aplicaci\u00f3n asociada; si arrastras un archivo a la ventana de una app, se abre con esa app (el arrastre al lanzador puede variar seg\u00fan el plugin: lo habitual es lanzar la app, no \u201csoltar\u201d archivos sobre el bot\u00f3n).</li> <li>Incluye accesos t\u00edpicos: gestor de archivos (PCManFM-Qt), navegador, ofim\u00e1tica, papelera, etc. Puedes a\u00f1adir/quitar elementos desde Configuraci\u00f3n del panel.</li> </ul>"},{"location":"ud3.1/#menu-de-aplicaciones-equivalente-al-tablero","title":"Men\u00fa de aplicaciones (equivalente al \u201ctablero\u201d)","text":"<p>En Lubuntu no existe el \u201cTablero\u201d de Unity; su equivalente pr\u00e1ctico es el Men\u00fa de aplicaciones de LXQt y el ejecutor (Runner).</p> <ul> <li>Abrir el men\u00fa: clic en el icono de Lubuntu (panel) o tecla Super (suele estar mapeada para abrir el men\u00fa; si no, puedes asignarla).</li> <li>Buscar: basta con escribir en el men\u00fa para filtrar aplicaciones y herramientas del sistema.</li> <li>Favoritos y recientes: el men\u00fa permite fijar apps y acceder r\u00e1pidamente a las usadas recientemente.</li> </ul>"},{"location":"ud3.1/#busqueda-integrada-y-lxqt-runner","title":"B\u00fasqueda integrada y LXQt Runner","text":"<p>Adem\u00e1s del buscador del men\u00fa, Lubuntu incluye LXQt Runner (ejecutor r\u00e1pido, tipo Alt+F2):</p> <ul> <li>Abrir Runner: normalmente Alt+F2 (o la combinaci\u00f3n que hayas configurado).</li> <li>Escribe el nombre de una app o un comando (p. ej., lxqt-config, pcmanfm-qt, htop) y Enter.</li> <li>Runner y el buscador del men\u00fa cubren la mayor\u00eda de casos de \u201cbuscar y abrir\u201d sin necesidad de navegar por categor\u00edas.</li> </ul>"},{"location":"ud3.1/#panel-detalle","title":"Panel (detalle)","text":"<p>El panel en la parte superior o inferior (por defecto, inferior) se organiza as\u00ed:</p> <ul> <li>Izquierda: icono del men\u00fa y lanzadores fijados.</li> <li>Centro: gestor de tareas (ventanas abiertas, con agrupaci\u00f3n opcional).</li> <li>Derecha: bandeja del sistema (red/sonido/energ\u00eda/notificaciones), selector de teclado, reloj/calendario y, si quieres, cambiador de espacios de trabajo (Pager).</li> </ul> <p>A diferencia de Unity, no hay \u201cmen\u00fa global\u201d: los men\u00fas de cada aplicaci\u00f3n se muestran en su propia ventana.</p>"},{"location":"ud3.1/#espacios-de-trabajo-workspaces","title":"Espacios de trabajo (workspaces)","text":"<p>Lubuntu soporta escritorios virtuales para separar tareas:</p> <ul> <li>Activa el cambiador de espacios (plugin Pager) en el panel si no est\u00e1 visible.</li> <li>Mueve ventanas entre escritorios con clic derecho en la barra de t\u00edtulo \u2192 Mover a escritorio.</li> <li>Tambi\u00e9n puedes usar atajos (ver abajo) para cambiar de workspace.</li> </ul>"},{"location":"ud3.1/#atajos-de-teclado-personalizables","title":"Atajos de teclado (personalizables)","text":"<p>Los atajos se gestionan en Preferencias de LXQt \u2192 Atajos de teclado. Algunos habituales (pueden variar seg\u00fan imagen y versi\u00f3n):</p> <ul> <li>Abrir men\u00fa: Super</li> <li>Runner (ejecutor r\u00e1pido): Alt+F2</li> <li>Cambiar ventana: Alt+Tab</li> <li>Cambiar de espacio de trabajo: Ctrl+Alt+\u2190/\u2192</li> <li>Captura de pantalla: Impr Pant (herramienta por defecto, p. ej., Screengrab; puedes cambiarla)</li> <li>Bloquear sesi\u00f3n: asignable (p. ej., Super+L)</li> <li>Abrir gestor de archivos: asignable (p. ej., Super+E)</li> </ul> <p>Si alguna combinaci\u00f3n no funciona como esperas, as\u00edgnala de nuevo en Atajos o revisa conflictos en el gestor de ventanas.</p>"},{"location":"ud3.1/#escritorio-lxqt","title":"Escritorio LXQt","text":"<p>Lubuntu utiliza LXQt como escritorio predeterminado. Es un entorno ligero y modular, orientado a equipos con pocos recursos y a usuarios que prefieren una experiencia r\u00e1pida y sin distracciones. Aunque pueden instalarse otros escritorios (Xfce, KDE Plasma, GNOME\u2026), no es lo habitual, ya que mantener varios consume m\u00e1s espacio en disco y memoria.</p> <p>A diferencia de Unity o GNOME Shell, LXQt no es un \u201cshell\u201d sobre otro escritorio, sino un entorno completo: panel, men\u00fa, gestor de tareas, \u00e1rea de notificaci\u00f3n, utilidades de configuraci\u00f3n y componentes propios. Funciona bien sin aceleraci\u00f3n 3D dedicada, por lo que no exige una GPU potente para mostrar su interfaz.</p> <p>Elementos destacados del escritorio LXQt:</p> <ul> <li>Panel (por defecto, inferior): men\u00fa, lanzadores, lista de ventanas, bandeja del sistema y reloj.</li> <li>Men\u00fa de aplicaciones con b\u00fasqueda integrada.</li> <li>Lanzadores r\u00e1pidos fijados en el panel.</li> <li>Espacios de trabajo (escritorios virtuales).</li> <li>LXQt Runner (tipo Alt+F2) para abrir aplicaciones/comandos al vuelo.</li> <li>Herramientas de configuraci\u00f3n propias (apariencia, teclado/rat\u00f3n, sesi\u00f3n, energ\u00eda\u2026).</li> </ul>"},{"location":"ud3.1/#introduccion-al-uso-de-comandos","title":"Introducci\u00f3n al uso de comandos","text":"<p>En sus or\u00edgenes, GNU/Linux se utilizaba sin interfaz gr\u00e1fica, a trav\u00e9s de una interfaz de l\u00ednea de comandos (CLI, Command-Line Interface) heredada de Unix. Las tareas de administraci\u00f3n (usuarios, servicios, archivos, procesos, red, etc.) se realizaban mediante comandos ejecutados en una shell.</p> <p>Con los escritorios gr\u00e1ficos llegaron utilidades de configuraci\u00f3n pensadas para el usuario final. Muchas son front-ends que internamente lanzan comandos o editan archivos por ti. Aun as\u00ed, para administrar un sistema GNU/Linux con soltura, sigue siendo imprescindible conocer los comandos b\u00e1sicos y entender la estructura del sistema (archivos, permisos, procesos, servicios, dispositivos\u2026).</p> <p>En Lubuntu (escritorio LXQt) abrir\u00e1s la terminal con QTerminal. Desde ah\u00ed podr\u00e1s ejecutar todos los comandos del sistema.</p>"},{"location":"ud3.1/#el-interprete-de-comandos","title":"El int\u00e9rprete de comandos","text":"<p>Una shell es el int\u00e9rprete de comandos: la interfaz textual tradicional de los sistemas tipo Unix (como GNU/Linux). Recibe l\u00edneas de texto, las interpreta y ejecuta.</p> <ul> <li>Windows<ul> <li>S\u00edmbolo del sistema (cmd.exe): consola cl\u00e1sica.</li> <li>PowerShell: consola moderna con scripting basado en objetos; existe PowerShell 7 multiplataforma.</li> </ul> </li> <li>GNU/Linux (varias shells disponibles)<ul> <li>bash (Bourne Again SHell): est\u00e1ndar de facto y predeterminada en Ubuntu/Lubuntu.</li> <li>zsh: muy popular por autocompletado y personalizaci\u00f3n.</li> <li>fish: enfoque interactivo con sugerencias.</li> <li>ksh, csh/tcsh: hist\u00f3ricas, hoy menos comunes.</li> </ul> </li> </ul> <p>En Lubuntu la shell interactiva por defecto es bash, y ser\u00e1 la que utilicemos en estos apuntes.</p>"},{"location":"ud3.1/#consolas-de-texto","title":"Consolas de texto","text":"<p>Cuando Lubuntu arranca lo hace, por defecto, en sesi\u00f3n gr\u00e1fica (LXQt). Aun as\u00ed, el sistema tambi\u00e9n habilita varias consolas de texto (TTY) para abrir sesiones sin entorno gr\u00e1fico. Puedes acceder a ellas con Ctrl+Alt+F1\u2026F6 (en algunos equipos la GUI queda en otra TTY, ver nota m\u00e1s abajo).</p> <p>Para iniciar sesi\u00f3n en una consola texto, introduce usuario y contrase\u00f1a. Si la autenticaci\u00f3n es correcta aparecer\u00e1 el prompt (indicador de \u00f3rdenes). Para cerrar la sesi\u00f3n, usa el comando exit.</p> <p>Puedes mantener varias sesiones texto simult\u00e1neas (una por TTY), que consumen muy pocos recursos. Tambi\u00e9n puedes alternar entre texto y GUI en cualquier momento.</p> <p>El prompt suele terminar en $ (usuario normal) o # (superusuario). En Ubuntu/Lubuntu, por defecto se muestra as\u00ed:</p> <p><pre><code>usuario@equipo:directorio_actual$\n</code></pre> El car\u00e1cter ~ indica tu carpeta personal (abreviatura de /home/usuario).</p>"},{"location":"ud3.1/#ventana-de-terminal","title":"Ventana de terminal","text":"<p>Desde la sesi\u00f3n gr\u00e1fica tambi\u00e9n puedes ejecutar comandos en una terminal (equivalente al \u201cS\u00edmbolo del sistema\u201d en Windows). En Lubuntu la aplicaci\u00f3n por defecto es QTerminal.</p> <p>Abrir QTerminal:</p> <ol> <li>Men\u00fa LXQt (icono de Lubuntu en el panel).</li> <li>Busca \u201cQTerminal\u201d o ve a Sistema \u2192 QTerminal.</li> <li>Haz clic para abrir.</li> </ol> <p>Ventajas de la terminal gr\u00e1fica (frente a una TTY):</p> <ul> <li>Barra de desplazamiento para revisar el historial de salida.</li> <li>Pesta\u00f1as (varias terminales en una sola ventana).</li> <li>Personalizaci\u00f3n de aspecto (tema, color de fondo, fuente, tama\u00f1o).</li> <li>Copiar/pegar f\u00e1cilmente (clic derecho o atajos como Ctrl+Shift+C / Ctrl+Shift+V).</li> <li>B\u00fasqueda en el contenido de la terminal (Ctrl+Shift+F).</li> </ul>"},{"location":"ud3.1/#usuario-administrador-y-usuario-root","title":"Usuario administrador y usuario root","text":"<p>En GNU/Linux (y por tanto en Lubuntu) el usuario creado durante la instalaci\u00f3n puede realizar tareas administrativas. El superusuario con acceso total es root, y en Ubuntu/Lubuntu est\u00e1 deshabilitado por defecto.</p> <p>Cuando una aplicaci\u00f3n vaya a modificar la configuraci\u00f3n del equipo, aparecer\u00e1 un cuadro pidiendo la contrase\u00f1a del usuario administrador. En la l\u00ednea de comandos, para ejecutar acciones con privilegios se antepone sudo:</p> <pre><code>sudo comando\n</code></pre> <p>Tras introducir la contrase\u00f1a, el comando se ejecutar\u00e1 como si fuera root.</p> <p>Tambi\u00e9n es posible habilitar la cuenta root y abrir sesi\u00f3n con ella, pero por defecto en Ubuntu/Lubuntu no se permiten sesiones gr\u00e1ficas con root (solo texto), y no se recomienda habilitarla salvo necesidad.</p>"},{"location":"ud3.1/#documentacion-de-comandos","title":"Documentaci\u00f3n de comandos","text":"<p>La documentaci\u00f3n en GNU/Linux es abundante, aunque puede resultar dif\u00edcil de localizar por la gran cantidad de programas incluidos en una distribuci\u00f3n. Aun as\u00ed, todo est\u00e1 documentado y existen m\u00faltiples fuentes accesibles en l\u00ednea, gracias al esp\u00edritu colaborativo del proyecto.</p>"},{"location":"ud3.1/#documentacion-de-lubuntuubuntu","title":"Documentaci\u00f3n de Lubuntu/Ubuntu","text":"<p>Desde el portal oficial de Ubuntu/Lubuntu puedes acceder a la documentaci\u00f3n del sistema: elige la versi\u00f3n con la que trabajas y consulta gu\u00edas de tareas administrativas organizadas por categor\u00edas. Adem\u00e1s, hay foros y sitios comunitarios donde encontrar soluciones y ejemplos pr\u00e1cticos.</p>"},{"location":"ud3.1/#manual-universal-de-comandos-man","title":"Manual universal de comandos: man","text":"<p>En GNU/Linux (incluido Lubuntu) casi cada programa tiene su p\u00e1gina de manual (man page). Son la referencia b\u00e1sica para aprender sintaxis y opciones de los comandos que se ejecutan en terminal. Las man pages se instalan junto con los paquetes del sistema, por lo que solo ver\u00e1s la documentaci\u00f3n de aquello que tengas instalado y en la versi\u00f3n correspondiente.</p> <p>Adem\u00e1s de man existen las p\u00e1ginas de informaci\u00f3n de GNU (accesibles con info), que a menudo son m\u00e1s explicativas, con \u00edndice e hiperv\u00ednculos internos. En algunos casos, info re-formatea el contenido de man, pero en proyectos GNU suele incluir gu\u00edas y ejemplos m\u00e1s extensos.</p> <p>C\u00f3mo usar man:</p> <pre><code>man concepto\n</code></pre> <p>donde concepto es el nombre del comando, programa, fichero o tema que quieres consultar.</p> <p>El manual est\u00e1 dividido en secciones (1: comandos de usuario, 5: formatos/archivos, etc.). Puede haber m\u00e1s de una p\u00e1gina con el mismo nombre en secciones distintas. Si escribes solo man concepto, se abre la primera coincidencia. Para una secci\u00f3n concreta:</p> <pre><code>man 5 crontab    # Secci\u00f3n 5: formato del fichero crontab\nman crontab      # Normalmente secci\u00f3n 1: comando crontab\n</code></pre> <p>Para saber qu\u00e9 secci\u00f3n est\u00e1s leyendo, f\u00edjate en la primera l\u00ednea de la p\u00e1gina de manual: aparece el nombre y, entre par\u00e9ntesis, el n\u00famero de secci\u00f3n (p. ej., CRONTAB(1) o CRONTAB(5)).</p>"},{"location":"ud3.1/#comandos-iniciales","title":"Comandos iniciales","text":"<p>Para familiarizarnos con la l\u00ednea de comandos, veremos \u00f3rdenes b\u00e1sicas para obtener informaci\u00f3n del sistema. Indicamos sintaxis y opciones m\u00e1s habituales (las completas est\u00e1n en man).</p>"},{"location":"ud3.1/#mostrar-identificador-de-usuario","title":"Mostrar identificador de usuario","text":""},{"location":"ud3.1/#whoami","title":"whoami","text":"<p>Muestra el nombre del usuario con la sesi\u00f3n actual.</p> <p>Sintaxis</p> <pre><code>whoami [OPCIONES]\n</code></pre> <p>Opciones:</p> <ul> <li>--help\u2003Muestra la ayuda del comando.</li> <li>--version\u2003Muestra la versi\u00f3n del comando.</li> </ul>"},{"location":"ud3.1/#id","title":"id","text":"<p>Muestra informaci\u00f3n del usuario, incluyendo UID, GID y grupos.</p> <p>Sintaxis</p> <pre><code>id [OPCIONES] [USUARIO]\n</code></pre> <p>Opciones (m\u00e1s comunes):</p> <ul> <li>-u\u2003Muestra solo el UID.</li> <li>-g\u2003Muestra solo el GID.</li> <li>-G\u2003Muestra todos los grupos (IDs num\u00e9ricos).</li> <li>-n\u2003Muestra nombres en lugar de IDs (combina con -u, -g o -G).</li> <li>-r\u2003Muestra IDs reales (no efectivos), si aplica.</li> <li>--help, --version\u2003Ayuda y versi\u00f3n.</li> </ul> <pre><code>id\nid -u            # Solo UID\nid -un           # Nombre de usuario\nid -G            # IDs de grupos\nid -Gn           # Nombres de grupos\nid nombre_usuario\n</code></pre>"},{"location":"ud3.1/#mostrar-directorio-activo","title":"Mostrar directorio activo","text":""},{"location":"ud3.1/#pwd","title":"pwd","text":"<p>Muestra la ruta del directorio de trabajo (donde est\u00e1s ahora).</p> <p>Sintaxis</p> <pre><code>pwd [OPCIONES]\n</code></pre> <p>Opciones m\u00e1s comunes:</p> <ul> <li>-L, --logical\u2003Muestra la ruta l\u00f3gica (sin resolver enlaces simb\u00f3licos).</li> <li>-P, --physical\u2003Muestra la ruta f\u00edsica (resolviendo enlaces simb\u00f3licos).</li> <li>--help\u2003Ayuda del comando.</li> <li>--version\u2003Versi\u00f3n.</li> </ul> <p>Ejemplos</p> <pre><code>pwd           # Ruta actual\npwd -L        # Ruta l\u00f3gica (tal y como navegas)\npwd -P        # Ruta f\u00edsica (resuelve symlinks)\n</code></pre>"},{"location":"ud3.1/#mostrar-el-historico-de-comandos","title":"Mostrar el hist\u00f3rico de comandos","text":"<p>El comando history muestra la lista de \u00f3rdenes ejecutadas en la sesi\u00f3n de la shell.</p> <p>Sintaxis</p> <pre><code>history [N]\nhistory -c | -d POS | -a | -r | -w\n</code></pre> <p>Opciones (m\u00e1s usadas):</p> <ul> <li>N\u2003Muestra solo los N \u00faltimos comandos.</li> <li>-c\u2003Borra el hist\u00f3rico en memoria.</li> <li>-d POS\u2003Elimina la entrada en la posici\u00f3n indicada.</li> <li>-a / -w / -r\u2003A\u00f1adir / escribir / leer el hist\u00f3rico al/desde el fichero (~/.bash_history).</li> </ul>"},{"location":"ud3.1/#limpiar-la-pantalla","title":"Limpiar la pantalla","text":"<p>El comando clear limpia el contenido visible de la terminal (no borra el hist\u00f3rico).</p> <p>Sintaxis</p> <pre><code>clear\n</code></pre>"},{"location":"ud3.1/#informacion-de-la-conexion-de-red","title":"Informaci\u00f3n de la conexi\u00f3n de red","text":""},{"location":"ud3.1/#ip-recomendado","title":"ip (recomendado)","text":"<p>Sintaxis b\u00e1sica</p> <pre><code>ip addr show [INTERFAZ]   # Direcciones (IPv4/IPv6)\nip link show [INTERFAZ]   # Enlaces (estado, MAC, MTU\u2026)\nip route show             # Tabla de rutas\n</code></pre> <p>Ejemplos</p> <pre><code>ip a            # Resumen de direcciones de todas las interfaces\nip a s enp3s0   # Direcci\u00f3n de una interfaz concreta\nip r            # Rutas\nhostname -I     # (r\u00e1pido) direcciones IP del host\n</code></pre>"},{"location":"ud3.1/#ifconfig","title":"ifconfig","text":"<p>Sintaxis</p> <pre><code>ifconfig [-a] [-s] [INTERFAZ]\n</code></pre> <p>Opciones</p> <ul> <li>-a\u2003Muestra todas las interfaces.</li> <li>-s\u2003Muestra un resumen estad\u00edstico.</li> </ul>"},{"location":"ud3.1/#mostrar-la-fecha-del-sistema","title":"Mostrar la fecha del sistema","text":""},{"location":"ud3.1/#date","title":"date","text":"<p>Muestra (y puede establecer) la fecha y hora del sistema.</p> <p>Sintaxis</p> <pre><code>date [OPCIONES] [+FORMATO]\ndate [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]\n</code></pre> <p>Argumentos:</p> <ul> <li>+FORMATO\u2003Cadena de formato de salida (ver man date).</li> <li>-u|--utc|--universal\u2003Muestra la hora UTC.</li> <li>MMDDhhmm[[CC]YY][.ss]\u2003Establece fecha/hora (mes, d\u00eda, hora, min, siglo/a\u00f1o, segundos).</li> </ul> <p>Ejemplos</p> <pre><code>date                    # Fecha y hora actuales\ndate -u                 # En UTC\ndate +\"%Y-%m-%d %H:%M\"  # Formato personalizado\n</code></pre>"},{"location":"ud3.1/#cal","title":"cal","text":"<p>Muestra un calendario</p> <p>Sintaxis</p> <pre><code>cal [-3hjy] [-A N] [-B N] [[mes] a\u00f1o]\n</code></pre> <p>Argumentos:</p> <ul> <li>[[mes] a\u00f1o]\u2003Mes y a\u00f1o de referencia.</li> </ul> <p>Opciones:</p> <ul> <li>-A N\u2003Muestra N meses despu\u00e9s del mes de referencia.</li> <li>-B N\u2003Muestra N meses antes.</li> <li>-3\u2003Muestra mes anterior, actual y siguiente.</li> <li>-h\u2003No resalta el d\u00eda actual.</li> <li>-j\u2003D\u00edas julianos (conteo desde 1 de enero).</li> <li>-y\u2003A\u00f1o completo actual.</li> </ul> <p>Ejemplos</p> <pre><code>cal          # Mes actual\ncal -3       # Mes actual + anterior y siguiente\ncal 12 2025  # Diciembre de 2025\n</code></pre>"},{"location":"ud3.1/#mostrar-informacion-del-sistema","title":"Mostrar informaci\u00f3n del sistema","text":""},{"location":"ud3.1/#uname","title":"uname","text":"<p>Muestra datos b\u00e1sicos del sistema.</p> <p>Sintaxis</p> <pre><code>uname [OPCIONES]\n</code></pre> <p>Opciones m\u00e1s \u00fatiles:</p> <ul> <li>-s\u2003Nombre del kernel (por defecto si no se indica nada).</li> <li>-n\u2003Nombre de red del equipo (hostname).</li> <li>-r\u2003Versi\u00f3n (release) del kernel.</li> <li>-v\u2003Compilaci\u00f3n del kernel.</li> <li>-m\u2003Arquitectura de la m\u00e1quina (p. ej., x86_64, aarch64).</li> <li>-p\u2003Tipo de procesador (puede devolver unknown).</li> <li>-i\u2003Plataforma de hardware (puede devolver unknown).</li> <li>-o\u2003Sistema operativo.</li> <li>-a\u2003Todo en una l\u00ednea (equivale a combinar varias anteriores).</li> </ul> <p>Ejemplos</p> <pre><code>uname        # kernel (equivale a -s)\nuname -r     # versi\u00f3n del kernel\nuname -a     # resumen completo\n</code></pre>"},{"location":"ud3.1/#mostrar-nombres-del-equipo","title":"Mostrar nombres del equipo","text":""},{"location":"ud3.1/#hostname","title":"hostname","text":"<p>Muestra (o establece de forma temporal) el nombre del equipo.</p> <p>Sintaxis</p> <pre><code>hostname            # Muestra el nombre actual\nsudo hostname NUEVO # Cambia el nombre hasta el pr\u00f3ximo reinicio\n</code></pre> <p>Para cambiar el nombre de forma persistente en sistemas actuales (Lubuntu/Ubuntu con systemd), usa:</p> <pre><code>sudo hostnamectl set-hostname NUEVO_NOMBRE\n</code></pre>"},{"location":"ud3.1/#historico-de-comandos","title":"Hist\u00f3rico de comandos","text":"<p>Escribir comandos largos es propenso a errores. bash guarda un hist\u00f3rico (por defecto suele ser 500 entradas) que permite reutilizar y editar \u00f3rdenes ya escritas.</p> <p>Navegaci\u00f3n por el hist\u00f3rico:</p> <ul> <li>Flecha \u2191 o Ctrl+P \u2192 muestra el comando anterior.</li> <li>Flecha \u2193 o Ctrl+N \u2192 muestra el siguiente (si antes retrocediste).</li> <li>Flechas \u2190 / \u2192 \u2192 editar dentro de la l\u00ednea mostrada.</li> </ul> <p>Autocompletado (Tab):</p> <ul> <li>Pulsa Tab para completar rutas/nombres de archivo a partir de lo tecleado.</li> <li>Si hay una \u00fanica coincidencia, completa el nombre (en directorios a\u00f1ade /).</li> <li>Si hay varias, completa hasta la parte com\u00fan; con Tab de nuevo suele listar opciones.</li> </ul> <p>Ver el listado (recordatorio):</p> <ul> <li>history \u2192 muestra el hist\u00f3rico (m\u00e1s detalles en el apartado espec\u00edfico).</li> </ul>"}]}